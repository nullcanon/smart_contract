{
	"id": "3190d5c6feaa7e2b42bd8f685c3d1d70",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/NFTBreed.sol": {
				"content": "// contracts/Farming.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\n\r\n\r\nlibrary LibSafeMathForUint256Utils {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMathForUint256: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMathForUint256: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0 || b == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMathForUint256: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMathForUint256: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMathForUint256: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    function power(uint256 a, uint256 b) internal pure returns (uint256){\r\n\r\n        if(a == 0) return 0;\r\n        if(b == 0) return 1;\r\n\r\n        uint256 c = 1;\r\n        for(uint256 i = 0; i < b; i++){\r\n            c = mul(c, a);\r\n        }\r\n    }\r\n\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\nlibrary LibArrayForUint256Utils {\r\n\r\n\t/**\r\n\t * @dev Searches a sortd uint256 array and returns the first element index that \r\n\t * match the key value, Time complexity O(log n)\r\n\t *\r\n\t * @param array is expected to be sorted in ascending order\r\n\t * @param key is element \r\n\t *\r\n\t * @return if matches key in the array return true,else return false \r\n\t * @return the first element index that match the key value,if not exist,return 0\r\n\t */\r\n\tfunction binarySearch(uint256[] storage array, uint256 key) internal view returns (bool, uint) {\r\n        if(array.length == 0){\r\n        \treturn (false, 0);\r\n        }\r\n\r\n        uint256 low = 0;\r\n        uint256 high = array.length-1;\r\n\r\n        while(low <= high){\r\n        \tuint256 mid = LibSafeMathForUint256Utils.average(low, high);\r\n        \tif(array[mid] == key){\r\n        \t\treturn (true, mid);\r\n        \t}else if (array[mid] > key) {\r\n                high = mid - 1;\r\n            } else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n\r\n        return (false, 0);\r\n    }\r\n\r\n    function firstIndexOf(uint256[] storage array, uint256 key) internal view returns (bool, uint256) {\r\n\r\n    \tif(array.length == 0){\r\n    \t\treturn (false, 0);\r\n    \t}\r\n\r\n    \tfor(uint256 i = 0; i < array.length; i++){\r\n    \t\tif(array[i] == key){\r\n    \t\t\treturn (true, i);\r\n    \t\t}\r\n    \t}\r\n    \treturn (false, 0);\r\n    }\r\n\r\n    function reverse(uint256[] storage array) internal {\r\n        uint256 temp;\r\n        for (uint i = 0; i < array.length / 2; i++) {\r\n            temp = array[i];\r\n            array[i] = array[array.length - 1 - i];\r\n            array[array.length - 1 - i] = temp;\r\n        }\r\n    }\r\n\r\n    function equals(uint256[] storage a, uint256[] storage b) internal view returns (bool){\r\n    \tif(a.length != b.length){\r\n    \t\treturn false;\r\n    \t}\r\n    \tfor(uint256 i = 0; i < a.length; i++){\r\n    \t\tif(a[i] != b[i]){\r\n    \t\t\treturn false;\r\n    \t\t}\r\n    \t}\r\n    \treturn true;\r\n    }\r\n\r\n    function removeByIndex(uint256[] storage array, uint index) internal{\r\n    \trequire(index < array.length, \"ArrayForUint256: index out of bounds\");\r\n\r\n        while (index < array.length - 1) {\r\n            array[index] = array[index + 1];\r\n            index++;\r\n        }\r\n        array.pop();\r\n    }\r\n    \r\n    function removeByValue(uint256[] storage array, uint256 value) internal{\r\n        uint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(isIn){\r\n          removeByIndex(array, index);\r\n        }\r\n    }\r\n\r\n    function addValue(uint256[] storage array, uint256 value) internal{\r\n    \tuint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(!isIn){\r\n        \tarray.push(value);\r\n        }\r\n    }\r\n\r\n    function extend(uint256[] storage a, uint256[] memory b) internal {\r\n    \tif(b.length != 0){\r\n    \t\tfor(uint i = 0; i < b.length; i++){\r\n    \t\t\ta.push(b[i]);\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    function distinct(uint256[] storage array) internal returns (uint256 length) {\r\n        bool contains;\r\n        uint index;\r\n        for (uint i = 0; i < array.length; i++) {\r\n            contains = false;\r\n            index = 0;\r\n            uint j = i+1;\r\n            for(;j < array.length; j++){\r\n                if(array[j] == array[i]){\r\n                    contains =true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (contains) {\r\n                for (j = index; j < array.length - 1; j++){\r\n                    array[j] = array[j + 1];\r\n                }\r\n                array.pop();\r\n                i--;\r\n            }\r\n        }\r\n        length = array.length;\r\n    }\r\n\r\n    function max(uint256[] storage array) internal view returns (uint256 maxValue, uint256 maxIndex) {\r\n        maxValue = array[0];\r\n        maxIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] > maxValue){\r\n                maxValue = array[i];\r\n                maxIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {\r\n        minValue = array[0];\r\n        minIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] < minValue){\r\n                minValue = array[i];\r\n                minIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract Breed is Ownable , ERC1155Holder{\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    struct NftInfo {\r\n        address contractAddress;\r\n        uint256 tokenId;\r\n    }\r\n    \r\n    struct UserInfo {\r\n        NftInfo nftA;\r\n        NftInfo nftB;\r\n        address t;\r\n        uint256 startTimestamp;\r\n        // nft_type => (token_id => breed_time)\r\n        mapping(address => mapping(uint256 => uint)) nftBreedTimes;\r\n    }\r\n\r\n    uint256 private breedInterval = 7200;\r\n    IERC20 public feeToken;\r\n    address private feeAddress;\r\n    uint256 private feeAmount;\r\n    uint randNonce = 0;\r\n\r\n    address private luckybeeMintAddress;\r\n    address private hashbeeMintAddress;\r\n    address private knightbeeMintAddress;\r\n    address private queenbeeMintAddress;\r\n    uint256 public JPDA1 = 57;\r\n    uint256 public JPDA2 = 82;\r\n    uint256 public JPDA3 = 100;\r\n\r\n    \r\n    mapping(address => UserInfo) public users;\r\n    mapping(address => uint256[]) private nftIds;\r\n    mapping(address => uint) private breedTimeLimit;\r\n\r\n    event Mating(address indexed user, address indexed nftContractA, address indexed nftContractB, uint256 tokenIdA, uint256 tokenIdB);\r\n    event Cancel(address indexed user, address indexed nftContractA, address indexed nftContractB, uint256 tokenIdA, uint256 tokenIdB);\r\n    event Claim(address indexed user, address indexed nftContract, uint256 tokenId);\r\n    \r\n    constructor() {\r\n    }\r\n\r\n    function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {\r\n        luckybeeMintAddress = luckybeeMint;\r\n        hashbeeMintAddress = hashbeeMint;\r\n        knightbeeMintAddress = knightbeeMint;\r\n        queenbeeMintAddress = queenbeeMint;\r\n        breedTimeLimit[luckybeeMintAddress] = 1;\r\n        breedTimeLimit[hashbeeMintAddress] = 1;\r\n        breedTimeLimit[knightbeeMintAddress] = 1;\r\n        breedTimeLimit[queenbeeMintAddress] = 2;\r\n    }\r\n\r\n    function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {\r\n        JPDA1 = _JPDA1;\r\n        JPDA2 = _JPDA2;\r\n        JPDA3 = _JPDA3;\r\n    }\r\n\r\n    function addNFTBatch(\r\n        address nftContractAddress,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) external onlyOwner {\r\n        LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids);\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function addNftBatchWithNumber(\r\n        address nftContractAddress,\r\n        uint256 start,\r\n        uint256 idsNumber\r\n    ) public {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        require(start > 0, \"start must more than zero\");\r\n        for (uint256 i = (idsNumber + start - 1); i >= start; i--) {\r\n            ids[i-start] = i;\r\n            amounts[i-start] = 1;\r\n            nftIds[nftContractAddress].push(i);\r\n        }\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function getUserOvipositionTime(address user) public view returns (uint256){\r\n        if (users[user].startTimestamp == 0) {\r\n            return 0;\r\n        }\r\n        return users[user].startTimestamp + breedInterval;\r\n    }\r\n\r\n    function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){\r\n        if (users[user].startTimestamp == 0) {\r\n            return (address(0), address(0), 0, 0);\r\n        }\r\n        return (users[user].nftA.contractAddress, users[user].nftB.contractAddress, users[user].nftA.tokenId, users[user].nftB.tokenId);\r\n    }\r\n\r\n    function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp == 0, \"Only breed once at a time\");\r\n        require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\");\r\n        require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\");\r\n\r\n        feeToken.safeTransferFrom(\r\n            msg.sender,\r\n            feeAddress,\r\n            feeAmount\r\n        );\r\n        IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\");\r\n        IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\");\r\n        \r\n        user.startTimestamp = block.timestamp;\r\n        user.nftA.contractAddress = nftContractA;\r\n        user.nftA.tokenId = tokenIdA;\r\n        user.nftB.contractAddress = nftContractB;\r\n        user.nftB.tokenId = tokenIdB;\r\n\r\n        uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100;\r\n        randNonce++;\r\n\r\n        address nftMint;\r\n        // nft t\r\n        if(random < JPDA1) {\r\n            nftMint = luckybeeMintAddress;\r\n        } else if (random >= JPDA1 && random < JPDA2 ) {\r\n            nftMint = hashbeeMintAddress;\r\n        } else if (random >= JPDA2 && random < JPDA3) {\r\n            nftMint = knightbeeMintAddress;\r\n        } else {\r\n            nftMint = queenbeeMintAddress;\r\n        }\r\n        user.t = nftMint;\r\n        user.nftBreedTimes[nftContractA][tokenIdA] += 1;\r\n        user.nftBreedTimes[nftContractB][tokenIdB] += 1;\r\n        emit Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId);\r\n    }\r\n\r\n    function cancel() public {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp != 0, \"not start mating\");\r\n\r\n        IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\");\r\n        IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\");\r\n        user.startTimestamp = 0;\r\n        emit Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId);\r\n    }\r\n\r\n    function claim() public {\r\n        uint256 nowTimestamp = block.timestamp;\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.startTimestamp != 0, \"not start mating\");\r\n        require(user.startTimestamp + breedInterval >= nowTimestamp, \"not finish mating\");\r\n\r\n        address nftMint = user.t;\r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]);\r\n        LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index);\r\n\r\n        IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\");\r\n        emit Claim(msg.sender, nftMint, minTokenId);\r\n    }\r\n    \r\n    function nftCount(address nft) public view returns (uint256) {\r\n        return nftIds[nft].length;\r\n    }\r\n\r\n    function urgentWithdraw(address nftContractAddress) public onlyOwner {\r\n        uint256 length = nftIds[nftContractAddress].length;\r\n        uint256[] memory amounts = new uint256[](length);\r\n        for (uint256 i = 0; i < length; i++) {\r\n            amounts[i] = 1;\r\n        }\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\");\r\n        delete nftIds[nftContractAddress];\r\n    }\r\n\r\n    function setNFT(address nft, address to) public onlyOwner {\r\n        UserInfo storage nftStore = users[to];\r\n        nftStore.t = nft;\r\n        if (nftStore.startTimestamp == 0) {\r\n            breedTimeLimit[luckybeeMintAddress] = 1;\r\n            breedTimeLimit[hashbeeMintAddress] = 1;\r\n            breedTimeLimit[knightbeeMintAddress] = 1;\r\n            breedTimeLimit[queenbeeMintAddress] = 2;\r\n        }\r\n    }\r\n\r\n    function setFeeAddress(address add) public onlyOwner {\r\n        feeAddress = add;\r\n    }\r\n\r\n    function setFeeAmount(uint256 amount) public onlyOwner {\r\n        feeAmount = amount;\r\n    }\r\n\r\n    function setFeeMintAddress(address mint) public onlyOwner {\r\n        feeToken = IERC20(mint);\r\n    }\r\n\r\n    function getFeeMintAddress() public view returns (address) {\r\n        return address(feeToken);\r\n    }\r\n\r\n    function setBreedInterval(uint256 interval) public onlyOwner {\r\n        breedInterval = interval;\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1155Receiver.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ncontract ERC1155Holder is ERC1155Receiver {\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\n        external\n        view\n        returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC1155Receiver.sol\";\nimport \"../../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n        @dev Handles the receipt of a single ERC1155 token type. This function is\n        called at the end of a `safeTransferFrom` after the balance has been updated.\n        To accept the transfer, this must return\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n        (i.e. 0xf23a6e61, or its own function selector).\n        @param operator The address which initiated the transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param id The ID of the token being transferred\n        @param value The amount of tokens being transferred\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n    */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\n        is called at the end of a `safeBatchTransferFrom` after the balances have\n        been updated. To accept the transfer(s), this must return\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n        (i.e. 0xbc197c81, or its own function selector).\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\n        @param from The address which previously owned the token\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\n        @param data Additional data with no specified format\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n    */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/NFTBreed.sol": {
				"Breed": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "Cancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "Mating",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "JPDA1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPDA2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "JPDA3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addNFTBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "addNftBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeMintAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserMatingNft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserOvipositionTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftContractB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenIdA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenIdB",
									"type": "uint256"
								}
							],
							"name": "mating",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								}
							],
							"name": "nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "interval",
									"type": "uint256"
								}
							],
							"name": "setBreedInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "luckybeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "hashbeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "knightbeeMint",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "queenbeeMint",
									"type": "address"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								}
							],
							"name": "setFeeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "setFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mint",
									"type": "address"
								}
							],
							"name": "setFeeMintAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_JPDA1",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_JPDA2",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_JPDA3",
									"type": "uint256"
								}
							],
							"name": "setJPDA",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nft",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "setNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"name": "urgentWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Breed.NftInfo",
									"name": "nftA",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "contractAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										}
									],
									"internalType": "struct Breed.NftInfo",
									"name": "nftB",
									"type": "tuple"
								},
								{
									"internalType": "address",
									"name": "t",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "startTimestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":6648:14889  contract Breed is Ownable , ERC1155Holder{... */\n  mstore(0x40, 0x80)\n    /* \"nft/NFTBreed.sol\":7140:7144  7200 */\n  0x1c20\n    /* \"nft/NFTBreed.sol\":7108:7144  uint256 private breedInterval = 7200 */\n  0x01\n  sstore\n    /* \"nft/NFTBreed.sol\":7262:7263  0 */\n  0x00\n    /* \"nft/NFTBreed.sol\":7245:7263  uint randNonce = 0 */\n  0x05\n  sstore\n    /* \"nft/NFTBreed.sol\":7463:7465  57 */\n  0x39\n    /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n  0x0a\n  sstore\n    /* \"nft/NFTBreed.sol\":7495:7497  82 */\n  0x52\n    /* \"nft/NFTBreed.sol\":7472:7497  uint256 public JPDA2 = 82 */\n  0x0b\n  sstore\n    /* \"nft/NFTBreed.sol\":7527:7530  100 */\n  0x64\n    /* \"nft/NFTBreed.sol\":7504:7530  uint256 public JPDA3 = 100 */\n  0x0c\n  sstore\n    /* \"nft/NFTBreed.sol\":8066:8088  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_8\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"nft/NFTBreed.sol\":6648:14889  contract Breed is Ownable , ERC1155Holder{... */\n  jump(tag_10)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"nft/NFTBreed.sol\":6648:14889  contract Breed is Ownable , ERC1155Holder{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":6648:14889  contract Breed is Ownable , ERC1155Holder{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79c5e977\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc4091443\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xec3c6dee\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xec3c6dee\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xed9371d7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc4091443\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc971ebb3\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x9fdd3a3f\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9fdd3a3f\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbf90fc1e\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x79c5e977\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8705fcd4\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x5c39331c\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x63c66891\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x63c66891\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x647846a5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6b392680\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x5c39331c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5dada3bb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5dbc3838\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x1df0c04c\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1df0c04c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3f3ed4ca\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b02218f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x087bc228\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x19b8094b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n    tag_4:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      stop\n        /* \"nft/NFTBreed.sol\":14672:14774  function getFeeMintAddress() public view returns (address) {... */\n    tag_5:\n        /* \"nft/NFTBreed.sol\":14757:14765  feeToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"nft/NFTBreed.sol\":14672:14774  function getFeeMintAddress() public view returns (address) {... */\n    tag_48:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1253:1285   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1235:1286   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1223:1225   */\n      0x20\n        /* \"#utility.yul\":1208:1226   */\n      add\n        /* \"nft/NFTBreed.sol\":14672:14774  function getFeeMintAddress() public view returns (address) {... */\n      tag_42\n        /* \"#utility.yul\":1089:1292   */\n      jump\n        /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n    tag_6:\n      tag_52\n      sload(0x0a)\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1443:1468   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"nft/NFTBreed.sol\":7440:7465  uint256 public JPDA1 = 57 */\n      tag_42\n        /* \"#utility.yul\":1297:1474   */\n      jump\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n    tag_7:\n      tag_44\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n    tag_8:\n      tag_44\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":12717:13355  function claim() public {... */\n    tag_9:\n      tag_44\n      tag_65\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_10:\n      tag_66\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2605:2620   */\n      swap6\n      dup7\n      and\n        /* \"#utility.yul\":2587:2621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2657:2672   */\n      swap5\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2652:2654   */\n      0x20\n        /* \"#utility.yul\":2637:2655   */\n      dup6\n      add\n        /* \"#utility.yul\":2630:2673   */\n      mstore\n        /* \"#utility.yul\":2689:2707   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":2682:2716   */\n      mstore\n        /* \"#utility.yul\":2747:2749   */\n      0x60\n        /* \"#utility.yul\":2732:2750   */\n      dup3\n      add\n        /* \"#utility.yul\":2725:2759   */\n      mstore\n        /* \"#utility.yul\":2536:2539   */\n      0x80\n        /* \"#utility.yul\":2521:2540   */\n      add\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n      tag_42\n        /* \"#utility.yul\":2318:2765   */\n      jump\n        /* \"nft/NFTBreed.sol\":14564:14664  function setFeeMintAddress(address mint) public onlyOwner {... */\n    tag_11:\n      tag_44\n      tag_73\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n    tag_12:\n      tag_52\n      tag_76\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n    tag_13:\n      tag_44\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7151:7173  IERC20 public feeToken */\n    tag_14:\n      sload(0x02)\n      tag_48\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"nft/NFTBreed.sol\":14464:14556  function setFeeAmount(uint256 amount) public onlyOwner {... */\n    tag_15:\n      tag_44\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_44\n      tag_92\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":14782:14886  function setBreedInterval(uint256 interval) public onlyOwner {... */\n    tag_17:\n      tag_44\n      tag_94\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":14368:14456  function setFeeAddress(address add) public onlyOwner {... */\n    tag_18:\n      tag_44\n      tag_97\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_19:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_48)\n        /* \"nft/NFTBreed.sol\":13947:14360  function setNFT(address nft, address to) public onlyOwner {... */\n    tag_20:\n      tag_44\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7545:7586  mapping(address => UserInfo) public users */\n    tag_21:\n      tag_106\n      tag_107\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_107:\n      0x0d\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      dup3\n      dup6\n      add\n      mstore\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      swap1\n      swap6\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      dup2\n      and\n      dup6\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x04\n      dup3\n      add\n      sload\n      0x05\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap4\n      swap3\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      dup5\n      jump\n    tag_106:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5323:5335   */\n      dup6\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5319:5357   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":5307:5358   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5407:5411   */\n      0x20\n        /* \"#utility.yul\":5396:5412   */\n      swap7\n      dup8\n      add\n        /* \"#utility.yul\":5390:5413   */\n      mload\n        /* \"#utility.yul\":5374:5388   */\n      dup8\n      dup4\n      add\n        /* \"#utility.yul\":5367:5414   */\n      mstore\n        /* \"#utility.yul\":5323:5335   */\n      dup6\n      mload\n        /* \"#utility.yul\":5319:5357   */\n      dup2\n      and\n        /* \"#utility.yul\":5839:5857   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":5307:5358   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5396:5412   */\n      swap5\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":5390:5413   */\n      mload\n        /* \"#utility.yul\":5374:5388   */\n      0x60\n      dup6\n      add\n        /* \"#utility.yul\":5367:5414   */\n      mstore\n        /* \"#utility.yul\":5895:5927   */\n      swap2\n      and\n        /* \"#utility.yul\":5889:5892   */\n      0x80\n        /* \"#utility.yul\":5874:5893   */\n      dup4\n      add\n        /* \"#utility.yul\":5867:5928   */\n      mstore\n        /* \"#utility.yul\":5915:5918   */\n      0xa0\n        /* \"#utility.yul\":5944:5963   */\n      dup3\n      add\n        /* \"#utility.yul\":5937:5972   */\n      mstore\n        /* \"#utility.yul\":5739:5742   */\n      0xc0\n        /* \"#utility.yul\":5724:5743   */\n      add\n        /* \"nft/NFTBreed.sol\":7545:7586  mapping(address => UserInfo) public users */\n      tag_42\n        /* \"#utility.yul\":5425:5978   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_22:\n      tag_111\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_111:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":7628:7661   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7610:7662   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7598:7600   */\n      0x20\n        /* \"#utility.yul\":7583:7601   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_42\n        /* \"#utility.yul\":7466:7668   */\n      jump\n        /* \"nft/NFTBreed.sol\":10363:12158  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n    tag_23:\n      tag_44\n      tag_118\n      calldatasize\n      0x04\n      tag_119\n      jump\t// in\n    tag_118:\n      tag_120\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":13480:13939  function urgentWithdraw(address nftContractAddress) public onlyOwner {... */\n    tag_24:\n      tag_44\n      tag_122\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":13367:13472  function nftCount(address nft) public view returns (uint256) {... */\n    tag_25:\n      tag_52\n      tag_125\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13446:13457  nftIds[nft] */\n      and\n        /* \"nft/NFTBreed.sol\":13419:13426  uint256 */\n      0x00\n        /* \"nft/NFTBreed.sol\":13446:13457  nftIds[nft] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13446:13452  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13446:13457  nftIds[nft] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":13446:13464  nftIds[nft].length */\n      sload\n      swap1\n        /* \"nft/NFTBreed.sol\":13367:13472  function nftCount(address nft) public view returns (uint256) {... */\n      jump\n        /* \"nft/NFTBreed.sol\":12166:12709  function cancel() public {... */\n    tag_26:\n      tag_44\n      tag_129\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":7472:7497  uint256 public JPDA2 = 82 */\n    tag_27:\n      tag_52\n      sload(0x0b)\n      dup2\n      jump\n        /* \"nft/NFTBreed.sol\":7504:7530  uint256 public JPDA3 = 100 */\n    tag_28:\n      tag_52\n      sload(0x0c)\n      dup2\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_29:\n      tag_111\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_44\n      tag_142\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_41:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_146\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_146:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n    tag_47:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"nft/NFTBreed.sol\":8233:8252  luckybeeMintAddress */\n      0x06\n        /* \"nft/NFTBreed.sol\":8233:8267  luckybeeMintAddress = luckybeeMint */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap7\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":8278:8296  hashbeeMintAddress */\n      0x07\n        /* \"nft/NFTBreed.sol\":8278:8310  hashbeeMintAddress = hashbeeMint */\n      dup1\n      sload\n      dup3\n      and\n      swap6\n      dup8\n      and\n      swap6\n      swap1\n      swap6\n      or\n      dup6\n      sstore\n        /* \"nft/NFTBreed.sol\":8321:8341  knightbeeMintAddress */\n      0x08\n        /* \"nft/NFTBreed.sol\":8321:8357  knightbeeMintAddress = knightbeeMint */\n      dup1\n      sload\n      dup3\n      and\n      swap5\n      dup8\n      and\n      swap5\n      swap1\n      swap5\n      or\n      dup5\n      sstore\n        /* \"nft/NFTBreed.sol\":8368:8387  queenbeeMintAddress */\n      0x09\n        /* \"nft/NFTBreed.sol\":8368:8402  queenbeeMintAddress = queenbeeMint */\n      dup1\n      sload\n      swap1\n      swap2\n      and\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap3\n      or\n      dup3\n      sstore\n      0x00\n        /* \"nft/NFTBreed.sol\":8413:8448  breedTimeLimit[luckybeeMintAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":8413:8427  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":8413:8448  breedTimeLimit[luckybeeMintAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      0x01\n        /* \"nft/NFTBreed.sol\":8413:8452  breedTimeLimit[luckybeeMintAddress] = 1 */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8478:8496  hashbeeMintAddress */\n      swap5\n      sload\n      dup7\n      and\n        /* \"nft/NFTBreed.sol\":8463:8497  breedTimeLimit[hashbeeMintAddress] */\n      dup3\n      mstore\n      dup1\n      dup3\n      keccak256\n        /* \"nft/NFTBreed.sol\":8463:8501  breedTimeLimit[hashbeeMintAddress] = 1 */\n      dup6\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8527:8547  knightbeeMintAddress */\n      swap3\n      sload\n      dup6\n      and\n        /* \"nft/NFTBreed.sol\":8512:8548  breedTimeLimit[knightbeeMintAddress] */\n      dup2\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":8512:8552  breedTimeLimit[knightbeeMintAddress] = 1 */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"nft/NFTBreed.sol\":8578:8597  queenbeeMintAddress */\n      sload\n      swap1\n      swap3\n      and\n        /* \"nft/NFTBreed.sol\":8563:8598  breedTimeLimit[queenbeeMintAddress] */\n      dup2\n      mstore\n      keccak256\n        /* \"nft/NFTBreed.sol\":8601:8602  2 */\n      0x02\n        /* \"nft/NFTBreed.sol\":8563:8602  breedTimeLimit[queenbeeMintAddress] = 2 */\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":8096:8610  function setConfig(address luckybeeMint, address hashbeeMint, address knightbeeMint, address queenbeeMint) external onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n    tag_59:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_160:\n        /* \"nft/NFTBreed.sol\":8713:8718  JPDA1 */\n      0x0a\n        /* \"nft/NFTBreed.sol\":8713:8727  JPDA1 = _JPDA1 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":8738:8743  JPDA2 */\n      0x0b\n        /* \"nft/NFTBreed.sol\":8738:8752  JPDA2 = _JPDA2 */\n      sstore\n        /* \"nft/NFTBreed.sol\":8763:8768  JPDA3 */\n      0x0c\n        /* \"nft/NFTBreed.sol\":8763:8777  JPDA3 = _JPDA3 */\n      sstore\n        /* \"nft/NFTBreed.sol\":8618:8785  function setJPDA(uint256 _JPDA1, uint256 _JPDA2, uint256 _JPDA3) external onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n    tag_63:\n        /* \"nft/NFTBreed.sol\":9284:9304  uint256[] memory ids */\n      0x00\n        /* \"nft/NFTBreed.sol\":9321:9330  idsNumber */\n      dup2\n        /* \"nft/NFTBreed.sol\":9307:9331  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_165\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_167\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_167:\n      pop\n        /* \"nft/NFTBreed.sol\":9284:9331  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9342:9366  uint256[] memory amounts */\n      0x00\n        /* \"nft/NFTBreed.sol\":9383:9392  idsNumber */\n      dup3\n        /* \"nft/NFTBreed.sol\":9369:9393  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_169\n      jumpi\n      tag_169\n      tag_166\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_170:\n      pop\n        /* \"nft/NFTBreed.sol\":9342:9393  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9420:9421  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":9412:9417  start */\n      dup5\n        /* \"nft/NFTBreed.sol\":9412:9421  start > 0 */\n      gt\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9249:9251   */\n      0x20\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9231:9252   */\n      mstore\n        /* \"#utility.yul\":9288:9290   */\n      0x19\n        /* \"#utility.yul\":9268:9286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9261:9291   */\n      mstore\n        /* \"#utility.yul\":9327:9354   */\n      0x7374617274206d757374206d6f7265207468616e207a65726f00000000000000\n        /* \"#utility.yul\":9307:9325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9300:9355   */\n      mstore\n        /* \"#utility.yul\":9372:9390   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n      tag_153\n        /* \"#utility.yul\":9047:9396   */\n      jump\n        /* \"nft/NFTBreed.sol\":9404:9451  require(start > 0, \"start must more than zero\") */\n    tag_171:\n        /* \"nft/NFTBreed.sol\":9467:9476  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":9500:9501  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":9480:9497  idsNumber + start */\n      tag_177\n        /* \"nft/NFTBreed.sol\":9492:9497  start */\n      dup7\n        /* \"nft/NFTBreed.sol\":9480:9489  idsNumber */\n      dup7\n        /* \"nft/NFTBreed.sol\":9480:9497  idsNumber + start */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"nft/NFTBreed.sol\":9480:9501  idsNumber + start - 1 */\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"nft/NFTBreed.sol\":9467:9502  uint256 i = (idsNumber + start - 1) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n    tag_174:\n        /* \"nft/NFTBreed.sol\":9509:9514  start */\n      dup5\n        /* \"nft/NFTBreed.sol\":9504:9505  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":9504:9514  i >= start */\n      lt\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n      tag_175\n      jumpi\n        /* \"nft/NFTBreed.sol\":9551:9552  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":9536:9539  ids */\n      dup4\n        /* \"nft/NFTBreed.sol\":9540:9547  i-start */\n      tag_181\n        /* \"nft/NFTBreed.sol\":9542:9547  start */\n      dup8\n        /* \"nft/NFTBreed.sol\":9551:9552  i */\n      dup4\n        /* \"nft/NFTBreed.sol\":9540:9547  i-start */\n      tag_180\n      jump\t// in\n    tag_181:\n        /* \"nft/NFTBreed.sol\":9536:9548  ids[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_183\n      jumpi\n      tag_183\n      tag_184\n      jump\t// in\n    tag_183:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/NFTBreed.sol\":9536:9552  ids[i-start] = i */\n      mstore\n        /* \"nft/NFTBreed.sol\":9586:9587  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":9567:9574  amounts */\n      dup3\n        /* \"nft/NFTBreed.sol\":9575:9582  i-start */\n      tag_185\n        /* \"nft/NFTBreed.sol\":9577:9582  start */\n      dup8\n        /* \"nft/NFTBreed.sol\":9575:9576  i */\n      dup5\n        /* \"nft/NFTBreed.sol\":9575:9582  i-start */\n      tag_180\n      jump\t// in\n    tag_185:\n        /* \"nft/NFTBreed.sol\":9567:9583  amounts[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_187\n      jumpi\n      tag_187\n      tag_184\n      jump\t// in\n    tag_187:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":9567:9587  amounts[i-start] = 1 */\n      swap2\n      swap1\n      swap2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9602:9628  nftIds[nftContractAddress] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9602:9608  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":9602:9628  nftIds[nftContractAddress] */\n      dup3\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":9602:9636  nftIds[nftContractAddress].push(i) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n      add\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":9634:9635  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":9516:9519  i-- */\n      tag_189\n        /* \"nft/NFTBreed.sol\":9634:9635  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":9516:9519  i-- */\n      tag_190\n      jump\t// in\n    tag_189:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9462:9648  for (uint256 i = (idsNumber + start - 1); i >= start; i--) {... */\n      jump(tag_174)\n    tag_175:\n      pop\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9658:9708  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup7\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_191\n      swap1\n        /* \"nft/NFTBreed.sol\":9709:9719  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":9729:9733  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":9736:9739  ids */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9741:9748  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9658:9753  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_191:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9273:9761  {... */\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":9139:9761  function addNftBatchWithNumber(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":12717:13355  function claim() public {... */\n    tag_65:\n        /* \"nft/NFTBreed.sol\":12831:12841  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":12752:12772  uint256 nowTimestamp */\n      0x00\n        /* \"nft/NFTBreed.sol\":12825:12842  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":12825:12830  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":12825:12842  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":12861:12880  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12775:12790  block.timestamp */\n      timestamp\n      swap3\n        /* \"nft/NFTBreed.sol\":12861:12885  user.startTimestamp != 0 */\n      sub\n        /* \"nft/NFTBreed.sol\":12853:12906  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11605:11607   */\n      0x20\n        /* \"nft/NFTBreed.sol\":12853:12906  require(user.startTimestamp != 0, \"not start mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11587:11608   */\n      mstore\n        /* \"#utility.yul\":11644:11646   */\n      0x10\n        /* \"#utility.yul\":11624:11642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11617:11647   */\n      mstore\n      shl(0x80, 0x6e6f74207374617274206d6174696e67)\n        /* \"#utility.yul\":11663:11681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11656:11702   */\n      mstore\n        /* \"#utility.yul\":11719:11737   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":12853:12906  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_153\n        /* \"#utility.yul\":11403:11743   */\n      jump\n        /* \"nft/NFTBreed.sol\":12853:12906  require(user.startTimestamp != 0, \"not start mating\") */\n    tag_197:\n        /* \"nft/NFTBreed.sol\":12964:12976  nowTimestamp */\n      dup2\n        /* \"nft/NFTBreed.sol\":12947:12960  breedInterval */\n      sload(0x01)\n        /* \"nft/NFTBreed.sol\":12925:12929  user */\n      dup3\n        /* \"nft/NFTBreed.sol\":12925:12944  user.startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12925:12960  user.startTimestamp + breedInterval */\n      tag_200\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_200:\n        /* \"nft/NFTBreed.sol\":12925:12976  user.startTimestamp + breedInterval >= nowTimestamp */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":12917:12998  require(user.startTimestamp + breedInterval >= nowTimestamp, \"not finish mating\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11950:11952   */\n      0x20\n        /* \"nft/NFTBreed.sol\":12917:12998  require(user.startTimestamp + breedInterval >= nowTimestamp, \"not finish mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11932:11953   */\n      mstore\n        /* \"#utility.yul\":11989:11991   */\n      0x11\n        /* \"#utility.yul\":11969:11987   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11962:11992   */\n      mstore\n      shl(0x78, 0x6e6f742066696e697368206d6174696e67)\n        /* \"#utility.yul\":12008:12026   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12001:12048   */\n      mstore\n        /* \"#utility.yul\":12065:12083   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":12917:12998  require(user.startTimestamp + breedInterval >= nowTimestamp, \"not finish mating\") */\n      tag_153\n        /* \"#utility.yul\":11748:12089   */\n      jump\n        /* \"nft/NFTBreed.sol\":12917:12998  require(user.startTimestamp + breedInterval >= nowTimestamp, \"not finish mating\") */\n    tag_201:\n        /* \"nft/NFTBreed.sol\":13029:13035  user.t */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"nft/NFTBreed.sol\":13011:13026  address nftMint */\n      0x00\n        /* \"nft/NFTBreed.sol\":13112:13127  nftIds[nftMint] */\n      dup2\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13112:13118  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13112:13127  nftIds[nftMint] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13011:13026  address nftMint */\n      dup2\n      swap1\n        /* \"nft/NFTBreed.sol\":13084:13128  LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      tag_204\n      swap1\n        /* \"nft/NFTBreed.sol\":13084:13111  LibArrayForUint256Utils.min */\n      tag_205\n        /* \"nft/NFTBreed.sol\":13084:13128  LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      jump\t// in\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13177:13192  nftIds[nftMint] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13177:13183  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13177:13192  nftIds[nftMint] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":13046:13128  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      swap2\n      swap4\n      pop\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":13139:13200  LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index) */\n      tag_206\n      swap1\n        /* \"nft/NFTBreed.sol\":13046:13128  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds[nftMint]) */\n      dup3\n        /* \"nft/NFTBreed.sol\":13139:13176  LibArrayForUint256Utils.removeByIndex */\n      tag_207\n        /* \"nft/NFTBreed.sol\":13139:13200  LibArrayForUint256Utils.removeByIndex(nftIds[nftMint], index) */\n      jump\t// in\n    tag_206:\n        /* \"nft/NFTBreed.sol\":13213:13293  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13213:13247  IERC1155(nftMint).safeTransferFrom */\n      dup5\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"nft/NFTBreed.sol\":13213:13293  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      tag_208\n      swap1\n        /* \"nft/NFTBreed.sol\":13256:13260  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":13263:13273  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":13275:13285  minTokenId */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":13287:13288  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":13213:13293  IERC1155(nftMint).safeTransferFrom(address(this), msg.sender, minTokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_208:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":13309:13347  Claim(msg.sender, nftMint, minTokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":1443:1468   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13309:13347  Claim(msg.sender, nftMint, minTokenId) */\n      dup7\n      and\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":13315:13325  msg.sender */\n      caller\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":13309:13347  Claim(msg.sender, nftMint, minTokenId) */\n      0x70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068\n      swap1\n        /* \"#utility.yul\":1431:1433   */\n      0x20\n        /* \"#utility.yul\":1416:1434   */\n      add\n        /* \"nft/NFTBreed.sol\":13309:13347  Claim(msg.sender, nftMint, minTokenId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"nft/NFTBreed.sol\":12741:13355  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12717:13355  function claim() public {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":10063:10070  address */\n      0x00\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10113:10118  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10113:10124  users[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":10113:10139  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10063:10070  address */\n      dup2\n      swap1\n      dup2\n      swap1\n      dup2\n      swap1\n        /* \"nft/NFTBreed.sol\":10113:10144  users[user].startTimestamp == 0 */\n      dup2\n      sub\n        /* \"nft/NFTBreed.sol\":10109:10210  if (users[user].startTimestamp == 0) {... */\n      tag_215\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":10177:10178  0 */\n      0x00\n      swap3\n      pop\n      dup3\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n      dup1\n        /* \"nft/NFTBreed.sol\":10161:10198  return (address(0), address(0), 0, 0) */\n      jump(tag_214)\n        /* \"nft/NFTBreed.sol\":10109:10210  if (users[user].startTimestamp == 0) {... */\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10228:10239  users[user] */\n      dup2\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10228:10233  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10228:10239  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":10262:10278  users[user].nftB */\n      0x02\n      dup3\n      add\n        /* \"nft/NFTBreed.sol\":10262:10294  users[user].nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":10296:10320  users[user].nftA.tokenId */\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10322:10346  users[user].nftB.tokenId */\n      0x03\n      swap1\n      swap4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10228:10260  users[user].nftA.contractAddress */\n      swap2\n      dup5\n      and\n      swap4\n        /* \"nft/NFTBreed.sol\":10262:10294  users[user].nftB.contractAddress */\n      and\n      swap2\n        /* \"nft/NFTBreed.sol\":10296:10320  users[user].nftA.tokenId */\n      swap1\n        /* \"nft/NFTBreed.sol\":10002:10355  function getUserMatingNft(address user) public view returns (address, address, uint256, uint256){... */\n    tag_214:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14564:14664  function setFeeMintAddress(address mint) public onlyOwner {... */\n    tag_74:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_219:\n        /* \"nft/NFTBreed.sol\":14633:14641  feeToken */\n      0x02\n        /* \"nft/NFTBreed.sol\":14633:14656  feeToken = IERC20(mint) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14564:14664  function setFeeMintAddress(address mint) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":9836:9843  uint256 */\n      0x00\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9859:9864  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":9859:9870  users[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":9859:9885  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":9859:9890  users[user].startTimestamp == 0 */\n      dup2\n      sub\n        /* \"nft/NFTBreed.sol\":9855:9927  if (users[user].startTimestamp == 0) {... */\n      tag_223\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":9914:9915  0 */\n      0x00\n      swap2\n        /* \"nft/NFTBreed.sol\":9769:9994  function getUserOvipositionTime(address user) public view returns (uint256){... */\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":9855:9927  if (users[user].startTimestamp == 0) {... */\n    tag_223:\n        /* \"nft/NFTBreed.sol\":9973:9986  breedInterval */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9944:9955  users[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":9944:9949  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":9944:9955  users[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":9944:9970  users[user].startTimestamp */\n      0x05\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":9944:9986  users[user].startTimestamp + breedInterval */\n      tag_146\n      swap2\n        /* \"nft/NFTBreed.sol\":9973:9986  breedInterval */\n      swap1\n        /* \"nft/NFTBreed.sol\":9944:9986  users[user].startTimestamp + breedInterval */\n      tag_178\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n    tag_82:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":8985:9011  nftIds[nftContractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":8985:8991  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":8985:9011  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":8954:9017  LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids) */\n      tag_231\n      swap1\n        /* \"nft/NFTBreed.sol\":9013:9016  ids */\n      dup4\n        /* \"nft/NFTBreed.sol\":8954:8984  LibArrayForUint256Utils.extend */\n      tag_232\n        /* \"nft/NFTBreed.sol\":8954:9017  LibArrayForUint256Utils.extend(nftIds[nftContractAddress], ids) */\n      jump\t// in\n    tag_231:\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":9028:9078  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup5\n      and\n      swap1\n      0x2eb2c2d6\n      swap1\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      tag_233\n      swap1\n        /* \"nft/NFTBreed.sol\":9079:9089  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":9099:9103  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":9106:9109  ids */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9111:9118  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":9028:9123  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      0x04\n      add\n      tag_192\n      jump\t// in\n    tag_233:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":8793:9131  function addNFTBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14464:14556  function setFeeAmount(uint256 amount) public onlyOwner {... */\n    tag_90:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_240:\n        /* \"nft/NFTBreed.sol\":14530:14539  feeAmount */\n      0x04\n        /* \"nft/NFTBreed.sol\":14530:14548  feeAmount = amount */\n      sstore\n        /* \"nft/NFTBreed.sol\":14464:14556  function setFeeAmount(uint256 amount) public onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_92:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_246:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_249\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_250\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_249:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14782:14886  function setBreedInterval(uint256 interval) public onlyOwner {... */\n    tag_95:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_254:\n        /* \"nft/NFTBreed.sol\":14854:14867  breedInterval */\n      0x01\n        /* \"nft/NFTBreed.sol\":14854:14878  breedInterval = interval */\n      sstore\n        /* \"nft/NFTBreed.sol\":14782:14886  function setBreedInterval(uint256 interval) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":14368:14456  function setFeeAddress(address add) public onlyOwner {... */\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_260:\n        /* \"nft/NFTBreed.sol\":14432:14442  feeAddress */\n      0x03\n        /* \"nft/NFTBreed.sol\":14432:14448  feeAddress = add */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14368:14456  function setFeeAddress(address add) public onlyOwner {... */\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":13947:14360  function setNFT(address nft, address to) public onlyOwner {... */\n    tag_105:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_267:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":14044:14053  users[to] */\n      dup2\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":14016:14041  UserInfo storage nftStore */\n      0x00\n        /* \"nft/NFTBreed.sol\":14044:14053  users[to] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14044:14049  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":14044:14053  users[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":14064:14074  nftStore.t */\n      0x04\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":14064:14080  nftStore.t = nft */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap4\n      dup7\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      sstore\n        /* \"nft/NFTBreed.sol\":14095:14118  nftStore.startTimestamp */\n      0x05\n      dup3\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":14095:14123  nftStore.startTimestamp == 0 */\n      swap1\n      sub\n        /* \"nft/NFTBreed.sol\":14091:14353  if (nftStore.startTimestamp == 0) {... */\n      tag_270\n      jumpi\n        /* \"nft/NFTBreed.sol\":14155:14174  luckybeeMintAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":14140:14175  breedTimeLimit[luckybeeMintAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":14140:14154  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":14140:14175  breedTimeLimit[luckybeeMintAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"nft/NFTBreed.sol\":14178:14179  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":14140:14179  breedTimeLimit[luckybeeMintAddress] = 1 */\n      swap1\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14209:14227  hashbeeMintAddress */\n      sload(0x07)\n      dup5\n      and\n        /* \"nft/NFTBreed.sol\":14194:14228  breedTimeLimit[hashbeeMintAddress] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":14194:14232  breedTimeLimit[hashbeeMintAddress] = 1 */\n      dup2\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14262:14282  knightbeeMintAddress */\n      sload(0x08)\n      dup5\n      and\n        /* \"nft/NFTBreed.sol\":14247:14283  breedTimeLimit[knightbeeMintAddress] */\n      dup4\n      mstore\n      dup2\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":14247:14287  breedTimeLimit[knightbeeMintAddress] = 1 */\n      sstore\n        /* \"nft/NFTBreed.sol\":14317:14336  queenbeeMintAddress */\n      sload(0x09)\n      swap1\n      swap3\n      and\n        /* \"nft/NFTBreed.sol\":14302:14337  breedTimeLimit[queenbeeMintAddress] */\n      dup2\n      mstore\n      keccak256\n        /* \"nft/NFTBreed.sol\":14340:14341  2 */\n      0x02\n        /* \"nft/NFTBreed.sol\":14302:14341  breedTimeLimit[queenbeeMintAddress] = 2 */\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":14091:14353  if (nftStore.startTimestamp == 0) {... */\n    tag_270:\n        /* \"nft/NFTBreed.sol\":14005:14360  {... */\n      pop\n        /* \"nft/NFTBreed.sol\":13947:14360  function setNFT(address nft, address to) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":10363:12158  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n    tag_120:\n        /* \"nft/NFTBreed.sol\":10510:10520  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":10480:10501  UserInfo storage user */\n      0x00\n        /* \"nft/NFTBreed.sol\":10504:10521  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10504:10509  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":10504:10521  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":10540:10559  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":10540:10564  user.startTimestamp == 0 */\n      iszero\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12936:12938   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12918:12939   */\n      mstore\n        /* \"#utility.yul\":12975:12977   */\n      0x19\n        /* \"#utility.yul\":12955:12973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12948:12978   */\n      mstore\n        /* \"#utility.yul\":13014:13041   */\n      0x4f6e6c79206272656564206f6e636520617420612074696d6500000000000000\n        /* \"#utility.yul\":12994:13012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12987:13042   */\n      mstore\n        /* \"#utility.yul\":13059:13077   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n      tag_153\n        /* \"#utility.yul\":12734:13083   */\n      jump\n        /* \"nft/NFTBreed.sol\":10532:10594  require(user.startTimestamp == 0, \"Only breed once at a time\") */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10658:10686  breedTimeLimit[nftContractA] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10658:10672  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":10658:10686  breedTimeLimit[nftContractA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10613:10631  user.nftBreedTimes */\n      0x06\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":10613:10645  user.nftBreedTimes[nftContractA] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"nft/NFTBreed.sol\":10613:10655  user.nftBreedTimes[nftContractA][tokenIdA] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10613:10686  user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA] */\n      lt\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13290:13292   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13272:13293   */\n      mstore\n        /* \"#utility.yul\":13329:13331   */\n      0x0a\n        /* \"#utility.yul\":13309:13327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13302:13332   */\n      mstore\n      shl(0xb2, 0x151a5b59481b1a5b5a5d)\n        /* \"#utility.yul\":13348:13366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13341:13381   */\n      mstore\n        /* \"#utility.yul\":13398:13416   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n      tag_153\n        /* \"#utility.yul\":13088:13422   */\n      jump\n        /* \"nft/NFTBreed.sol\":10605:10701  require(user.nftBreedTimes[nftContractA][tokenIdA] < breedTimeLimit[nftContractA], \"Time limit\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10765:10793  breedTimeLimit[nftContractB] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":10765:10779  breedTimeLimit */\n      0x0f\n        /* \"nft/NFTBreed.sol\":10765:10793  breedTimeLimit[nftContractB] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10720:10738  user.nftBreedTimes */\n      0x06\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":10720:10752  user.nftBreedTimes[nftContractB] */\n      dup4\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"nft/NFTBreed.sol\":10720:10762  user.nftBreedTimes[nftContractB][tokenIdB] */\n      dup7\n      dup6\n      mstore\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"nft/NFTBreed.sol\":10720:10793  user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB] */\n      lt\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13290:13292   */\n      0x20\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13272:13293   */\n      mstore\n        /* \"#utility.yul\":13329:13331   */\n      0x0a\n        /* \"#utility.yul\":13309:13327   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13302:13332   */\n      mstore\n      shl(0xb2, 0x151a5b59481b1a5b5a5d)\n        /* \"#utility.yul\":13348:13366   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13341:13381   */\n      mstore\n        /* \"#utility.yul\":13398:13416   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n      tag_153\n        /* \"#utility.yul\":13088:13422   */\n      jump\n        /* \"nft/NFTBreed.sol\":10712:10808  require(user.nftBreedTimes[nftContractB][tokenIdB] < breedTimeLimit[nftContractB], \"Time limit\") */\n    tag_279:\n        /* \"nft/NFTBreed.sol\":10886:10896  feeAddress */\n      sload(0x03)\n        /* \"nft/NFTBreed.sol\":10911:10920  feeAmount */\n      sload(0x04)\n        /* \"nft/NFTBreed.sol\":10821:10829  feeToken */\n      sload(0x02)\n        /* \"nft/NFTBreed.sol\":10821:10931  feeToken.safeTransferFrom(... */\n      tag_281\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10821:10829  feeToken */\n      swap2\n      dup3\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":10861:10871  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":10886:10896  feeAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"nft/NFTBreed.sol\":10821:10846  feeToken.safeTransferFrom */\n      tag_282\n        /* \"nft/NFTBreed.sol\":10821:10931  feeToken.safeTransferFrom(... */\n      jump\t// in\n    tag_281:\n        /* \"nft/NFTBreed.sol\":10942:11025  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":10942:10981  IERC1155(nftContractA).safeTransferFrom */\n      dup7\n      and\n      swap1\n      0xf242432a\n      swap1\n        /* \"nft/NFTBreed.sol\":10942:11025  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      tag_283\n      swap1\n        /* \"nft/NFTBreed.sol\":10982:10992  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":11002:11006  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":11009:11017  tokenIdA */\n      dup9\n      swap1\n        /* \"nft/NFTBreed.sol\":11019:11020  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":10942:11025  IERC1155(nftContractA).safeTransferFrom(msg.sender, address(this), tokenIdA, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_283:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":11036:11119  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":11036:11075  IERC1155(nftContractB).safeTransferFrom */\n      dup8\n      and\n      swap3\n      pop\n      0xf242432a\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":11036:11119  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      tag_287\n      swap1\n        /* \"nft/NFTBreed.sol\":11076:11086  msg.sender */\n      caller\n      swap1\n        /* \"nft/NFTBreed.sol\":11096:11100  this */\n      address\n      swap1\n        /* \"nft/NFTBreed.sol\":11103:11111  tokenIdB */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":11113:11114  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":11036:11119  IERC1155(nftContractB).safeTransferFrom(msg.sender, address(this), tokenIdB, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_287:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":11162:11177  block.timestamp */\n      timestamp\n        /* \"nft/NFTBreed.sol\":11140:11159  user.startTimestamp */\n      0x05\n      dup5\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":11140:11177  user.startTimestamp = block.timestamp */\n      dup3\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11188:11228  user.nftA.contractAddress = nftContractA */\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      dup8\n      sstore\n      0x01\n        /* \"nft/NFTBreed.sol\":11239:11256  user.nftA.tokenId */\n      dup8\n      add\n        /* \"nft/NFTBreed.sol\":11239:11267  user.nftA.tokenId = tokenIdA */\n      dup10\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11278:11287  user.nftB */\n      0x02\n      dup8\n      add\n        /* \"nft/NFTBreed.sol\":11278:11318  user.nftB.contractAddress = nftContractB */\n      dup1\n      sload\n      swap2\n      dup12\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n      0x03\n        /* \"nft/NFTBreed.sol\":11329:11346  user.nftB.tokenId */\n      dup6\n      add\n        /* \"nft/NFTBreed.sol\":11329:11357  user.nftB.tokenId = tokenIdB */\n      dup7\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":11445:11454  randNonce */\n      sload\n        /* \"nft/NFTBreed.sol\":11399:11455  abi.encodePacked(block.timestamp, msg.sender, randNonce) */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n        /* \"#utility.yul\":13612:13631   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"nft/NFTBreed.sol\":11433:11443  msg.sender */\n      caller\n        /* \"#utility.yul\":13669:13671   */\n      0x60\n        /* \"#utility.yul\":13665:13680   */\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":13661:13714   */\n      and\n        /* \"#utility.yul\":13647:13659   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":13640:13715   */\n      mstore\n        /* \"#utility.yul\":13731:13743   */\n      0x54\n      dup3\n      add\n        /* \"#utility.yul\":13724:13752   */\n      mstore\n      0x00\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":11460:11463  100 */\n      0x64\n      swap2\n      pop\n        /* \"#utility.yul\":13768:13780   */\n      0x74\n      add\n        /* \"nft/NFTBreed.sol\":11399:11455  abi.encodePacked(block.timestamp, msg.sender, randNonce) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"nft/NFTBreed.sol\":11389:11456  keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"nft/NFTBreed.sol\":11384:11457  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) */\n      0x00\n      shr\n        /* \"nft/NFTBreed.sol\":11384:11463  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100 */\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"nft/NFTBreed.sol\":11474:11483  randNonce */\n      0x05\n        /* \"nft/NFTBreed.sol\":11474:11485  randNonce++ */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":11370:11463  uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, randNonce))) % 100 */\n      swap2\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":11474:11483  randNonce */\n      0x00\n        /* \"nft/NFTBreed.sol\":11474:11485  randNonce++ */\n      tag_295\n      dup4\n      tag_296\n      jump\t// in\n    tag_295:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"nft/NFTBreed.sol\":11498:11513  address nftMint */\n      0x00\n        /* \"nft/NFTBreed.sol\":11554:11559  JPDA1 */\n      sload(0x0a)\n        /* \"nft/NFTBreed.sol\":11545:11551  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11545:11559  random < JPDA1 */\n      lt\n        /* \"nft/NFTBreed.sol\":11542:11882  if(random < JPDA1) {... */\n      iszero\n      tag_297\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11586:11605  luckybeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x06))\n        /* \"nft/NFTBreed.sol\":11542:11882  if(random < JPDA1) {... */\n      jump(tag_304)\n    tag_297:\n        /* \"nft/NFTBreed.sol\":11637:11642  JPDA1 */\n      sload(0x0a)\n        /* \"nft/NFTBreed.sol\":11627:11633  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11627:11642  random >= JPDA1 */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":11627:11660  random >= JPDA1 && random < JPDA2 */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11655:11660  JPDA2 */\n      sload(0x0b)\n        /* \"nft/NFTBreed.sol\":11646:11652  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11646:11660  random < JPDA2 */\n      lt\n        /* \"nft/NFTBreed.sol\":11627:11660  random >= JPDA1 && random < JPDA2 */\n    tag_299:\n        /* \"nft/NFTBreed.sol\":11623:11882  if (random >= JPDA1 && random < JPDA2 ) {... */\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11688:11706  hashbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x07))\n        /* \"nft/NFTBreed.sol\":11623:11882  if (random >= JPDA1 && random < JPDA2 ) {... */\n      jump(tag_304)\n    tag_300:\n        /* \"nft/NFTBreed.sol\":11738:11743  JPDA2 */\n      sload(0x0b)\n        /* \"nft/NFTBreed.sol\":11728:11734  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11728:11743  random >= JPDA2 */\n      lt\n      iszero\n        /* \"nft/NFTBreed.sol\":11728:11761  random >= JPDA2 && random < JPDA3 */\n      dup1\n      iszero\n      tag_302\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11756:11761  JPDA3 */\n      sload(0x0c)\n        /* \"nft/NFTBreed.sol\":11747:11753  random */\n      dup3\n        /* \"nft/NFTBreed.sol\":11747:11761  random < JPDA3 */\n      lt\n        /* \"nft/NFTBreed.sol\":11728:11761  random >= JPDA2 && random < JPDA3 */\n    tag_302:\n        /* \"nft/NFTBreed.sol\":11724:11882  if (random >= JPDA2 && random < JPDA3) {... */\n      iszero\n      tag_303\n      jumpi\n      pop\n        /* \"nft/NFTBreed.sol\":11788:11808  knightbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x08))\n        /* \"nft/NFTBreed.sol\":11724:11882  if (random >= JPDA2 && random < JPDA3) {... */\n      jump(tag_304)\n    tag_303:\n      pop\n        /* \"nft/NFTBreed.sol\":11851:11870  queenbeeMintAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x09))\n        /* \"nft/NFTBreed.sol\":11724:11882  if (random >= JPDA2 && random < JPDA3) {... */\n    tag_304:\n        /* \"nft/NFTBreed.sol\":11892:11898  user.t */\n      0x04\n      dup4\n      add\n        /* \"nft/NFTBreed.sol\":11892:11908  user.t = nftMint */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"nft/NFTBreed.sol\":11919:11951  user.nftBreedTimes[nftContractA] */\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":11919:11937  user.nftBreedTimes */\n      0x06\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":11919:11951  user.nftBreedTimes[nftContractA] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":11919:11961  user.nftBreedTimes[nftContractA][tokenIdA] */\n      dup9\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":11919:11966  user.nftBreedTimes[nftContractA][tokenIdA] += 1 */\n      dup1\n      sload\n      0x01\n      swap3\n      swap1\n      tag_305\n      swap1\n      dup5\n      swap1\n      tag_178\n      jump\t// in\n    tag_305:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":11977:12009  user.nftBreedTimes[nftContractB] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":11977:11995  user.nftBreedTimes */\n      0x06\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":11977:12009  user.nftBreedTimes[nftContractB] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft/NFTBreed.sol\":11977:12019  user.nftBreedTimes[nftContractB][tokenIdB] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":11977:12024  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      dup1\n      sload\n        /* \"nft/NFTBreed.sol\":12023:12024  1 */\n      0x01\n      swap3\n        /* \"nft/NFTBreed.sol\":11977:12009  user.nftBreedTimes[nftContractB] */\n      swap1\n        /* \"nft/NFTBreed.sol\":11977:12024  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      tag_306\n      swap1\n        /* \"nft/NFTBreed.sol\":12023:12024  1 */\n      dup5\n      swap1\n        /* \"nft/NFTBreed.sol\":11977:12024  user.nftBreedTimes[nftContractB][tokenIdB] += 1 */\n      tag_178\n      jump\t// in\n    tag_306:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12086:12095  user.nftB */\n      0x02\n      dup4\n      add\n        /* \"nft/NFTBreed.sol\":12086:12111  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12059:12084  user.nftA.contractAddress */\n      dup4\n      sload\n        /* \"nft/NFTBreed.sol\":12086:12111  user.nftB.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":12113:12130  user.nftA.tokenId */\n      dup6\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12132:12149  user.nftB.tokenId */\n      0x03\n      dup7\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12040:12150  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12086:12111  user.nftB.contractAddress */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"nft/NFTBreed.sol\":12059:12084  user.nftA.contractAddress */\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12047:12057  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12040:12150  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      0xe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b60\n      swap3\n      tag_307\n      swap3\n        /* \"#utility.yul\":14319:14344   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14375:14377   */\n      0x20\n        /* \"#utility.yul\":14360:14378   */\n      dup3\n      add\n        /* \"#utility.yul\":14353:14387   */\n      mstore\n        /* \"#utility.yul\":14307:14309   */\n      0x40\n        /* \"#utility.yul\":14292:14310   */\n      add\n      swap1\n        /* \"#utility.yul\":14145:14393   */\n      jump\n        /* \"nft/NFTBreed.sol\":12040:12150  Mating(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nft/NFTBreed.sol\":10469:12158  {... */\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":10363:12158  function mating( address nftContractA, address nftContractB, uint256 tokenIdA, uint256 tokenIdB) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":13480:13939  function urgentWithdraw(address nftContractAddress) public onlyOwner {... */\n    tag_123:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_312:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13577:13603  nftIds[nftContractAddress] */\n      dup2\n      and\n        /* \"nft/NFTBreed.sol\":13560:13574  uint256 length */\n      0x00\n        /* \"nft/NFTBreed.sol\":13577:13603  nftIds[nftContractAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13577:13583  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13577:13603  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13577:13610  nftIds[nftContractAddress].length */\n      sload\n      swap1\n      dup2\n        /* \"nft/NFTBreed.sol\":13648:13669  new uint256[](length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_316\n      jumpi\n      tag_316\n      tag_166\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_317\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_317:\n      pop\n        /* \"nft/NFTBreed.sol\":13621:13669  uint256[] memory amounts = new uint256[](length) */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":13685:13694  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":13680:13758  for (uint256 i = 0; i < length; i++) {... */\n    tag_318:\n        /* \"nft/NFTBreed.sol\":13704:13710  length */\n      dup3\n        /* \"nft/NFTBreed.sol\":13700:13701  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":13700:13710  i < length */\n      lt\n        /* \"nft/NFTBreed.sol\":13680:13758  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"nft/NFTBreed.sol\":13745:13746  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":13732:13739  amounts */\n      dup3\n        /* \"nft/NFTBreed.sol\":13740:13741  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":13732:13742  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_322\n      jumpi\n      tag_322\n      tag_184\n      jump\t// in\n    tag_322:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"nft/NFTBreed.sol\":13732:13746  amounts[i] = 1 */\n      mstore\n        /* \"nft/NFTBreed.sol\":13712:13715  i++ */\n      dup1\n      tag_323\n      dup2\n      tag_296\n      jump\t// in\n    tag_323:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":13680:13758  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_318)\n    tag_319:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13768:13818  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      dup4\n      and\n        /* \"nft/NFTBreed.sol\":13847:13873  nftIds[nftContractAddress] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13847:13853  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13847:13873  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"nft/NFTBreed.sol\":13768:13887  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      swap1\n      mload\n      shl(0xe1, 0x1759616b)\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13768:13818  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      0x2eb2c2d6\n      swap2\n        /* \"nft/NFTBreed.sol\":13768:13887  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      tag_324\n      swap2\n        /* \"nft/NFTBreed.sol\":13828:13832  this */\n      address\n      swap2\n        /* \"nft/NFTBreed.sol\":13835:13845  msg.sender */\n      caller\n      swap2\n        /* \"nft/NFTBreed.sol\":13875:13882  amounts */\n      dup8\n      swap1\n        /* \"nft/NFTBreed.sol\":13768:13887  IERC1155(nftContractAddress).safeBatchTransferFrom( address(this), msg.sender, nftIds[nftContractAddress], amounts, \"\") */\n      0x04\n      add\n      tag_325\n      jump\t// in\n    tag_324:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_326:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_328\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_328:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":13905:13931  nftIds[nftContractAddress] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":13905:13911  nftIds */\n      0x0e\n        /* \"nft/NFTBreed.sol\":13905:13931  nftIds[nftContractAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":13898:13931  delete nftIds[nftContractAddress] */\n      tag_270\n      swap2\n      tag_330\n      jump\t// in\n        /* \"nft/NFTBreed.sol\":12166:12709  function cancel() public {... */\n    tag_129:\n        /* \"nft/NFTBreed.sol\":12232:12242  msg.sender */\n      caller\n        /* \"nft/NFTBreed.sol\":12202:12223  UserInfo storage user */\n      0x00\n        /* \"nft/NFTBreed.sol\":12226:12243  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"nft/NFTBreed.sol\":12226:12231  users */\n      0x0d\n        /* \"nft/NFTBreed.sol\":12226:12243  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"nft/NFTBreed.sol\":12262:12281  user.startTimestamp */\n      0x05\n      dup2\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12226:12243  users[msg.sender] */\n      swap1\n      swap2\n        /* \"nft/NFTBreed.sol\":12262:12286  user.startTimestamp != 0 */\n      sub\n        /* \"nft/NFTBreed.sol\":12254:12307  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11605:11607   */\n      0x20\n        /* \"nft/NFTBreed.sol\":12254:12307  require(user.startTimestamp != 0, \"not start mating\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11587:11608   */\n      mstore\n        /* \"#utility.yul\":11644:11646   */\n      0x10\n        /* \"#utility.yul\":11624:11642   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11617:11647   */\n      mstore\n      shl(0x80, 0x6e6f74207374617274206d6174696e67)\n        /* \"#utility.yul\":11663:11681   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11656:11702   */\n      mstore\n        /* \"#utility.yul\":11719:11737   */\n      0x64\n      add\n        /* \"nft/NFTBreed.sol\":12254:12307  require(user.startTimestamp != 0, \"not start mating\") */\n      tag_153\n        /* \"#utility.yul\":11403:11743   */\n      jump\n        /* \"nft/NFTBreed.sol\":12254:12307  require(user.startTimestamp != 0, \"not start mating\") */\n    tag_333:\n        /* \"nft/NFTBreed.sol\":12329:12354  user.nftA.contractAddress */\n      dup1\n      sload\n      0x01\n        /* \"nft/NFTBreed.sol\":12400:12417  user.nftA.tokenId */\n      dup1\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12320:12425  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12329:12354  user.nftA.contractAddress */\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12320:12372  IERC1155(user.nftA.contractAddress).safeTransferFrom */\n      0xf242432a\n      swap3\n        /* \"nft/NFTBreed.sol\":12320:12425  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      tag_335\n      swap3\n        /* \"nft/NFTBreed.sol\":12381:12385  this */\n      address\n      swap3\n        /* \"nft/NFTBreed.sol\":12388:12398  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12329:12354  user.nftA.contractAddress */\n      swap1\n        /* \"nft/NFTBreed.sol\":12320:12425  IERC1155(user.nftA.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftA.tokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_335:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_336\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_336:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_338\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_338:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12445:12454  user.nftB */\n      0x02\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":12445:12470  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12516:12533  user.nftB.tokenId */\n      0x03\n      dup3\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12436:12541  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      mload(0x40)\n      shl(0xe1, 0x79212195)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12445:12470  user.nftB.contractAddress */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"nft/NFTBreed.sol\":12436:12488  IERC1155(user.nftB.contractAddress).safeTransferFrom */\n      0xf242432a\n      swap2\n        /* \"nft/NFTBreed.sol\":12436:12541  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      tag_339\n      swap2\n        /* \"nft/NFTBreed.sol\":12497:12501  this */\n      address\n      swap2\n        /* \"nft/NFTBreed.sol\":12504:12514  msg.sender */\n      caller\n      swap2\n        /* \"nft/NFTBreed.sol\":12445:12470  user.nftB.contractAddress */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":12436:12541  IERC1155(user.nftB.contractAddress).safeTransferFrom(address(this), msg.sender, user.nftB.tokenId, 1, \"\") */\n      0x04\n      add\n      tag_209\n      jump\t// in\n    tag_339:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_340\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_340:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12574:12575  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":12552:12571  user.startTimestamp */\n      0x05\n      dup5\n      add\n        /* \"nft/NFTBreed.sol\":12552:12575  user.startTimestamp = 0 */\n      sstore\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":12637:12646  user.nftB */\n      0x02\n      dup2\n      add\n        /* \"nft/NFTBreed.sol\":12637:12662  user.nftB.contractAddress */\n      sload\n        /* \"nft/NFTBreed.sol\":12610:12635  user.nftA.contractAddress */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":12637:12662  user.nftB.contractAddress */\n      0x01\n        /* \"nft/NFTBreed.sol\":12664:12681  user.nftA.tokenId */\n      dup4\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12683:12700  user.nftB.tokenId */\n      0x03\n      dup5\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":12591:12701  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft/NFTBreed.sol\":12637:12662  user.nftB.contractAddress */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"nft/NFTBreed.sol\":12610:12635  user.nftA.contractAddress */\n      swap4\n      swap1\n      swap4\n      and\n      swap3\n        /* \"nft/NFTBreed.sol\":12598:12608  msg.sender */\n      caller\n      swap3\n        /* \"nft/NFTBreed.sol\":12591:12701  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n      0x9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d\n      swap3\n      tag_343\n      swap3\n        /* \"#utility.yul\":14319:14344   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":14375:14377   */\n      0x20\n        /* \"#utility.yul\":14360:14378   */\n      dup3\n      add\n        /* \"#utility.yul\":14353:14387   */\n      mstore\n        /* \"#utility.yul\":14307:14309   */\n      0x40\n        /* \"#utility.yul\":14292:14310   */\n      add\n      swap1\n        /* \"#utility.yul\":14145:14393   */\n      jump\n        /* \"nft/NFTBreed.sol\":12591:12701  Cancel(msg.sender, user.nftA.contractAddress, user.nftB.contractAddress, user.nftA.tokenId, user.nftB.tokenId) */\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"nft/NFTBreed.sol\":12191:12709  {... */\n      pop\n        /* \"nft/NFTBreed.sol\":12166:12709  function cancel() public {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_154\n      jump\t// in\n    tag_348:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15857:15859   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15839:15860   */\n      mstore\n        /* \"#utility.yul\":15896:15898   */\n      0x26\n        /* \"#utility.yul\":15876:15894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15869:15899   */\n      mstore\n        /* \"#utility.yul\":15935:15969   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":15915:15933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15908:15970   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":15986:16004   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15979:16015   */\n      mstore\n        /* \"#utility.yul\":16032:16051   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_153\n        /* \"#utility.yul\":15655:16057   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_351:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_354\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_250\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_354:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n    tag_205:\n        /* \"nft/NFTBreed.sol\":6359:6375  uint256 minValue */\n      0x00\n        /* \"nft/NFTBreed.sol\":6377:6393  uint256 minIndex */\n      dup1\n        /* \"nft/NFTBreed.sol\":6417:6422  array */\n      dup3\n        /* \"nft/NFTBreed.sol\":6423:6424  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":6417:6425  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_359\n      jumpi\n      tag_359\n      tag_184\n      jump\t// in\n    tag_359:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6406:6425  minValue = array[0] */\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":6447:6448  0 */\n      0x00\n        /* \"nft/NFTBreed.sol\":6436:6448  minIndex = 0 */\n      swap1\n      pop\n        /* \"nft/NFTBreed.sol\":6463:6472  uint256 i */\n      0x00\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n    tag_361:\n        /* \"nft/NFTBreed.sol\":6481:6493  array.length */\n      dup4\n      sload\n        /* \"nft/NFTBreed.sol\":6477:6493  i < array.length */\n      dup2\n      lt\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      iszero\n      tag_362\n      jumpi\n        /* \"nft/NFTBreed.sol\":6527:6535  minValue */\n      dup3\n        /* \"nft/NFTBreed.sol\":6516:6521  array */\n      dup5\n        /* \"nft/NFTBreed.sol\":6522:6523  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":6516:6524  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_365\n      jumpi\n      tag_365\n      tag_184\n      jump\t// in\n    tag_365:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6516:6535  array[i] < minValue */\n      lt\n        /* \"nft/NFTBreed.sol\":6513:6621  if(array[i] < minValue){... */\n      iszero\n      tag_367\n      jumpi\n        /* \"nft/NFTBreed.sol\":6566:6571  array */\n      dup4\n        /* \"nft/NFTBreed.sol\":6572:6573  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":6566:6574  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_369\n      jumpi\n      tag_369\n      tag_184\n      jump\t// in\n    tag_369:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":6555:6574  minValue = array[i] */\n      swap3\n      pop\n        /* \"nft/NFTBreed.sol\":6604:6605  i */\n      dup1\n        /* \"nft/NFTBreed.sol\":6593:6605  minIndex = i */\n      swap2\n      pop\n        /* \"nft/NFTBreed.sol\":6513:6621  if(array[i] < minValue){... */\n    tag_367:\n        /* \"nft/NFTBreed.sol\":6494:6497  i++ */\n      dup1\n      tag_371\n      dup2\n      tag_296\n      jump\t// in\n    tag_371:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      jump(tag_361)\n    tag_362:\n      pop\n        /* \"nft/NFTBreed.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n    tag_207:\n        /* \"nft/NFTBreed.sol\":4304:4316  array.length */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":4296:4316  index < array.length */\n      dup2\n      lt\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16264:16266   */\n      0x20\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16246:16267   */\n      mstore\n        /* \"#utility.yul\":16303:16305   */\n      0x24\n        /* \"#utility.yul\":16283:16301   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16276:16306   */\n      mstore\n        /* \"#utility.yul\":16342:16376   */\n      0x4172726179466f7255696e743235363a20696e646578206f7574206f6620626f\n        /* \"#utility.yul\":16322:16340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16315:16377   */\n      mstore\n      shl(0xe0, 0x756e6473)\n        /* \"#utility.yul\":16393:16411   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16386:16420   */\n      mstore\n        /* \"#utility.yul\":16437:16456   */\n      0x84\n      add\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_153\n        /* \"#utility.yul\":16062:16462   */\n      jump\n        /* \"nft/NFTBreed.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n    tag_373:\n        /* \"nft/NFTBreed.sol\":4385:4397  array.length */\n      dup2\n      sload\n        /* \"nft/NFTBreed.sol\":4385:4401  array.length - 1 */\n      tag_378\n      swap1\n        /* \"nft/NFTBreed.sol\":4400:4401  1 */\n      0x01\n      swap1\n        /* \"nft/NFTBreed.sol\":4385:4401  array.length - 1 */\n      tag_180\n      jump\t// in\n    tag_378:\n        /* \"nft/NFTBreed.sol\":4377:4382  index */\n      dup2\n        /* \"nft/NFTBreed.sol\":4377:4401  index < array.length - 1 */\n      lt\n        /* \"nft/NFTBreed.sol\":4370:4483  while (index < array.length - 1) {... */\n      iszero\n      tag_377\n      jumpi\n        /* \"nft/NFTBreed.sol\":4433:4438  array */\n      dup2\n        /* \"nft/NFTBreed.sol\":4439:4448  index + 1 */\n      tag_379\n        /* \"nft/NFTBreed.sol\":4439:4444  index */\n      dup3\n        /* \"nft/NFTBreed.sol\":4447:4448  1 */\n      0x01\n        /* \"nft/NFTBreed.sol\":4439:4448  index + 1 */\n      tag_178\n      jump\t// in\n    tag_379:\n        /* \"nft/NFTBreed.sol\":4433:4449  array[index + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_381\n      jumpi\n      tag_381\n      tag_184\n      jump\t// in\n    tag_381:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/NFTBreed.sol\":4418:4423  array */\n      dup3\n        /* \"nft/NFTBreed.sol\":4424:4429  index */\n      dup3\n        /* \"nft/NFTBreed.sol\":4418:4430  array[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_384\n      jumpi\n      tag_384\n      tag_184\n      jump\t// in\n    tag_384:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n        /* \"nft/NFTBreed.sol\":4418:4449  array[index] = array[index + 1] */\n      sstore\n        /* \"nft/NFTBreed.sol\":4464:4471  index++ */\n      dup1\n      tag_386\n      dup2\n      tag_296\n      jump\t// in\n    tag_386:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":4370:4483  while (index < array.length - 1) {... */\n      jump(tag_373)\n    tag_377:\n        /* \"nft/NFTBreed.sol\":4493:4498  array */\n      dup2\n        /* \"nft/NFTBreed.sol\":4493:4504  array.pop() */\n      dup1\n      sload\n      dup1\n      tag_388\n      jumpi\n      tag_388\n      tag_389\n      jump\t// in\n    tag_388:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"nft/NFTBreed.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/NFTBreed.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n    tag_232:\n        /* \"nft/NFTBreed.sol\":5085:5093  b.length */\n      dup1\n      mload\n        /* \"nft/NFTBreed.sol\":5085:5098  b.length != 0 */\n      iszero\n        /* \"nft/NFTBreed.sol\":5082:5182  if(b.length != 0){... */\n      tag_392\n      jumpi\n        /* \"nft/NFTBreed.sol\":5112:5118  uint i */\n      0x00\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n    tag_393:\n        /* \"nft/NFTBreed.sol\":5128:5129  b */\n      dup2\n        /* \"nft/NFTBreed.sol\":5128:5136  b.length */\n      mload\n        /* \"nft/NFTBreed.sol\":5124:5125  i */\n      dup2\n        /* \"nft/NFTBreed.sol\":5124:5136  i < b.length */\n      lt\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      iszero\n      tag_270\n      jumpi\n        /* \"nft/NFTBreed.sol\":5152:5153  a */\n      dup3\n        /* \"nft/NFTBreed.sol\":5159:5160  b */\n      dup3\n        /* \"nft/NFTBreed.sol\":5161:5162  i */\n      dup3\n        /* \"nft/NFTBreed.sol\":5159:5163  b[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_397\n      jumpi\n      tag_397\n      tag_184\n      jump\t// in\n    tag_397:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"nft/NFTBreed.sol\":5152:5164  a.push(b[i]) */\n      dup3\n      sload\n      0x01\n      dup2\n      add\n      dup5\n      sstore\n      0x00\n      swap4\n      dup5\n      mstore\n      swap2\n      swap1\n      swap3\n      keccak256\n      add\n      sstore\n        /* \"nft/NFTBreed.sol\":5138:5141  i++ */\n      dup1\n      tag_399\n      dup2\n      tag_296\n      jump\t// in\n    tag_399:\n      swap2\n      pop\n      pop\n        /* \"nft/NFTBreed.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      jump(tag_393)\n        /* \"nft/NFTBreed.sol\":5082:5182  if(b.length != 0){... */\n    tag_392:\n        /* \"nft/NFTBreed.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_250:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16857:16872   */\n      dup6\n      dup2\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":16839:16873   */\n      mstore\n        /* \"#utility.yul\":16909:16924   */\n      dup5\n      and\n        /* \"#utility.yul\":16889:16907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16882:16925   */\n      mstore\n        /* \"#utility.yul\":16941:16959   */\n      0x64\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16934:16968   */\n      dup5\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":16774:16792   */\n      0x84\n      swap1\n      swap2\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1145  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_402\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1070:1075  token */\n      dup6\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1069  _callOptionalReturn */\n      tag_405\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1146  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_402:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":912:1153  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3207:3913  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_405:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3649  bytes memory returndata */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_407\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3680:3684  data */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3660:3665  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3679  address(token).functionCall */\n      and\n      tag_408\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3652:3721  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_407:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3752  returndata.length */\n      dup1\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3626:3721  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3735:3756  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3731:3907  if (returndata.length > 0) {... */\n      tag_270\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3830:3840  returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3819:3849  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_410\n      swap2\n      swap1\n      tag_411\n      jump\t// in\n    tag_410:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17463:17465   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17445:17466   */\n      mstore\n        /* \"#utility.yul\":17502:17504   */\n      0x2a\n        /* \"#utility.yul\":17482:17500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17475:17505   */\n      mstore\n        /* \"#utility.yul\":17541:17575   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":17521:17539   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17514:17576   */\n      mstore\n      shl(0xb2, 0x1bdd081cdd58d8d95959)\n        /* \"#utility.yul\":17592:17610   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17585:17625   */\n      mstore\n        /* \"#utility.yul\":17642:17661   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3811:3896  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_153\n        /* \"#utility.yul\":17261:17667   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3514:3737  function functionCall(... */\n    tag_408:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3647:3659  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3730  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_416\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3700:3706  target */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3708:3712  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3714:3715  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3717:3729  errorMessage */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3699  functionCallWithValue */\n      tag_417\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3678:3730  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_416:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3671:3730  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3514:3737  function functionCall(... */\n    tag_415:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4601:5100  function functionCallWithValue(... */\n    tag_417:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4766:4778  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4823:4828  value */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4798:4819  address(this).balance */\n      selfbalance\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4798:4828  address(this).balance >= value */\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17874:17876   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17856:17877   */\n      mstore\n        /* \"#utility.yul\":17913:17915   */\n      0x26\n        /* \"#utility.yul\":17893:17911   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17886:17916   */\n      mstore\n        /* \"#utility.yul\":17952:17986   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":17932:17950   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17925:17987   */\n      mstore\n      shl(0xd2, 0x1c8818d85b1b)\n        /* \"#utility.yul\":18003:18021   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17996:18032   */\n      mstore\n        /* \"#utility.yul\":18049:18068   */\n      0x84\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_153\n        /* \"#utility.yul\":17672:18074   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4790:4871  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n    tag_419:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1087:1107  extcodesize(account) */\n      dup5\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18281:18283   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18263:18284   */\n      mstore\n        /* \"#utility.yul\":18320:18322   */\n      0x1d\n        /* \"#utility.yul\":18300:18318   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18293:18323   */\n      mstore\n        /* \"#utility.yul\":18359:18390   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":18339:18357   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18332:18391   */\n      mstore\n        /* \"#utility.yul\":18408:18426   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n      tag_153\n        /* \"#utility.yul\":18079:18432   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4881:4941  require(isContract(target), \"Address: call to non-contract\") */\n    tag_424:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4953:4965  bool success */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4967:4990  bytes memory returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5000  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5005  target.call */\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5013:5018  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5020:5024  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4994:5025  target.call{value: value}(data) */\n      mload(0x40)\n      tag_427\n      swap2\n      swap1\n      tag_428\n      jump\t// in\n    tag_427:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_431\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_430)\n    tag_431:\n      0x60\n      swap2\n      pop\n    tag_430:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4952:5025  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      tag_432\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5059:5066  success */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5068:5078  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5080:5092  errorMessage */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5058  verifyCallResult */\n      tag_433\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5042:5093  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_432:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5035:5093  return verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4601:5100  function functionCallWithValue(... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7214:7906  function verifyCallResult(... */\n    tag_433:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7360:7372  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7388:7395  success */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n      iszero\n      tag_436\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7418:7428  returndata */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7411:7428  return returndata */\n      jump(tag_415)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7384:7900  if (success) {... */\n    tag_436:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7546  returndata.length */\n      dup3\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7529:7550  returndata.length > 0 */\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n      tag_438\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7723:7733  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7717:7734  mload(returndata) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7783:7798  returndata_size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7770:7780  returndata */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7766:7768  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7762:7781  add(32, returndata) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7755:7799  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7525:7890  if (returndata.length > 0) {... */\n    tag_438:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7862:7874  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7855:7875  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap2\n      swap1\n      tag_441\n      jump\t// in\n    tag_330:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_354\n      swap2\n      swap1\n    tag_445:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_446\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_445)\n    tag_446:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_40:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_457:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:670   */\n    tag_447:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_461\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_461:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:1084   */\n    tag_46:\n        /* \"#utility.yul\":761:767   */\n      0x00\n        /* \"#utility.yul\":769:775   */\n      dup1\n        /* \"#utility.yul\":777:783   */\n      0x00\n        /* \"#utility.yul\":785:791   */\n      dup1\n        /* \"#utility.yul\":838:841   */\n      0x80\n        /* \"#utility.yul\":826:835   */\n      dup6\n        /* \"#utility.yul\":817:824   */\n      dup8\n        /* \"#utility.yul\":813:836   */\n      sub\n        /* \"#utility.yul\":809:842   */\n      slt\n        /* \"#utility.yul\":806:859   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":855:856   */\n      0x00\n        /* \"#utility.yul\":852:853   */\n      dup1\n        /* \"#utility.yul\":845:857   */\n      revert\n        /* \"#utility.yul\":806:859   */\n    tag_463:\n        /* \"#utility.yul\":878:907   */\n      tag_464\n        /* \"#utility.yul\":897:906   */\n      dup6\n        /* \"#utility.yul\":878:907   */\n      tag_447\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":868:907   */\n      swap4\n      pop\n        /* \"#utility.yul\":926:964   */\n      tag_465\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":949:958   */\n      dup7\n        /* \"#utility.yul\":945:963   */\n      add\n        /* \"#utility.yul\":926:964   */\n      tag_447\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":916:964   */\n      swap3\n      pop\n        /* \"#utility.yul\":983:1021   */\n      tag_466\n        /* \"#utility.yul\":1017:1019   */\n      0x40\n        /* \"#utility.yul\":1006:1015   */\n      dup7\n        /* \"#utility.yul\":1002:1020   */\n      add\n        /* \"#utility.yul\":983:1021   */\n      tag_447\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":973:1021   */\n      swap2\n      pop\n        /* \"#utility.yul\":1040:1078   */\n      tag_467\n        /* \"#utility.yul\":1074:1076   */\n      0x60\n        /* \"#utility.yul\":1063:1072   */\n      dup7\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1040:1078   */\n      tag_447\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":1030:1078   */\n      swap1\n      pop\n        /* \"#utility.yul\":675:1084   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1795   */\n    tag_58:\n        /* \"#utility.yul\":1556:1562   */\n      0x00\n        /* \"#utility.yul\":1564:1570   */\n      dup1\n        /* \"#utility.yul\":1572:1578   */\n      0x00\n        /* \"#utility.yul\":1625:1627   */\n      0x60\n        /* \"#utility.yul\":1613:1622   */\n      dup5\n        /* \"#utility.yul\":1604:1611   */\n      dup7\n        /* \"#utility.yul\":1600:1623   */\n      sub\n        /* \"#utility.yul\":1596:1628   */\n      slt\n        /* \"#utility.yul\":1593:1645   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":1641:1642   */\n      0x00\n        /* \"#utility.yul\":1638:1639   */\n      dup1\n        /* \"#utility.yul\":1631:1643   */\n      revert\n        /* \"#utility.yul\":1593:1645   */\n    tag_471:\n      pop\n      pop\n        /* \"#utility.yul\":1664:1687   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1734:1736   */\n      0x20\n        /* \"#utility.yul\":1719:1737   */\n      dup4\n      add\n        /* \"#utility.yul\":1706:1738   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1785:1787   */\n      0x40\n        /* \"#utility.yul\":1770:1788   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1757:1789   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1479:1795   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1800:2122   */\n    tag_62:\n        /* \"#utility.yul\":1877:1883   */\n      0x00\n        /* \"#utility.yul\":1885:1891   */\n      dup1\n        /* \"#utility.yul\":1893:1899   */\n      0x00\n        /* \"#utility.yul\":1946:1948   */\n      0x60\n        /* \"#utility.yul\":1934:1943   */\n      dup5\n        /* \"#utility.yul\":1925:1932   */\n      dup7\n        /* \"#utility.yul\":1921:1944   */\n      sub\n        /* \"#utility.yul\":1917:1949   */\n      slt\n        /* \"#utility.yul\":1914:1966   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":1962:1963   */\n      0x00\n        /* \"#utility.yul\":1959:1960   */\n      dup1\n        /* \"#utility.yul\":1952:1964   */\n      revert\n        /* \"#utility.yul\":1914:1966   */\n    tag_473:\n        /* \"#utility.yul\":1985:2014   */\n      tag_474\n        /* \"#utility.yul\":2004:2013   */\n      dup5\n        /* \"#utility.yul\":1985:2014   */\n      tag_447\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":1975:2014   */\n      swap6\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2046:2064   */\n      dup6\n      add\n        /* \"#utility.yul\":2033:2065   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2112:2114   */\n      0x40\n        /* \"#utility.yul\":2097:2115   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2084:2116   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":1800:2122   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2127:2313   */\n    tag_68:\n        /* \"#utility.yul\":2186:2192   */\n      0x00\n        /* \"#utility.yul\":2239:2241   */\n      0x20\n        /* \"#utility.yul\":2227:2236   */\n      dup3\n        /* \"#utility.yul\":2218:2225   */\n      dup5\n        /* \"#utility.yul\":2214:2237   */\n      sub\n        /* \"#utility.yul\":2210:2242   */\n      slt\n        /* \"#utility.yul\":2207:2259   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":2255:2256   */\n      0x00\n        /* \"#utility.yul\":2252:2253   */\n      dup1\n        /* \"#utility.yul\":2245:2257   */\n      revert\n        /* \"#utility.yul\":2207:2259   */\n    tag_476:\n        /* \"#utility.yul\":2278:2307   */\n      tag_415\n        /* \"#utility.yul\":2297:2306   */\n      dup3\n        /* \"#utility.yul\":2278:2307   */\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":2770:2897   */\n    tag_166:\n        /* \"#utility.yul\":2831:2841   */\n      0x4e487b71\n        /* \"#utility.yul\":2826:2829   */\n      0xe0\n        /* \"#utility.yul\":2822:2842   */\n      shl\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2812:2843   */\n      mstore\n        /* \"#utility.yul\":2862:2866   */\n      0x41\n        /* \"#utility.yul\":2859:2860   */\n      0x04\n        /* \"#utility.yul\":2852:2867   */\n      mstore\n        /* \"#utility.yul\":2886:2890   */\n      0x24\n        /* \"#utility.yul\":2883:2884   */\n      0x00\n        /* \"#utility.yul\":2876:2891   */\n      revert\n        /* \"#utility.yul\":2902:3177   */\n    tag_448:\n        /* \"#utility.yul\":2973:2975   */\n      0x40\n        /* \"#utility.yul\":2967:2976   */\n      mload\n        /* \"#utility.yul\":3038:3040   */\n      0x1f\n        /* \"#utility.yul\":3019:3032   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3015:3042   */\n      and\n        /* \"#utility.yul\":3003:3043   */\n      dup2\n      add\n        /* \"#utility.yul\":3073:3091   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3092   */\n      dup2\n      gt\n        /* \"#utility.yul\":3094:3116   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3055:3117   */\n      or\n        /* \"#utility.yul\":3052:3140   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":3120:3138   */\n      tag_482\n      tag_166\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3156:3158   */\n      0x40\n        /* \"#utility.yul\":3149:3171   */\n      mstore\n        /* \"#utility.yul\":2902:3177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3182:3894   */\n    tag_449:\n        /* \"#utility.yul\":3236:3241   */\n      0x00\n        /* \"#utility.yul\":3289:3292   */\n      dup3\n        /* \"#utility.yul\":3282:3286   */\n      0x1f\n        /* \"#utility.yul\":3274:3280   */\n      dup4\n        /* \"#utility.yul\":3270:3287   */\n      add\n        /* \"#utility.yul\":3266:3293   */\n      slt\n        /* \"#utility.yul\":3256:3311   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":3307:3308   */\n      0x00\n        /* \"#utility.yul\":3304:3305   */\n      dup1\n        /* \"#utility.yul\":3297:3309   */\n      revert\n        /* \"#utility.yul\":3256:3311   */\n    tag_484:\n        /* \"#utility.yul\":3343:3349   */\n      dup2\n        /* \"#utility.yul\":3330:3350   */\n      calldataload\n        /* \"#utility.yul\":3369:3373   */\n      0x20\n        /* \"#utility.yul\":3392:3410   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3388:3390   */\n      dup3\n        /* \"#utility.yul\":3385:3411   */\n      gt\n        /* \"#utility.yul\":3382:3434   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":3414:3432   */\n      tag_486\n      tag_166\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3460:3462   */\n      dup2\n        /* \"#utility.yul\":3457:3458   */\n      0x05\n        /* \"#utility.yul\":3453:3463   */\n      shl\n        /* \"#utility.yul\":3483:3511   */\n      tag_487\n        /* \"#utility.yul\":3507:3509   */\n      dup3\n        /* \"#utility.yul\":3503:3505   */\n      dup3\n        /* \"#utility.yul\":3499:3510   */\n      add\n        /* \"#utility.yul\":3483:3511   */\n      tag_448\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3545:3560   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3615:3630   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":3611:3635   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3576:3588   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3647:3662   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":3644:3679   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3672:3673   */\n      dup1\n        /* \"#utility.yul\":3665:3677   */\n      revert\n        /* \"#utility.yul\":3644:3679   */\n    tag_488:\n        /* \"#utility.yul\":3711:3713   */\n      dup4\n        /* \"#utility.yul\":3703:3709   */\n      dup8\n        /* \"#utility.yul\":3699:3714   */\n      add\n        /* \"#utility.yul\":3688:3714   */\n      swap3\n      pop\n        /* \"#utility.yul\":3723:3865   */\n    tag_489:\n        /* \"#utility.yul\":3739:3745   */\n      dup5\n        /* \"#utility.yul\":3734:3737   */\n      dup4\n        /* \"#utility.yul\":3731:3746   */\n      lt\n        /* \"#utility.yul\":3723:3865   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":3805:3822   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":3793:3823   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3756:3768   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3843:3855   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":3723:3865   */\n      jump(tag_489)\n        /* \"#utility.yul\":3899:4568   */\n    tag_81:\n        /* \"#utility.yul\":4026:4032   */\n      0x00\n        /* \"#utility.yul\":4034:4040   */\n      dup1\n        /* \"#utility.yul\":4042:4048   */\n      0x00\n        /* \"#utility.yul\":4095:4097   */\n      0x60\n        /* \"#utility.yul\":4083:4092   */\n      dup5\n        /* \"#utility.yul\":4074:4081   */\n      dup7\n        /* \"#utility.yul\":4070:4093   */\n      sub\n        /* \"#utility.yul\":4066:4098   */\n      slt\n        /* \"#utility.yul\":4063:4115   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4111:4112   */\n      0x00\n        /* \"#utility.yul\":4108:4109   */\n      dup1\n        /* \"#utility.yul\":4101:4113   */\n      revert\n        /* \"#utility.yul\":4063:4115   */\n    tag_493:\n        /* \"#utility.yul\":4134:4163   */\n      tag_494\n        /* \"#utility.yul\":4153:4162   */\n      dup5\n        /* \"#utility.yul\":4134:4163   */\n      tag_447\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4124:4163   */\n      swap3\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x20\n        /* \"#utility.yul\":4203:4212   */\n      dup5\n        /* \"#utility.yul\":4199:4217   */\n      add\n        /* \"#utility.yul\":4186:4218   */\n      calldataload\n        /* \"#utility.yul\":4237:4255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4278:4280   */\n      dup1\n        /* \"#utility.yul\":4270:4276   */\n      dup3\n        /* \"#utility.yul\":4267:4281   */\n      gt\n        /* \"#utility.yul\":4264:4298   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4291:4292   */\n      dup1\n        /* \"#utility.yul\":4284:4296   */\n      revert\n        /* \"#utility.yul\":4264:4298   */\n    tag_495:\n        /* \"#utility.yul\":4317:4378   */\n      tag_496\n        /* \"#utility.yul\":4370:4377   */\n      dup8\n        /* \"#utility.yul\":4361:4367   */\n      dup4\n        /* \"#utility.yul\":4350:4359   */\n      dup9\n        /* \"#utility.yul\":4346:4368   */\n      add\n        /* \"#utility.yul\":4317:4378   */\n      tag_449\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4307:4378   */\n      swap4\n      pop\n        /* \"#utility.yul\":4431:4433   */\n      0x40\n        /* \"#utility.yul\":4420:4429   */\n      dup7\n        /* \"#utility.yul\":4416:4434   */\n      add\n        /* \"#utility.yul\":4403:4435   */\n      calldataload\n        /* \"#utility.yul\":4387:4435   */\n      swap2\n      pop\n        /* \"#utility.yul\":4460:4462   */\n      dup1\n        /* \"#utility.yul\":4450:4458   */\n      dup3\n        /* \"#utility.yul\":4447:4463   */\n      gt\n        /* \"#utility.yul\":4444:4480   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":4476:4477   */\n      0x00\n        /* \"#utility.yul\":4473:4474   */\n      dup1\n        /* \"#utility.yul\":4466:4478   */\n      revert\n        /* \"#utility.yul\":4444:4480   */\n    tag_497:\n      pop\n        /* \"#utility.yul\":4499:4562   */\n      tag_498\n        /* \"#utility.yul\":4554:4561   */\n      dup7\n        /* \"#utility.yul\":4543:4551   */\n      dup3\n        /* \"#utility.yul\":4532:4541   */\n      dup8\n        /* \"#utility.yul\":4528:4552   */\n      add\n        /* \"#utility.yul\":4499:4562   */\n      tag_449\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4489:4562   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3899:4568   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4796:4976   */\n    tag_89:\n        /* \"#utility.yul\":4855:4861   */\n      0x00\n        /* \"#utility.yul\":4908:4910   */\n      0x20\n        /* \"#utility.yul\":4896:4905   */\n      dup3\n        /* \"#utility.yul\":4887:4894   */\n      dup5\n        /* \"#utility.yul\":4883:4906   */\n      sub\n        /* \"#utility.yul\":4879:4911   */\n      slt\n        /* \"#utility.yul\":4876:4928   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":4924:4925   */\n      0x00\n        /* \"#utility.yul\":4921:4922   */\n      dup1\n        /* \"#utility.yul\":4914:4926   */\n      revert\n        /* \"#utility.yul\":4876:4928   */\n    tag_501:\n      pop\n        /* \"#utility.yul\":4947:4970   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":4796:4976   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5241   */\n    tag_104:\n        /* \"#utility.yul\":5049:5055   */\n      0x00\n        /* \"#utility.yul\":5057:5063   */\n      dup1\n        /* \"#utility.yul\":5110:5112   */\n      0x40\n        /* \"#utility.yul\":5098:5107   */\n      dup4\n        /* \"#utility.yul\":5089:5096   */\n      dup6\n        /* \"#utility.yul\":5085:5108   */\n      sub\n        /* \"#utility.yul\":5081:5113   */\n      slt\n        /* \"#utility.yul\":5078:5130   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":5126:5127   */\n      0x00\n        /* \"#utility.yul\":5123:5124   */\n      dup1\n        /* \"#utility.yul\":5116:5128   */\n      revert\n        /* \"#utility.yul\":5078:5130   */\n    tag_503:\n        /* \"#utility.yul\":5149:5178   */\n      tag_504\n        /* \"#utility.yul\":5168:5177   */\n      dup4\n        /* \"#utility.yul\":5149:5178   */\n      tag_447\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5139:5178   */\n      swap2\n      pop\n        /* \"#utility.yul\":5197:5235   */\n      tag_505\n        /* \"#utility.yul\":5231:5233   */\n      0x20\n        /* \"#utility.yul\":5220:5229   */\n      dup5\n        /* \"#utility.yul\":5216:5234   */\n      add\n        /* \"#utility.yul\":5197:5235   */\n      tag_447\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5187:5235   */\n      swap1\n      pop\n        /* \"#utility.yul\":4981:5241   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5983:6513   */\n    tag_451:\n        /* \"#utility.yul\":6025:6030   */\n      0x00\n        /* \"#utility.yul\":6078:6081   */\n      dup3\n        /* \"#utility.yul\":6071:6075   */\n      0x1f\n        /* \"#utility.yul\":6063:6069   */\n      dup4\n        /* \"#utility.yul\":6059:6076   */\n      add\n        /* \"#utility.yul\":6055:6082   */\n      slt\n        /* \"#utility.yul\":6045:6100   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":6096:6097   */\n      0x00\n        /* \"#utility.yul\":6093:6094   */\n      dup1\n        /* \"#utility.yul\":6086:6098   */\n      revert\n        /* \"#utility.yul\":6045:6100   */\n    tag_511:\n        /* \"#utility.yul\":6132:6138   */\n      dup2\n        /* \"#utility.yul\":6119:6139   */\n      calldataload\n        /* \"#utility.yul\":6158:6176   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6154:6156   */\n      dup2\n        /* \"#utility.yul\":6151:6177   */\n      gt\n        /* \"#utility.yul\":6148:6200   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":6180:6198   */\n      tag_513\n      tag_166\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":6224:6279   */\n      tag_514\n        /* \"#utility.yul\":6267:6269   */\n      0x1f\n        /* \"#utility.yul\":6248:6261   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6244:6271   */\n      and\n        /* \"#utility.yul\":6273:6277   */\n      0x20\n        /* \"#utility.yul\":6240:6278   */\n      add\n        /* \"#utility.yul\":6224:6279   */\n      tag_448\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6304:6306   */\n      dup2\n        /* \"#utility.yul\":6295:6302   */\n      dup2\n        /* \"#utility.yul\":6288:6307   */\n      mstore\n        /* \"#utility.yul\":6350:6353   */\n      dup5\n        /* \"#utility.yul\":6343:6347   */\n      0x20\n        /* \"#utility.yul\":6338:6340   */\n      dup4\n        /* \"#utility.yul\":6330:6336   */\n      dup7\n        /* \"#utility.yul\":6326:6341   */\n      add\n        /* \"#utility.yul\":6322:6348   */\n      add\n        /* \"#utility.yul\":6319:6354   */\n      gt\n        /* \"#utility.yul\":6316:6371   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6364:6365   */\n      dup1\n        /* \"#utility.yul\":6357:6369   */\n      revert\n        /* \"#utility.yul\":6316:6371   */\n    tag_515:\n        /* \"#utility.yul\":6432:6434   */\n      dup2\n        /* \"#utility.yul\":6425:6429   */\n      0x20\n        /* \"#utility.yul\":6417:6423   */\n      dup6\n        /* \"#utility.yul\":6413:6430   */\n      add\n        /* \"#utility.yul\":6406:6410   */\n      0x20\n        /* \"#utility.yul\":6397:6404   */\n      dup4\n        /* \"#utility.yul\":6393:6411   */\n      add\n        /* \"#utility.yul\":6380:6435   */\n      calldatacopy\n        /* \"#utility.yul\":6480:6481   */\n      0x00\n        /* \"#utility.yul\":6455:6471   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":6473:6477   */\n      0x20\n        /* \"#utility.yul\":6451:6478   */\n      add\n        /* \"#utility.yul\":6444:6482   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6459:6466   */\n      swap4\n        /* \"#utility.yul\":5983:6513   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6518:7461   */\n    tag_113:\n        /* \"#utility.yul\":6672:6678   */\n      0x00\n        /* \"#utility.yul\":6680:6686   */\n      dup1\n        /* \"#utility.yul\":6688:6694   */\n      0x00\n        /* \"#utility.yul\":6696:6702   */\n      dup1\n        /* \"#utility.yul\":6704:6710   */\n      0x00\n        /* \"#utility.yul\":6757:6760   */\n      0xa0\n        /* \"#utility.yul\":6745:6754   */\n      dup7\n        /* \"#utility.yul\":6736:6743   */\n      dup9\n        /* \"#utility.yul\":6732:6755   */\n      sub\n        /* \"#utility.yul\":6728:6761   */\n      slt\n        /* \"#utility.yul\":6725:6778   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":6774:6775   */\n      0x00\n        /* \"#utility.yul\":6771:6772   */\n      dup1\n        /* \"#utility.yul\":6764:6776   */\n      revert\n        /* \"#utility.yul\":6725:6778   */\n    tag_517:\n        /* \"#utility.yul\":6797:6826   */\n      tag_518\n        /* \"#utility.yul\":6816:6825   */\n      dup7\n        /* \"#utility.yul\":6797:6826   */\n      tag_447\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":6787:6826   */\n      swap5\n      pop\n        /* \"#utility.yul\":6845:6883   */\n      tag_519\n        /* \"#utility.yul\":6879:6881   */\n      0x20\n        /* \"#utility.yul\":6868:6877   */\n      dup8\n        /* \"#utility.yul\":6864:6882   */\n      add\n        /* \"#utility.yul\":6845:6883   */\n      tag_447\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6835:6883   */\n      swap4\n      pop\n        /* \"#utility.yul\":6934:6936   */\n      0x40\n        /* \"#utility.yul\":6923:6932   */\n      dup7\n        /* \"#utility.yul\":6919:6937   */\n      add\n        /* \"#utility.yul\":6906:6938   */\n      calldataload\n        /* \"#utility.yul\":6957:6975   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6998:7000   */\n      dup1\n        /* \"#utility.yul\":6990:6996   */\n      dup3\n        /* \"#utility.yul\":6987:7001   */\n      gt\n        /* \"#utility.yul\":6984:7018   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7014:7015   */\n      0x00\n        /* \"#utility.yul\":7011:7012   */\n      dup1\n        /* \"#utility.yul\":7004:7016   */\n      revert\n        /* \"#utility.yul\":6984:7018   */\n    tag_520:\n        /* \"#utility.yul\":7037:7098   */\n      tag_521\n        /* \"#utility.yul\":7090:7097   */\n      dup10\n        /* \"#utility.yul\":7081:7087   */\n      dup4\n        /* \"#utility.yul\":7070:7079   */\n      dup11\n        /* \"#utility.yul\":7066:7088   */\n      add\n        /* \"#utility.yul\":7037:7098   */\n      tag_449\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7027:7098   */\n      swap5\n      pop\n        /* \"#utility.yul\":7151:7153   */\n      0x60\n        /* \"#utility.yul\":7140:7149   */\n      dup9\n        /* \"#utility.yul\":7136:7154   */\n      add\n        /* \"#utility.yul\":7123:7155   */\n      calldataload\n        /* \"#utility.yul\":7107:7155   */\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7182   */\n      dup1\n        /* \"#utility.yul\":7170:7178   */\n      dup3\n        /* \"#utility.yul\":7167:7183   */\n      gt\n        /* \"#utility.yul\":7164:7200   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":7196:7197   */\n      0x00\n        /* \"#utility.yul\":7193:7194   */\n      dup1\n        /* \"#utility.yul\":7186:7198   */\n      revert\n        /* \"#utility.yul\":7164:7200   */\n    tag_522:\n        /* \"#utility.yul\":7219:7282   */\n      tag_523\n        /* \"#utility.yul\":7274:7281   */\n      dup10\n        /* \"#utility.yul\":7263:7271   */\n      dup4\n        /* \"#utility.yul\":7252:7261   */\n      dup11\n        /* \"#utility.yul\":7248:7272   */\n      add\n        /* \"#utility.yul\":7219:7282   */\n      tag_449\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":7209:7282   */\n      swap4\n      pop\n        /* \"#utility.yul\":7335:7338   */\n      0x80\n        /* \"#utility.yul\":7324:7333   */\n      dup9\n        /* \"#utility.yul\":7320:7339   */\n      add\n        /* \"#utility.yul\":7307:7340   */\n      calldataload\n        /* \"#utility.yul\":7291:7340   */\n      swap2\n      pop\n        /* \"#utility.yul\":7365:7367   */\n      dup1\n        /* \"#utility.yul\":7355:7363   */\n      dup3\n        /* \"#utility.yul\":7352:7368   */\n      gt\n        /* \"#utility.yul\":7349:7385   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":7381:7382   */\n      0x00\n        /* \"#utility.yul\":7378:7379   */\n      dup1\n        /* \"#utility.yul\":7371:7383   */\n      revert\n        /* \"#utility.yul\":7349:7385   */\n    tag_524:\n      pop\n        /* \"#utility.yul\":7404:7455   */\n      tag_525\n        /* \"#utility.yul\":7447:7454   */\n      dup9\n        /* \"#utility.yul\":7436:7444   */\n      dup3\n        /* \"#utility.yul\":7425:7434   */\n      dup10\n        /* \"#utility.yul\":7421:7445   */\n      add\n        /* \"#utility.yul\":7404:7455   */\n      tag_451\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7394:7455   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6518:7461   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7673:8070   */\n    tag_119:\n        /* \"#utility.yul\":7759:7765   */\n      0x00\n        /* \"#utility.yul\":7767:7773   */\n      dup1\n        /* \"#utility.yul\":7775:7781   */\n      0x00\n        /* \"#utility.yul\":7783:7789   */\n      dup1\n        /* \"#utility.yul\":7836:7839   */\n      0x80\n        /* \"#utility.yul\":7824:7833   */\n      dup6\n        /* \"#utility.yul\":7815:7822   */\n      dup8\n        /* \"#utility.yul\":7811:7834   */\n      sub\n        /* \"#utility.yul\":7807:7840   */\n      slt\n        /* \"#utility.yul\":7804:7857   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7853:7854   */\n      0x00\n        /* \"#utility.yul\":7850:7851   */\n      dup1\n        /* \"#utility.yul\":7843:7855   */\n      revert\n        /* \"#utility.yul\":7804:7857   */\n    tag_528:\n        /* \"#utility.yul\":7876:7905   */\n      tag_529\n        /* \"#utility.yul\":7895:7904   */\n      dup6\n        /* \"#utility.yul\":7876:7905   */\n      tag_447\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7866:7905   */\n      swap4\n      pop\n        /* \"#utility.yul\":7924:7962   */\n      tag_530\n        /* \"#utility.yul\":7958:7960   */\n      0x20\n        /* \"#utility.yul\":7947:7956   */\n      dup7\n        /* \"#utility.yul\":7943:7961   */\n      add\n        /* \"#utility.yul\":7924:7962   */\n      tag_447\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":7673:8070   */\n      swap4\n      swap7\n        /* \"#utility.yul\":7914:7962   */\n      swap4\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8009:8011   */\n      0x40\n        /* \"#utility.yul\":7994:8012   */\n      dup3\n      add\n        /* \"#utility.yul\":7981:8013   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":8060:8062   */\n      0x60\n        /* \"#utility.yul\":8045:8063   */\n      add\n        /* \"#utility.yul\":8032:8064   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":7673:8070   */\n      jump\t// out\n        /* \"#utility.yul\":8075:8681   */\n    tag_138:\n        /* \"#utility.yul\":8179:8185   */\n      0x00\n        /* \"#utility.yul\":8187:8193   */\n      dup1\n        /* \"#utility.yul\":8195:8201   */\n      0x00\n        /* \"#utility.yul\":8203:8209   */\n      dup1\n        /* \"#utility.yul\":8211:8217   */\n      0x00\n        /* \"#utility.yul\":8264:8267   */\n      0xa0\n        /* \"#utility.yul\":8252:8261   */\n      dup7\n        /* \"#utility.yul\":8243:8250   */\n      dup9\n        /* \"#utility.yul\":8239:8262   */\n      sub\n        /* \"#utility.yul\":8235:8268   */\n      slt\n        /* \"#utility.yul\":8232:8285   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":8281:8282   */\n      0x00\n        /* \"#utility.yul\":8278:8279   */\n      dup1\n        /* \"#utility.yul\":8271:8283   */\n      revert\n        /* \"#utility.yul\":8232:8285   */\n    tag_532:\n        /* \"#utility.yul\":8304:8333   */\n      tag_533\n        /* \"#utility.yul\":8323:8332   */\n      dup7\n        /* \"#utility.yul\":8304:8333   */\n      tag_447\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8294:8333   */\n      swap5\n      pop\n        /* \"#utility.yul\":8352:8390   */\n      tag_534\n        /* \"#utility.yul\":8386:8388   */\n      0x20\n        /* \"#utility.yul\":8375:8384   */\n      dup8\n        /* \"#utility.yul\":8371:8389   */\n      add\n        /* \"#utility.yul\":8352:8390   */\n      tag_447\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":8342:8390   */\n      swap4\n      pop\n        /* \"#utility.yul\":8437:8439   */\n      0x40\n        /* \"#utility.yul\":8426:8435   */\n      dup7\n        /* \"#utility.yul\":8422:8440   */\n      add\n        /* \"#utility.yul\":8409:8441   */\n      calldataload\n        /* \"#utility.yul\":8399:8441   */\n      swap3\n      pop\n        /* \"#utility.yul\":8488:8490   */\n      0x60\n        /* \"#utility.yul\":8477:8486   */\n      dup7\n        /* \"#utility.yul\":8473:8491   */\n      add\n        /* \"#utility.yul\":8460:8492   */\n      calldataload\n        /* \"#utility.yul\":8450:8492   */\n      swap2\n      pop\n        /* \"#utility.yul\":8543:8546   */\n      0x80\n        /* \"#utility.yul\":8532:8541   */\n      dup7\n        /* \"#utility.yul\":8528:8547   */\n      add\n        /* \"#utility.yul\":8515:8548   */\n      calldataload\n        /* \"#utility.yul\":8571:8589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8563:8569   */\n      dup2\n        /* \"#utility.yul\":8560:8590   */\n      gt\n        /* \"#utility.yul\":8557:8607   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":8603:8604   */\n      0x00\n        /* \"#utility.yul\":8600:8601   */\n      dup1\n        /* \"#utility.yul\":8593:8605   */\n      revert\n        /* \"#utility.yul\":8557:8607   */\n    tag_535:\n        /* \"#utility.yul\":8626:8675   */\n      tag_525\n        /* \"#utility.yul\":8667:8674   */\n      dup9\n        /* \"#utility.yul\":8658:8664   */\n      dup3\n        /* \"#utility.yul\":8647:8656   */\n      dup10\n        /* \"#utility.yul\":8643:8665   */\n      add\n        /* \"#utility.yul\":8626:8675   */\n      tag_451\n      jump\t// in\n        /* \"#utility.yul\":8686:9042   */\n    tag_154:\n        /* \"#utility.yul\":8888:8890   */\n      0x20\n        /* \"#utility.yul\":8870:8891   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8907:8925   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8900:8930   */\n      mstore\n        /* \"#utility.yul\":8966:9000   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8961:8963   */\n      0x40\n        /* \"#utility.yul\":8946:8964   */\n      dup3\n      add\n        /* \"#utility.yul\":8939:9001   */\n      mstore\n        /* \"#utility.yul\":9033:9035   */\n      0x60\n        /* \"#utility.yul\":9018:9036   */\n      add\n      swap1\n        /* \"#utility.yul\":8686:9042   */\n      jump\t// out\n        /* \"#utility.yul\":9401:9528   */\n    tag_452:\n        /* \"#utility.yul\":9462:9472   */\n      0x4e487b71\n        /* \"#utility.yul\":9457:9460   */\n      0xe0\n        /* \"#utility.yul\":9453:9473   */\n      shl\n        /* \"#utility.yul\":9450:9451   */\n      0x00\n        /* \"#utility.yul\":9443:9474   */\n      mstore\n        /* \"#utility.yul\":9493:9497   */\n      0x11\n        /* \"#utility.yul\":9490:9491   */\n      0x04\n        /* \"#utility.yul\":9483:9498   */\n      mstore\n        /* \"#utility.yul\":9517:9521   */\n      0x24\n        /* \"#utility.yul\":9514:9515   */\n      0x00\n        /* \"#utility.yul\":9507:9522   */\n      revert\n        /* \"#utility.yul\":9533:9661   */\n    tag_178:\n        /* \"#utility.yul\":9573:9576   */\n      0x00\n        /* \"#utility.yul\":9604:9605   */\n      dup3\n        /* \"#utility.yul\":9600:9606   */\n      not\n        /* \"#utility.yul\":9597:9598   */\n      dup3\n        /* \"#utility.yul\":9594:9607   */\n      gt\n        /* \"#utility.yul\":9591:9630   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":9610:9628   */\n      tag_542\n      tag_452\n      jump\t// in\n    tag_542:\n      pop\n        /* \"#utility.yul\":9646:9655   */\n      add\n      swap1\n        /* \"#utility.yul\":9533:9661   */\n      jump\t// out\n        /* \"#utility.yul\":9666:9791   */\n    tag_180:\n        /* \"#utility.yul\":9706:9710   */\n      0x00\n        /* \"#utility.yul\":9734:9735   */\n      dup3\n        /* \"#utility.yul\":9731:9732   */\n      dup3\n        /* \"#utility.yul\":9728:9736   */\n      lt\n        /* \"#utility.yul\":9725:9759   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":9739:9757   */\n      tag_545\n      tag_452\n      jump\t// in\n    tag_545:\n      pop\n        /* \"#utility.yul\":9776:9785   */\n      sub\n      swap1\n        /* \"#utility.yul\":9666:9791   */\n      jump\t// out\n        /* \"#utility.yul\":9796:9923   */\n    tag_184:\n        /* \"#utility.yul\":9857:9867   */\n      0x4e487b71\n        /* \"#utility.yul\":9852:9855   */\n      0xe0\n        /* \"#utility.yul\":9848:9868   */\n      shl\n        /* \"#utility.yul\":9845:9846   */\n      0x00\n        /* \"#utility.yul\":9838:9869   */\n      mstore\n        /* \"#utility.yul\":9888:9892   */\n      0x32\n        /* \"#utility.yul\":9885:9886   */\n      0x04\n        /* \"#utility.yul\":9878:9893   */\n      mstore\n        /* \"#utility.yul\":9912:9916   */\n      0x24\n        /* \"#utility.yul\":9909:9910   */\n      0x00\n        /* \"#utility.yul\":9902:9917   */\n      revert\n        /* \"#utility.yul\":9928:10064   */\n    tag_190:\n        /* \"#utility.yul\":9967:9970   */\n      0x00\n        /* \"#utility.yul\":9995:10000   */\n      dup2\n        /* \"#utility.yul\":9985:10024   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":10004:10022   */\n      tag_549\n      tag_452\n      jump\t// in\n    tag_549:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":10040:10058   */\n      add\n      swap1\n        /* \"#utility.yul\":9928:10064   */\n      jump\t// out\n        /* \"#utility.yul\":10069:10504   */\n    tag_453:\n        /* \"#utility.yul\":10122:10125   */\n      0x00\n        /* \"#utility.yul\":10160:10165   */\n      dup2\n        /* \"#utility.yul\":10154:10166   */\n      mload\n        /* \"#utility.yul\":10187:10193   */\n      dup1\n        /* \"#utility.yul\":10182:10185   */\n      dup5\n        /* \"#utility.yul\":10175:10194   */\n      mstore\n        /* \"#utility.yul\":10213:10217   */\n      0x20\n        /* \"#utility.yul\":10242:10244   */\n      dup1\n        /* \"#utility.yul\":10237:10240   */\n      dup6\n        /* \"#utility.yul\":10233:10245   */\n      add\n        /* \"#utility.yul\":10226:10245   */\n      swap5\n      pop\n        /* \"#utility.yul\":10279:10281   */\n      dup1\n        /* \"#utility.yul\":10272:10277   */\n      dup5\n        /* \"#utility.yul\":10268:10282   */\n      add\n        /* \"#utility.yul\":10300:10301   */\n      0x00\n        /* \"#utility.yul\":10310:10479   */\n    tag_551:\n        /* \"#utility.yul\":10324:10330   */\n      dup4\n        /* \"#utility.yul\":10321:10322   */\n      dup2\n        /* \"#utility.yul\":10318:10331   */\n      lt\n        /* \"#utility.yul\":10310:10479   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":10385:10398   */\n      dup2\n      mload\n        /* \"#utility.yul\":10373:10399   */\n      dup8\n      mstore\n        /* \"#utility.yul\":10419:10431   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":10454:10469   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":10346:10347   */\n      0x01\n        /* \"#utility.yul\":10339:10348   */\n      add\n        /* \"#utility.yul\":10310:10479   */\n      jump(tag_551)\n    tag_553:\n      pop\n        /* \"#utility.yul\":10495:10498   */\n      swap5\n      swap6\n        /* \"#utility.yul\":10069:10504   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10509:11398   */\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10960:10975   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":10942:10976   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11012:11027   */\n      dup5\n      and\n        /* \"#utility.yul\":11007:11009   */\n      0x20\n        /* \"#utility.yul\":10992:11010   */\n      dup3\n      add\n        /* \"#utility.yul\":10985:11028   */\n      mstore\n        /* \"#utility.yul\":10922:10925   */\n      0xa0\n        /* \"#utility.yul\":11059:11061   */\n      0x40\n        /* \"#utility.yul\":11044:11062   */\n      dup3\n      add\n        /* \"#utility.yul\":11037:11068   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10885:10889   */\n      0x00\n      swap1\n        /* \"#utility.yul\":11091:11148   */\n      tag_555\n      swap1\n        /* \"#utility.yul\":11128:11147   */\n      dup4\n      add\n        /* \"#utility.yul\":11120:11126   */\n      dup6\n        /* \"#utility.yul\":11091:11148   */\n      tag_453\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":11196:11205   */\n      dup3\n        /* \"#utility.yul\":11188:11194   */\n      dup2\n        /* \"#utility.yul\":11184:11206   */\n      sub\n        /* \"#utility.yul\":11179:11181   */\n      0x60\n        /* \"#utility.yul\":11168:11177   */\n      dup5\n        /* \"#utility.yul\":11164:11182   */\n      add\n        /* \"#utility.yul\":11157:11207   */\n      mstore\n        /* \"#utility.yul\":11230:11274   */\n      tag_556\n        /* \"#utility.yul\":11267:11273   */\n      dup2\n        /* \"#utility.yul\":11259:11265   */\n      dup6\n        /* \"#utility.yul\":11230:11274   */\n      tag_453\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":11311:11333   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":11305:11308   */\n      0x80\n        /* \"#utility.yul\":11290:11309   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":11283:11334   */\n      swap4\n      swap1\n      swap4\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":11358:11359   */\n      0x00\n        /* \"#utility.yul\":11343:11360   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11389:11391   */\n      0x20\n        /* \"#utility.yul\":11377:11392   */\n      add\n      swap5\n        /* \"#utility.yul\":10509:11398   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12094:12729   */\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12453:12468   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":12435:12469   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12505:12520   */\n      swap3\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":12500:12502   */\n      0x20\n        /* \"#utility.yul\":12485:12503   */\n      dup4\n      add\n        /* \"#utility.yul\":12478:12521   */\n      mstore\n        /* \"#utility.yul\":12552:12554   */\n      0x40\n        /* \"#utility.yul\":12537:12555   */\n      dup3\n      add\n        /* \"#utility.yul\":12530:12564   */\n      mstore\n        /* \"#utility.yul\":12595:12597   */\n      0x60\n        /* \"#utility.yul\":12580:12598   */\n      dup2\n      add\n        /* \"#utility.yul\":12573:12607   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":12415:12418   */\n      0xa0\n        /* \"#utility.yul\":12638:12641   */\n      0x80\n        /* \"#utility.yul\":12623:12642   */\n      dup3\n      add\n        /* \"#utility.yul\":12616:12648   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12378:12382   */\n      0x00\n        /* \"#utility.yul\":12664:12683   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12657:12687   */\n      mstore\n        /* \"#utility.yul\":12719:12722   */\n      0xc0\n        /* \"#utility.yul\":12704:12723   */\n      add\n      swap1\n        /* \"#utility.yul\":12094:12729   */\n      jump\t// out\n        /* \"#utility.yul\":13791:14000   */\n    tag_294:\n        /* \"#utility.yul\":13823:13824   */\n      0x00\n        /* \"#utility.yul\":13849:13850   */\n      dup3\n        /* \"#utility.yul\":13839:13971   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":13893:13903   */\n      0x4e487b71\n        /* \"#utility.yul\":13888:13891   */\n      0xe0\n        /* \"#utility.yul\":13884:13904   */\n      shl\n        /* \"#utility.yul\":13881:13882   */\n      0x00\n        /* \"#utility.yul\":13874:13905   */\n      mstore\n        /* \"#utility.yul\":13928:13932   */\n      0x12\n        /* \"#utility.yul\":13925:13926   */\n      0x04\n        /* \"#utility.yul\":13918:13933   */\n      mstore\n        /* \"#utility.yul\":13956:13960   */\n      0x24\n        /* \"#utility.yul\":13953:13954   */\n      0x00\n        /* \"#utility.yul\":13946:13961   */\n      revert\n        /* \"#utility.yul\":13839:13971   */\n    tag_564:\n      pop\n        /* \"#utility.yul\":13985:13994   */\n      mod\n      swap1\n        /* \"#utility.yul\":13791:14000   */\n      jump\t// out\n        /* \"#utility.yul\":14005:14140   */\n    tag_296:\n        /* \"#utility.yul\":14044:14047   */\n      0x00\n        /* \"#utility.yul\":14065:14082   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":14062:14105   */\n      tag_567\n      jumpi\n        /* \"#utility.yul\":14085:14103   */\n      tag_567\n      tag_452\n      jump\t// in\n    tag_567:\n      pop\n        /* \"#utility.yul\":14132:14133   */\n      0x01\n        /* \"#utility.yul\":14121:14134   */\n      add\n      swap1\n        /* \"#utility.yul\":14005:14140   */\n      jump\t// out\n        /* \"#utility.yul\":14398:15650   */\n    tag_325:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14888:14903   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":14870:14904   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14961:14976   */\n      dup5\n      and\n        /* \"#utility.yul\":14923:14925   */\n      0x20\n        /* \"#utility.yul\":14941:14959   */\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":14934:14977   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":14819:14822   */\n      0xa0\n        /* \"#utility.yul\":15008:15010   */\n      0x40\n        /* \"#utility.yul\":14993:15011   */\n      dup4\n      add\n        /* \"#utility.yul\":14986:15017   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15066:15079   */\n      dup5\n      sload\n        /* \"#utility.yul\":14804:14823   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":15088:15110   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14771:14775   */\n      0x00\n        /* \"#utility.yul\":15154:15171   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":15194:15210   */\n      dup3\n      dup2\n      keccak256\n        /* \"#utility.yul\":14771:14775   */\n      swap1\n      swap3\n        /* \"#utility.yul\":15194:15210   */\n      swap1\n      swap2\n        /* \"#utility.yul\":15141:15144   */\n      0xc0\n        /* \"#utility.yul\":15126:15145   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":14923:14925   */\n      swap1\n        /* \"#utility.yul\":14771:14775   */\n      dup5\n        /* \"#utility.yul\":15238:15406   */\n    tag_570:\n        /* \"#utility.yul\":15252:15258   */\n      dup2\n        /* \"#utility.yul\":15249:15250   */\n      dup2\n        /* \"#utility.yul\":15246:15259   */\n      lt\n        /* \"#utility.yul\":15238:15406   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":15313:15326   */\n      dup5\n      sload\n        /* \"#utility.yul\":15301:15327   */\n      dup5\n      mstore\n        /* \"#utility.yul\":15394:15395   */\n      0x01\n        /* \"#utility.yul\":15382:15396   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":15347:15359   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":15267:15276   */\n      add\n        /* \"#utility.yul\":15238:15406   */\n      jump(tag_570)\n    tag_572:\n        /* \"#utility.yul\":15242:15245   */\n      pop\n      pop\n        /* \"#utility.yul\":15451:15460   */\n      dup5\n        /* \"#utility.yul\":15446:15449   */\n      dup3\n        /* \"#utility.yul\":15442:15461   */\n      sub\n        /* \"#utility.yul\":15437:15439   */\n      0x60\n        /* \"#utility.yul\":15426:15435   */\n      dup7\n        /* \"#utility.yul\":15422:15440   */\n      add\n        /* \"#utility.yul\":15415:15462   */\n      mstore\n        /* \"#utility.yul\":15485:15526   */\n      tag_573\n        /* \"#utility.yul\":15522:15525   */\n      dup3\n        /* \"#utility.yul\":15514:15520   */\n      dup8\n        /* \"#utility.yul\":15485:15526   */\n      tag_453\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15563:15585   */\n      dup6\n      dup2\n      sub\n        /* \"#utility.yul\":15557:15560   */\n      0x80\n        /* \"#utility.yul\":15542:15561   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":15535:15586   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":15610:15611   */\n      0x00\n        /* \"#utility.yul\":15595:15612   */\n      dup6\n      mstore\n        /* \"#utility.yul\":15629:15644   */\n      swap1\n      swap4\n      add\n      swap8\n        /* \"#utility.yul\":14398:15650   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16467:16594   */\n    tag_389:\n        /* \"#utility.yul\":16528:16538   */\n      0x4e487b71\n        /* \"#utility.yul\":16523:16526   */\n      0xe0\n        /* \"#utility.yul\":16519:16539   */\n      shl\n        /* \"#utility.yul\":16516:16517   */\n      0x00\n        /* \"#utility.yul\":16509:16540   */\n      mstore\n        /* \"#utility.yul\":16559:16563   */\n      0x31\n        /* \"#utility.yul\":16556:16557   */\n      0x04\n        /* \"#utility.yul\":16549:16564   */\n      mstore\n        /* \"#utility.yul\":16583:16587   */\n      0x24\n        /* \"#utility.yul\":16580:16581   */\n      0x00\n        /* \"#utility.yul\":16573:16588   */\n      revert\n        /* \"#utility.yul\":16979:17256   */\n    tag_411:\n        /* \"#utility.yul\":17046:17052   */\n      0x00\n        /* \"#utility.yul\":17099:17101   */\n      0x20\n        /* \"#utility.yul\":17087:17096   */\n      dup3\n        /* \"#utility.yul\":17078:17085   */\n      dup5\n        /* \"#utility.yul\":17074:17097   */\n      sub\n        /* \"#utility.yul\":17070:17102   */\n      slt\n        /* \"#utility.yul\":17067:17119   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":17115:17116   */\n      0x00\n        /* \"#utility.yul\":17112:17113   */\n      dup1\n        /* \"#utility.yul\":17105:17117   */\n      revert\n        /* \"#utility.yul\":17067:17119   */\n    tag_579:\n        /* \"#utility.yul\":17147:17156   */\n      dup2\n        /* \"#utility.yul\":17141:17157   */\n      mload\n        /* \"#utility.yul\":17200:17205   */\n      dup1\n        /* \"#utility.yul\":17193:17206   */\n      iszero\n        /* \"#utility.yul\":17186:17207   */\n      iszero\n        /* \"#utility.yul\":17179:17184   */\n      dup2\n        /* \"#utility.yul\":17176:17208   */\n      eq\n        /* \"#utility.yul\":17166:17226   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":17222:17223   */\n      0x00\n        /* \"#utility.yul\":17219:17220   */\n      dup1\n        /* \"#utility.yul\":17212:17224   */\n      revert\n        /* \"#utility.yul\":18437:18695   */\n    tag_454:\n        /* \"#utility.yul\":18509:18510   */\n      0x00\n        /* \"#utility.yul\":18519:18632   */\n    tag_585:\n        /* \"#utility.yul\":18533:18539   */\n      dup4\n        /* \"#utility.yul\":18530:18531   */\n      dup2\n        /* \"#utility.yul\":18527:18540   */\n      lt\n        /* \"#utility.yul\":18519:18632   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":18609:18620   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":18603:18621   */\n      mload\n        /* \"#utility.yul\":18590:18601   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":18583:18622   */\n      mstore\n        /* \"#utility.yul\":18555:18557   */\n      0x20\n        /* \"#utility.yul\":18548:18558   */\n      add\n        /* \"#utility.yul\":18519:18632   */\n      jump(tag_585)\n    tag_587:\n        /* \"#utility.yul\":18650:18656   */\n      dup4\n        /* \"#utility.yul\":18647:18648   */\n      dup2\n        /* \"#utility.yul\":18644:18657   */\n      gt\n        /* \"#utility.yul\":18641:18689   */\n      iszero\n      tag_402\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":18685:18686   */\n      0x00\n        /* \"#utility.yul\":18667:18683   */\n      swap2\n      add\n        /* \"#utility.yul\":18660:18687   */\n      mstore\n        /* \"#utility.yul\":18437:18695   */\n      jump\t// out\n        /* \"#utility.yul\":18700:18974   */\n    tag_428:\n        /* \"#utility.yul\":18829:18832   */\n      0x00\n        /* \"#utility.yul\":18867:18873   */\n      dup3\n        /* \"#utility.yul\":18861:18874   */\n      mload\n        /* \"#utility.yul\":18883:18936   */\n      tag_590\n        /* \"#utility.yul\":18929:18935   */\n      dup2\n        /* \"#utility.yul\":18924:18927   */\n      dup5\n        /* \"#utility.yul\":18917:18921   */\n      0x20\n        /* \"#utility.yul\":18909:18915   */\n      dup8\n        /* \"#utility.yul\":18905:18922   */\n      add\n        /* \"#utility.yul\":18883:18936   */\n      tag_454\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":18952:18968   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":18700:18974   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18979:19362   */\n    tag_441:\n        /* \"#utility.yul\":19128:19130   */\n      0x20\n        /* \"#utility.yul\":19117:19126   */\n      dup2\n        /* \"#utility.yul\":19110:19131   */\n      mstore\n        /* \"#utility.yul\":19091:19095   */\n      0x00\n        /* \"#utility.yul\":19160:19166   */\n      dup3\n        /* \"#utility.yul\":19154:19167   */\n      mload\n        /* \"#utility.yul\":19203:19209   */\n      dup1\n        /* \"#utility.yul\":19198:19200   */\n      0x20\n        /* \"#utility.yul\":19187:19196   */\n      dup5\n        /* \"#utility.yul\":19183:19201   */\n      add\n        /* \"#utility.yul\":19176:19210   */\n      mstore\n        /* \"#utility.yul\":19219:19285   */\n      tag_592\n        /* \"#utility.yul\":19278:19284   */\n      dup2\n        /* \"#utility.yul\":19273:19275   */\n      0x40\n        /* \"#utility.yul\":19262:19271   */\n      dup6\n        /* \"#utility.yul\":19258:19276   */\n      add\n        /* \"#utility.yul\":19253:19255   */\n      0x20\n        /* \"#utility.yul\":19245:19251   */\n      dup8\n        /* \"#utility.yul\":19241:19256   */\n      add\n        /* \"#utility.yul\":19219:19285   */\n      tag_454\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":19346:19348   */\n      0x1f\n        /* \"#utility.yul\":19325:19340   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":19321:19350   */\n      and\n        /* \"#utility.yul\":19306:19351   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":19353:19355   */\n      0x40\n        /* \"#utility.yul\":19302:19356   */\n      add\n      swap3\n        /* \"#utility.yul\":18979:19362   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204e36e118cddd0a3ca74d4bdac127e6e765102aaecefcf1d405c80d9fb60e374e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1874": {
									"entryPoint": null,
									"id": 1874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2814": {
									"entryPoint": null,
									"id": 2814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1954": {
									"entryPoint": 57,
									"id": 1954,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052611c2060015560006005556039600a556052600b556064600c5534801561002a57600080fd5b5061003433610039565b610089565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612171806100986000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379c5e977116100f9578063c409144311610097578063ec3c6dee11610071578063ec3c6dee146104a6578063ed9371d7146104af578063f23a6e61146104b8578063f2fde38b146104d757600080fd5b8063c409144314610462578063c971ebb314610475578063ea8a1af01461049e57600080fd5b80639fdd3a3f116100d35780639fdd3a3f1461034c578063a87430ba1461035f578063bc197c8114610417578063bf90fc1e1461044f57600080fd5b806379c5e977146103155780638705fcd4146103285780638da5cb5b1461033b57600080fd5b80635c39331c1161016657806363c668911161014057806363c66891146102d4578063647846a5146102e75780636b392680146102fa578063715018a61461030d57600080fd5b80635c39331c146102705780635dada3bb146102ae5780635dbc3838146102c157600080fd5b80631df0c04c116101a25780631df0c04c1461022b5780633f3ed4ca146102425780634b02218f146102555780634e71d92d1461026857600080fd5b806301ffc9a7146101c9578063087bc228146101f157806319b8094b14610206575b600080fd5b6101dc6101d73660046119fc565b6104ea565b60405190151581526020015b60405180910390f35b6102046101ff366004611a42565b610521565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b610234600a5481565b6040519081526020016101e8565b610204610250366004611a96565b6105de565b610204610263366004611ac2565b610616565b610204610810565b61028361027e366004611af5565b6109b5565b604080516001600160a01b0395861681529490931660208501529183015260608201526080016101e8565b6102046102bc366004611af5565b610a2c565b6102346102cf366004611af5565b610a78565b6102046102e2366004611bcc565b610acb565b600254610213906001600160a01b031681565b610204610308366004611c40565b610b80565b610204610baf565b610204610323366004611c40565b610be5565b610204610336366004611af5565b610c14565b6000546001600160a01b0316610213565b61020461035a366004611c59565b610c60565b6103d161036d366004611af5565b600d602090815260009182526040918290208251808401845281546001600160a01b03908116825260018301548285015284518086019095526002830154811685526003830154938501939093526004820154600590920154909392919091169084565b6040805185516001600160a01b039081168252602096870151878301528551811692820192909252949093015160608501529116608083015260a082015260c0016101e8565b610436610425366004611cfc565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101e8565b61020461045d366004611da6565b610d16565b610204610470366004611af5565b611162565b610234610483366004611af5565b6001600160a01b03166000908152600e602052604090205490565b6102046112b9565b610234600b5481565b610234600c5481565b6104366104c6366004611de8565b63f23a6e6160e01b95945050505050565b6102046104e5366004611af5565b611454565b60006001600160e01b03198216630271189760e51b148061051b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146105545760405162461bcd60e51b815260040161054b90611e4d565b60405180910390fd5b600680546001600160a01b03199081166001600160a01b03968716908117909255600780548216958716959095178555600880548216948716949094178455600980549091169286169290921782556000908152600f6020526040808220600190819055945486168252808220859055925485168152828120939093555490921681522060029055565b6000546001600160a01b031633146106085760405162461bcd60e51b815260040161054b90611e4d565b600a92909255600b55600c55565b60008167ffffffffffffffff81111561063157610631611b10565b60405190808252806020026020018201604052801561065a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561067857610678611b10565b6040519080825280602002602001820160405280156106a1578160200160208202803683370190505b509050600084116106f45760405162461bcd60e51b815260206004820152601960248201527f7374617274206d757374206d6f7265207468616e207a65726f00000000000000604482015260640161054b565b600060016107028686611e98565b61070c9190611eb0565b90505b8481106107a45780836107228783611eb0565b8151811061073257610732611ec7565b602090810291909101015260018261074a8784611eb0565b8151811061075a5761075a611ec7565b6020908102919091018101919091526001600160a01b0387166000908152600e8252604081208054600181018255908252919020018190558061079c81611edd565b91505061070f565b50604051631759616b60e11b81526001600160a01b03861690632eb2c2d6906107d7903390309087908790600401611f2f565b600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050505050505050565b336000908152600d6020526040812060058101544292036108665760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8160015482600501546108799190611e98565b10156108bb5760405162461bcd60e51b81526020600482015260116024820152706e6f742066696e697368206d6174696e6760781b604482015260640161054b565b60048101546001600160a01b03166000818152600e6020526040812081906108e2906114ef565b6001600160a01b0385166000908152600e6020526040902091935091506109099082611581565b604051637921219560e11b81526001600160a01b0384169063f242432a9061093c90309033908790600190600401611f8a565b600060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050505050565b6001600160a01b0381166000908152600d602052604081206005015481908190819081036109ee57506000925082915081905080610a25565b505050506001600160a01b038181166000908152600d60205260409020805460028201546001830154600390930154918416931691905b9193509193565b6000546001600160a01b03163314610a565760405162461bcd60e51b815260040161054b90611e4d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d60205260408120600501548103610aa257506000919050565b6001546001600160a01b0383166000908152600d602052604090206005015461051b9190611e98565b6000546001600160a01b03163314610af55760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0383166000908152600e60205260409020610b179083611673565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610b49903390309087908790600401611f2f565b600060405180830381600087803b158015610b6357600080fd5b505af1158015610b77573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610baa5760405162461bcd60e51b815260040161054b90611e4d565b600455565b6000546001600160a01b03163314610bd95760405162461bcd60e51b815260040161054b90611e4d565b610be360006116ce565b565b6000546001600160a01b03163314610c0f5760405162461bcd60e51b815260040161054b90611e4d565b600155565b6000546001600160a01b03163314610c3e5760405162461bcd60e51b815260040161054b90611e4d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b038181166000908152600d602052604081206004810180546001600160a01b0319169386169390931790925560058201549003610d11576006546001600160a01b039081166000908152600f6020526040808220600190819055600754841683528183208190556008548416835281832055600954909216815220600290555b505050565b336000908152600d60205260409020600581015415610d775760405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206272656564206f6e636520617420612074696d6500000000000000604482015260640161054b565b6001600160a01b0385166000908152600f60209081526040808320546006850183528184208785529092529091205410610de05760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6001600160a01b0384166000908152600f60209081526040808320546006850183528184208685529092529091205410610e495760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b600354600454600254610e6d926001600160a01b039182169233929091169061171e565b604051637921219560e11b81526001600160a01b0386169063f242432a90610ea090339030908890600190600401611f8a565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b5050604051637921219560e11b81526001600160a01b038716925063f242432a9150610f0590339030908790600190600401611f8a565b600060405180830381600087803b158015610f1f57600080fd5b505af1158015610f33573d6000803e3d6000fd5b505042600584810182905584546001600160a01b038a81166001600160a01b031992831617875560018701899055600287018054918b169190921617905560038501869055546040805160208101939093523360601b6bffffffffffffffffffffffff191690830152605482015260009250606491506074016040516020818303038152906040528051906020012060001c610fcf9190611fc2565b600580549192506000610fe183611fe4565b91905055506000600a5482101561100457506006546001600160a01b0316611066565b600a5482101580156110175750600b5482105b1561102e57506007546001600160a01b0316611066565b600b5482101580156110415750600c5482105b1561105857506008546001600160a01b0316611066565b506009546001600160a01b03165b6004830180546001600160a01b0319166001600160a01b038381169190911790915587166000908152600684016020908152604080832088845290915281208054600192906110b6908490611e98565b90915550506001600160a01b0386166000908152600684016020908152604080832087845290915281208054600192906110f1908490611e98565b909155505060028301548354600185015460038601546040516001600160a01b0394851694939093169233927fe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b609261115192918252602082015260400190565b60405180910390a450505050505050565b6000546001600160a01b0316331461118c5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0381166000908152600e6020526040812054908167ffffffffffffffff8111156111bf576111bf611b10565b6040519080825280602002602001820160405280156111e8578160200160208202803683370190505b50905060005b8281101561122757600182828151811061120a5761120a611ec7565b60209081029190910101528061121f81611fe4565b9150506111ee565b506001600160a01b0383166000818152600e6020526040908190209051631759616b60e11b8152632eb2c2d69161126691309133918790600401611ffd565b600060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600e60205260408120610d11916119ca565b336000908152600d60205260408120600581015490910361130f5760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8054600180830154604051637921219560e11b81526001600160a01b039093169263f242432a92611347923092339290600401611f8a565b600060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b5050505060028101546003820154604051637921219560e11b81526001600160a01b039092169163f242432a916113b59130913391600190600401611f8a565b600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505060006005840155505060028101548154600183015460038401546040516001600160a01b0394851694939093169233927f9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d9261144992918252602082015260400190565b60405180910390a450565b6000546001600160a01b0316331461147e5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0381166114e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054b565b6114ec816116ce565b50565b6000808260008154811061150557611505611ec7565b906000526020600020015491506000905060005b835481101561157b578284828154811061153557611535611ec7565b906000526020600020015410156115695783818154811061155857611558611ec7565b906000526020600020015492508091505b8061157381611fe4565b915050611519565b50915091565b815481106115dd5760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b606482015260840161054b565b81546115eb90600190611eb0565b81101561164957816115fe826001611e98565b8154811061160e5761160e611ec7565b906000526020600020015482828154811061162b5761162b611ec7565b6000918252602090912001558061164181611fe4565b9150506115dd565b8180548061165957611659612088565b600190038181906000526020600020016000905590555050565b8051156116ca5760005b8151811015610d11578282828151811061169957611699611ec7565b60209081029190910181015182546001810184556000938452919092200155806116c281611fe4565b91505061167d565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261177890859061177e565b50505050565b60006117d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118509092919063ffffffff16565b805190915015610d1157808060200190518101906117f1919061209e565b610d115760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054b565b606061185f8484600085611869565b90505b9392505050565b6060824710156118ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161054b565b843b6119185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054b565b600080866001600160a01b0316858760405161193491906120ec565b60006040518083038185875af1925050503d8060008114611971576040519150601f19603f3d011682016040523d82523d6000602084013e611976565b606091505b5091509150611986828286611991565b979650505050505050565b606083156119a0575081611862565b8251156119b05782518084602001fd5b8160405162461bcd60e51b815260040161054b9190612108565b50805460008255906000526020600020908101906114ec91905b808211156119f857600081556001016119e4565b5090565b600060208284031215611a0e57600080fd5b81356001600160e01b03198116811461186257600080fd5b80356001600160a01b0381168114611a3d57600080fd5b919050565b60008060008060808587031215611a5857600080fd5b611a6185611a26565b9350611a6f60208601611a26565b9250611a7d60408601611a26565b9150611a8b60608601611a26565b905092959194509250565b600080600060608486031215611aab57600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611ad757600080fd5b611ae084611a26565b95602085013595506040909401359392505050565b600060208284031215611b0757600080fd5b61186282611a26565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b4f57611b4f611b10565b604052919050565b600082601f830112611b6857600080fd5b8135602067ffffffffffffffff821115611b8457611b84611b10565b8160051b611b93828201611b26565b9283528481018201928281019087851115611bad57600080fd5b83870192505b8483101561198657823582529183019190830190611bb3565b600080600060608486031215611be157600080fd5b611bea84611a26565b9250602084013567ffffffffffffffff80821115611c0757600080fd5b611c1387838801611b57565b93506040860135915080821115611c2957600080fd5b50611c3686828701611b57565b9150509250925092565b600060208284031215611c5257600080fd5b5035919050565b60008060408385031215611c6c57600080fd5b611c7583611a26565b9150611c8360208401611a26565b90509250929050565b600082601f830112611c9d57600080fd5b813567ffffffffffffffff811115611cb757611cb7611b10565b611cca601f8201601f1916602001611b26565b818152846020838601011115611cdf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d1457600080fd5b611d1d86611a26565b9450611d2b60208701611a26565b9350604086013567ffffffffffffffff80821115611d4857600080fd5b611d5489838a01611b57565b94506060880135915080821115611d6a57600080fd5b611d7689838a01611b57565b93506080880135915080821115611d8c57600080fd5b50611d9988828901611c8c565b9150509295509295909350565b60008060008060808587031215611dbc57600080fd5b611dc585611a26565b9350611dd360208601611a26565b93969395505050506040820135916060013590565b600080600080600060a08688031215611e0057600080fd5b611e0986611a26565b9450611e1760208701611a26565b93506040860135925060608601359150608086013567ffffffffffffffff811115611e4157600080fd5b611d9988828901611c8c565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eab57611eab611e82565b500190565b600082821015611ec257611ec2611e82565b500390565b634e487b7160e01b600052603260045260246000fd5b600081611eec57611eec611e82565b506000190190565b600081518084526020808501945080840160005b83811015611f2457815187529582019590820190600101611f08565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090611f5b90830185611ef4565b8281036060840152611f6d8185611ef4565b838103608090940193909352505060008152602001949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600082611fdf57634e487b7160e01b600052601260045260246000fd5b500690565b600060018201611ff657611ff6611e82565b5060010190565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b818110156120565784548452600194850194938301930161203a565b5050848203606086015261206a8287611ef4565b85810360809096019590955260008552909301979650505050505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156120b057600080fd5b8151801515811461186257600080fd5b60005b838110156120db5781810151838201526020016120c3565b838111156117785750506000910152565b600082516120fe8184602087016120c0565b9190910192915050565b60208152600082518060208401526121278160408501602087016120c0565b601f01601f1916919091016040019291505056fea26469706673582212204e36e118cddd0a3ca74d4bdac127e6e765102aaecefcf1d405c80d9fb60e374e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x1C20 PUSH1 0x1 SSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x39 PUSH1 0xA SSTORE PUSH1 0x52 PUSH1 0xB SSTORE PUSH1 0x64 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34 CALLER PUSH2 0x39 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2171 DUP1 PUSH2 0x98 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79C5E977 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC3C6DEE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC3C6DEE EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED9371D7 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4091443 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xC971EBB3 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDD3A3F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9FDD3A3F EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xBF90FC1E EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79C5E977 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x63C66891 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x6B392680 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x5DADA3BB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5DBC3838 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF0C04C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1DF0C04C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3F3ED4CA EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x87BC228 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x19B8094B EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A42 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A96 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x213 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x204 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 AND DUP6 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD MLOAD DUP8 DUP4 ADD MSTORE DUP6 MLOAD DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x51B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR DUP6 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE SWAP5 SLOAD DUP7 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP3 SLOAD DUP6 AND DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374617274206D757374206D6F7265207468616E207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x702 DUP7 DUP7 PUSH2 0x1E98 JUMP JUMPDEST PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT PUSH2 0x7A4 JUMPI DUP1 DUP4 PUSH2 0x722 DUP8 DUP4 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH2 0x732 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x74A DUP8 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE DUP1 PUSH2 0x79C DUP2 PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0x7D7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP SWAP3 SUB PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F742066696E697368206D6174696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x8E2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x909 SWAP1 DUP3 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x93C SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SUB PUSH2 0x9EE JUMPI POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xA25 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP5 AND SWAP4 AND SWAP2 SWAP1 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SUB PUSH2 0xAA2 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB17 SWAP1 DUP4 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xB49 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0xBE3 PUSH1 0x0 PUSH2 0x16CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SUB PUSH2 0xD11 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD ISZERO PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206272656564206F6E636520617420612074696D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE6D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xEA0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xF242432A SWAP2 POP PUSH2 0xF05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 DUP5 DUP2 ADD DUP3 SWAP1 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP8 SSTORE PUSH1 0x1 DUP8 ADD DUP10 SWAP1 SSTORE PUSH1 0x2 DUP8 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD DUP7 SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x64 SWAP2 POP PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xFE1 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x1004 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1017 JUMPI POP PUSH1 0xB SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x102E JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI POP PUSH1 0xC SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x1058 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x10B6 SWAP1 DUP5 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x10F1 SWAP1 DUP5 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0xE399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60 SWAP3 PUSH2 0x1151 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BF PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x120A JUMPI PUSH2 0x120A PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x121F DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0x2EB2C2D6 SWAP2 PUSH2 0x1266 SWAP2 ADDRESS SWAP2 CALLER SWAP2 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1294 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD11 SWAP2 PUSH2 0x19CA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xF242432A SWAP3 PUSH2 0x1347 SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF242432A SWAP2 PUSH2 0x13B5 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0x9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D SWAP3 PUSH2 0x1449 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1505 JUMPI PUSH2 0x1505 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x157B JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1535 JUMPI PUSH2 0x1535 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0x1569 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1558 JUMPI PUSH2 0x1558 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1573 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1519 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 SLOAD PUSH2 0x15EB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1649 JUMPI DUP2 PUSH2 0x15FE DUP3 PUSH1 0x1 PUSH2 0x1E98 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x160E JUMPI PUSH2 0x160E PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x162B JUMPI PUSH2 0x162B PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1641 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DD JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x1659 JUMPI PUSH2 0x1659 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16CA JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD11 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1699 JUMPI PUSH2 0x1699 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x16C2 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x167D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x177E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1850 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD11 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17F1 SWAP2 SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x185F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1934 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1971 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1986 DUP3 DUP3 DUP7 PUSH2 0x1991 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x19A0 JUMPI POP DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x19B0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x14EC SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A61 DUP6 PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6F PUSH1 0x20 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A7D PUSH1 0x40 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8B PUSH1 0x60 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP5 PUSH2 0x1A26 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1862 DUP3 PUSH2 0x1A26 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4F PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B84 PUSH2 0x1B10 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1B93 DUP3 DUP3 ADD PUSH2 0x1B26 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1BAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1986 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEA DUP5 PUSH2 0x1A26 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C13 DUP8 DUP4 DUP9 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C36 DUP7 DUP3 DUP8 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C75 DUP4 PUSH2 0x1A26 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C83 PUSH1 0x20 DUP5 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB7 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1B26 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1D DUP7 PUSH2 0x1A26 JUMP JUMPDEST SWAP5 POP PUSH2 0x1D2B PUSH1 0x20 DUP8 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D54 DUP10 DUP4 DUP11 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D76 DUP10 DUP4 DUP11 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D99 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC5 DUP6 PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E09 DUP7 PUSH2 0x1A26 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E17 PUSH1 0x20 DUP8 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D99 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EAB JUMPI PUSH2 0x1EAB PUSH2 0x1E82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC2 PUSH2 0x1E82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1EEC JUMPI PUSH2 0x1EEC PUSH2 0x1E82 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F24 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F08 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F5B SWAP1 DUP4 ADD DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F6D DUP2 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FF6 JUMPI PUSH2 0x1FF6 PUSH2 0x1E82 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2056 JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x203A JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x206A DUP3 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x20C3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1778 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20FE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x20C0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2127 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLDATASIZE 0xE1 XOR 0xCD 0xDD EXP EXTCODECOPY 0xA7 0x4D 0x4B 0xDA 0xC1 0x27 0xE6 0xE7 PUSH6 0x102AAECEFCF1 0xD4 SDIV 0xC8 0xD SWAP16 0xB6 0xE CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:8241:0:-:0;;;7140:4;7108:36;;7262:1;7245:18;;7463:2;7440:25;;7495:2;7472:25;;7527:3;7504:26;;8066:22;;;;;;;;;-1:-1:-1;921:32:1;719:10:9;921:18:1;:32::i;:::-;6648:8241:0;;2270:187:1;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;6648:8241:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@JPDA1_905": {
									"entryPoint": null,
									"id": 905,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPDA2_908": {
									"entryPoint": null,
									"id": 908,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@JPDA3_911": {
									"entryPoint": null,
									"id": 911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_2504": {
									"entryPoint": 6014,
									"id": 2504,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2814": {
									"entryPoint": null,
									"id": 2814,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1954": {
									"entryPoint": 5838,
									"id": 1954,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addNFTBatch_1077": {
									"entryPoint": 2763,
									"id": 1077,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addNftBatchWithNumber_1171": {
									"entryPoint": 1558,
									"id": 1171,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@cancel_1574": {
									"entryPoint": 4793,
									"id": 1574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claim_1656": {
									"entryPoint": 2064,
									"id": 1656,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@extend_635": {
									"entryPoint": 5747,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@feeToken_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_2666": {
									"entryPoint": 6249,
									"id": 2666,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2596": {
									"entryPoint": 6224,
									"id": 2596,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getFeeMintAddress_1837": {
									"entryPoint": null,
									"id": 1837,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getUserMatingNft_1252": {
									"entryPoint": 2485,
									"id": 1252,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getUserOvipositionTime_1196": {
									"entryPoint": 2680,
									"id": 1196,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_2525": {
									"entryPoint": null,
									"id": 2525,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mating_1493": {
									"entryPoint": 3350,
									"id": 1493,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@min_847": {
									"entryPoint": 5359,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@nftCount_1669": {
									"entryPoint": null,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_2168": {
									"entryPoint": null,
									"id": 2168,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_2145": {
									"entryPoint": null,
									"id": 2145,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_1883": {
									"entryPoint": null,
									"id": 1883,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeByIndex_532": {
									"entryPoint": 5505,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1911": {
									"entryPoint": 2991,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2338": {
									"entryPoint": 5918,
									"id": 2338,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setBreedInterval_1849": {
									"entryPoint": 3045,
									"id": 1849,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setConfig_1015": {
									"entryPoint": 1313,
									"id": 1015,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setFeeAddress_1800": {
									"entryPoint": 3092,
									"id": 1800,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeAmount_1812": {
									"entryPoint": 2944,
									"id": 1812,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setFeeMintAddress_1826": {
									"entryPoint": 2604,
									"id": 1826,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setJPDA_1039": {
									"entryPoint": 1502,
									"id": 1039,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setNFT_1788": {
									"entryPoint": 3168,
									"id": 1788,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2202": {
									"entryPoint": 1258,
									"id": 2202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2847": {
									"entryPoint": null,
									"id": 2847,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1934": {
									"entryPoint": 5204,
									"id": 1934,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@urgentWithdraw_1735": {
									"entryPoint": 4450,
									"id": 1735,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@users_916": {
									"entryPoint": null,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_2801": {
									"entryPoint": 6545,
									"id": 2801,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 6999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address": {
									"entryPoint": 6722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256": {
									"entryPoint": 7590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 7924,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_NftInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7983,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8189,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$2281__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7757,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 8384,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 8328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7879,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19364:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:13"
															},
															"nodeType": "YulIf",
															"src": "594:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:13",
														"type": ""
													}
												],
												"src": "497:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "796:288:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "843:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "852:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "855:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "817:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "826:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "813:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "813:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "809:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "809:33:13"
															},
															"nodeType": "YulIf",
															"src": "806:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "868:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "897:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "878:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "878:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "868:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "916:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "949:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "960:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "945:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "926:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "926:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "916:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "973:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1006:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1017:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "983:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "983:38:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "973:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1030:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1063:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1074:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1040:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:38:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "738:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "749:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "761:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "769:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "777:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "785:6:13",
														"type": ""
													}
												],
												"src": "675:409:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1200:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1212:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1223:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1200:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1242:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1257:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1273:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1278:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1269:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1269:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1282:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1265:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1265:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1253:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1253:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1235:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1159:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1170:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1181:4:13",
														"type": ""
													}
												],
												"src": "1089:203:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1398:76:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1408:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1420:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1431:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1416:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1408:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1450:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1461:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1367:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1297:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1583:212:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1629:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1638:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1641:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1604:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1613:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1600:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1625:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:32:13"
															},
															"nodeType": "YulIf",
															"src": "1593:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1654:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1677:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1664:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1696:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1723:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1734:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1706:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1696:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1774:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1785:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1770:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1770:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1757:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1533:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1544:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1564:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1572:6:13",
														"type": ""
													}
												],
												"src": "1479:316:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1904:218:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1950:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1925:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1934:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1921:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1921:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1917:32:13"
															},
															"nodeType": "YulIf",
															"src": "1914:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2004:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1985:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2050:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2061:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2046:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2046:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2033:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2033:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2074:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2101:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2112:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2097:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2097:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2084:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2074:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1854:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1865:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1877:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1885:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1893:6:13",
														"type": ""
													}
												],
												"src": "1800:322:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2197:116:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2243:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2252:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2255:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2245:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2245:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2245:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2239:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:32:13"
															},
															"nodeType": "YulIf",
															"src": "2207:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2268:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2297:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2278:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2268:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2163:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2174:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2186:6:13",
														"type": ""
													}
												],
												"src": "2127:186:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2503:262:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2513:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2521:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2521:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2513:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2549:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2567:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2572:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2563:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2576:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2553:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2594:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2617:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2587:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2587:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2641:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2652:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2637:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2661:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2669:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2657:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2657:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2630:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2630:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2630:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2693:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2704:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2709:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2682:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2682:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2752:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2725:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2725:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2448:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2459:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2467:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2475:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2483:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2494:4:13",
														"type": ""
													}
												],
												"src": "2318:447:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2802:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2819:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2826:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2831:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2822:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2822:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2812:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2859:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2852:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2852:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2883:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2886:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2876:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2876:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2770:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2947:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2957:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2973:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2967:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2957:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2985:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "3023:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3029:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3038:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3034:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3034:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3015:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3015:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3003:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2989:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3118:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3120:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3120:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3120:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3061:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3073:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3058:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3097:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3094:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3055:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:62:13"
															},
															"nodeType": "YulIf",
															"src": "3052:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3160:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3149:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3149:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2927:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2936:6:13",
														"type": ""
													}
												],
												"src": "2902:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3246:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3295:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3274:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3282:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3270:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3270:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3289:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3259:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3259:35:13"
															},
															"nodeType": "YulIf",
															"src": "3256:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3320:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3343:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3330:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3330:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3324:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3359:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3369:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3363:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3412:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3414:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3414:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3414:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3388:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3392:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3385:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:26:13"
															},
															"nodeType": "YulIf",
															"src": "3382:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3443:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3460:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3453:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3447:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3472:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3503:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3507:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3483:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3483:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3476:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3520:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3533:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3524:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3557:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3569:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3580:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3585:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3576:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3576:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3569:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3597:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "3627:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3615:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3632:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3611:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3601:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3663:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3672:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3675:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3665:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3665:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3665:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3650:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3658:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3647:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:15:13"
															},
															"nodeType": "YulIf",
															"src": "3644:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3688:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3703:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3711:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3699:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3699:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3692:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3779:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3800:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3818:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3805:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3805:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3793:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3793:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3836:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3847:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3852:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3843:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3843:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3836:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3734:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3739:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3731:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3731:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3747:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3749:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3760:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3765:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3756:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3756:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3749:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3727:3:13",
																"statements": []
															},
															"src": "3723:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3874:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3883:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3874:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3220:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3228:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3236:5:13",
														"type": ""
													}
												],
												"src": "3182:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4053:515:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4108:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4111:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4101:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4101:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4101:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4074:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4083:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4070:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4070:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4095:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4066:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4066:32:13"
															},
															"nodeType": "YulIf",
															"src": "4063:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4124:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4153:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4134:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4124:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4172:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4186:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4176:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4227:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4237:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4231:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4282:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4284:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4284:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4284:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4270:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4278:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4267:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4267:14:13"
															},
															"nodeType": "YulIf",
															"src": "4264:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4307:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4361:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4346:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4370:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4317:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4317:61:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4307:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4387:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4420:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4416:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4416:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4403:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4403:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4391:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4464:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4473:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4476:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4466:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4466:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4466:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4450:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4460:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4447:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4447:16:13"
															},
															"nodeType": "YulIf",
															"src": "4444:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4489:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4532:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4543:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4528:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4554:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4499:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:63:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4489:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4003:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4014:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4026:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4034:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4042:6:13",
														"type": ""
													}
												],
												"src": "3899:669:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4689:102:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4699:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4707:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4741:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4772:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4777:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4768:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4768:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4781:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4764:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4752:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4734:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4734:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$2281__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4658:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4669:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4680:4:13",
														"type": ""
													}
												],
												"src": "4573:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4866:110:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4912:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4921:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4924:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4914:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4914:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4914:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4887:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4896:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4908:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4879:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4879:32:13"
															},
															"nodeType": "YulIf",
															"src": "4876:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4937:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4960:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4947:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4832:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4843:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4855:6:13",
														"type": ""
													}
												],
												"src": "4796:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:173:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5116:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5116:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5089:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5098:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5085:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5081:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:32:13"
															},
															"nodeType": "YulIf",
															"src": "5078:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5139:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5168:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5149:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5149:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5139:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5187:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5220:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5231:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5216:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5216:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5197:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5197:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5187:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5026:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5037:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5049:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5057:6:13",
														"type": ""
													}
												],
												"src": "4981:260:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5297:123:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5314:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5329:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "5323:5:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5323:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5345:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5350:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5341:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5341:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5354:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5337:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5337:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5319:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5319:38:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5307:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5307:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5307:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5378:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5383:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5374:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5374:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5400:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5407:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5396:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5396:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5390:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5390:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5367:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5367:47:13"
														}
													]
												},
												"name": "abi_encode_struct_NftInfo",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5281:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5288:3:13",
														"type": ""
													}
												],
												"src": "5246:174:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5706:272:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5716:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5728:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5739:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5724:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5724:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5716:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5778:6:13"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_NftInfo",
																	"nodeType": "YulIdentifier",
																	"src": "5752:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5752:44:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5752:44:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5831:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5843:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5854:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5839:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_NftInfo",
																	"nodeType": "YulIdentifier",
																	"src": "5805:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5805:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5805:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5889:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5874:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5915:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5920:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5911:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5911:11:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5924:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5907:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5907:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5895:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5895:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5867:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5867:61:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5867:61:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5948:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5959:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5944:19:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5965:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5937:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5937:35:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5937:35:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5651:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5662:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5670:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5678:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5686:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5697:4:13",
														"type": ""
													}
												],
												"src": "5425:553:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6035:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6084:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6093:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6096:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6086:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6086:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6086:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6063:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6071:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6059:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6059:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6078:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6055:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6048:35:13"
															},
															"nodeType": "YulIf",
															"src": "6045:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6109:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6132:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6119:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6119:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6113:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6178:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6180:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6180:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6180:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6154:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6151:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6151:26:13"
															},
															"nodeType": "YulIf",
															"src": "6148:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6209:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "6252:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6256:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6248:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6248:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6267:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6263:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6263:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6244:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6244:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6273:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6240:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6240:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6224:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "6213:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "6295:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6304:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6288:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6288:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6355:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6364:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6367:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6357:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6357:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6357:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6330:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6338:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6326:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6326:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6343:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6322:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6322:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6350:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6319:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6319:35:13"
															},
															"nodeType": "YulIf",
															"src": "6316:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "6397:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6406:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6393:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6393:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6417:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6425:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6413:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6413:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6432:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6380:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "6459:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6468:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6455:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6455:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6451:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6451:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6480:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6444:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6444:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6491:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "6500:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6491:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6009:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6017:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6025:5:13",
														"type": ""
													}
												],
												"src": "5983:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6715:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6762:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6771:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6774:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6764:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6764:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6764:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6736:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6745:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6757:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6728:33:13"
															},
															"nodeType": "YulIf",
															"src": "6725:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6787:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6816:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6797:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6787:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6835:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6868:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6879:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6864:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6845:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6845:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6835:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6892:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6923:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6934:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6919:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6919:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6906:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6896:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6947:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6957:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6951:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7002:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7011:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7014:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7004:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7004:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7004:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6990:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6998:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6987:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:14:13"
															},
															"nodeType": "YulIf",
															"src": "6984:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7027:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7070:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7081:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7066:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7066:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7090:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7037:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7027:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7107:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7140:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7151:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7136:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7136:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7123:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7123:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7111:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7184:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7193:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7196:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7186:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7186:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7186:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7170:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7180:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7167:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7167:16:13"
															},
															"nodeType": "YulIf",
															"src": "7164:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7209:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7252:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7263:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7274:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7219:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7219:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7291:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7307:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7307:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "7295:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7369:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7378:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7381:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7371:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7371:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7371:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "7355:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7365:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7352:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:16:13"
															},
															"nodeType": "YulIf",
															"src": "7349:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7394:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7425:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "7436:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7421:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7421:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7447:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7404:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7394:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6649:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6660:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6672:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6680:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6688:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6696:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6704:6:13",
														"type": ""
													}
												],
												"src": "6518:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7565:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7575:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7587:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7598:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7575:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7617:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7632:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7644:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7649:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7640:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7640:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7628:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7610:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7534:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7545:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7556:4:13",
														"type": ""
													}
												],
												"src": "7466:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7794:276:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7841:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7850:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7843:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7843:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7843:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7815:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7824:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7811:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7836:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7807:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7807:33:13"
															},
															"nodeType": "YulIf",
															"src": "7804:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7866:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7895:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7876:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7876:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7914:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7947:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7958:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7943:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7943:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7924:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7914:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7971:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7998:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8009:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7994:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7994:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7981:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7981:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8022:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8049:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8060:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8045:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8045:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8032:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8032:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8022:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7736:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7747:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7759:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7767:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7775:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7783:6:13",
														"type": ""
													}
												],
												"src": "7673:397:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8222:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8269:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8278:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8281:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8271:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8271:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8271:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8243:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8239:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8239:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8264:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8235:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:33:13"
															},
															"nodeType": "YulIf",
															"src": "8232:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8294:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8323:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8304:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8304:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8294:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8342:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8352:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8352:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8342:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8399:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8426:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8437:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8422:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8422:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8409:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8409:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8399:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8450:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8477:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8488:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8460:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8460:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8501:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8532:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8543:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8528:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8528:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8515:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8505:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8591:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8600:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8603:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8593:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8593:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8563:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8571:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8560:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:30:13"
															},
															"nodeType": "YulIf",
															"src": "8557:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8616:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8658:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8643:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8667:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8626:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8626:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8156:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8167:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8179:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8187:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8195:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8203:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8211:6:13",
														"type": ""
													}
												],
												"src": "8075:606:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8860:182:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8877:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8870:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8870:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8911:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8922:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8907:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8927:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8900:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8900:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8950:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8961:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8946:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8946:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8966:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8939:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8939:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8939:62:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9010:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9022:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9033:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9018:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9018:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9010:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8837:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8851:4:13",
														"type": ""
													}
												],
												"src": "8686:356:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9221:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9238:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9249:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9231:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9231:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9231:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9272:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9283:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9268:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9268:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9288:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9261:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9261:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9261:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9322:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:18:13"
																	},
																	{
																		"hexValue": "7374617274206d757374206d6f7265207468616e207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9327:27:13",
																		"type": "",
																		"value": "start must more than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9300:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9300:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9300:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9364:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9376:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9387:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9372:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9364:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9198:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9212:4:13",
														"type": ""
													}
												],
												"src": "9047:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9433:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9450:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9457:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9462:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9453:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9453:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9443:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9443:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9490:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9493:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9483:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9483:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9483:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9514:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9517:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9507:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9507:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9507:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9401:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:80:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9608:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9610:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9610:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9610:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9597:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9604:1:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9594:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9594:13:13"
															},
															"nodeType": "YulIf",
															"src": "9591:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9639:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9650:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9653:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9646:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9646:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9564:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9567:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9573:3:13",
														"type": ""
													}
												],
												"src": "9533:128:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9715:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9737:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9739:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9739:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9739:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9731:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9734:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9728:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9728:8:13"
															},
															"nodeType": "YulIf",
															"src": "9725:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9768:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9780:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9783:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9776:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9776:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9768:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9697:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9700:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9706:4:13",
														"type": ""
													}
												],
												"src": "9666:125:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9828:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9852:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9857:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9848:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9848:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9838:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9838:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9838:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9885:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9888:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9909:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9912:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9902:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9902:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9902:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9796:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9975:89:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10002:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10004:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10004:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10004:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9995:5:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:13:13"
															},
															"nodeType": "YulIf",
															"src": "9985:39:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10033:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10044:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10055:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10051:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10051:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10040:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:18:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10033:3:13"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9957:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9967:3:13",
														"type": ""
													}
												],
												"src": "9928:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:374:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10140:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10160:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10154:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10154:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10144:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10182:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10187:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10175:19:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10203:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10213:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10207:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10226:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10237:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10242:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10233:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10233:12:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10226:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10254:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10272:5:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10279:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:14:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10258:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10291:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10300:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10295:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10359:120:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10380:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "10391:6:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10385:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10385:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10373:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10373:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10373:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10412:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10423:3:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10428:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10419:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10419:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10412:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10444:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10458:6:13"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "10466:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10454:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10454:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10444:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10321:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10324:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10318:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10318:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10332:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10334:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10343:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10346:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10339:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10339:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10334:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10314:3:13",
																"statements": []
															},
															"src": "10310:169:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10488:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10495:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10488:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10107:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10114:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10122:3:13",
														"type": ""
													}
												],
												"src": "10069:435:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10894:504:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10904:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10922:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10927:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10918:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10918:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10931:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10914:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10914:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10908:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10949:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10964:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10972:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10960:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10960:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10942:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10942:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10942:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10996:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11007:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10992:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10992:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11016:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11024:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11012:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11012:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10985:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10985:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10985:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11048:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11059:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11044:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11044:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11064:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11037:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11037:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11037:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11077:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11120:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11132:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11143:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11128:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11128:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11091:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:57:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11081:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11168:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11164:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11164:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11188:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11196:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11184:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11184:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11157:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11157:50:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11157:50:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11216:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11259:6:13"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11267:6:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11230:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11230:44:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "11220:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11294:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11305:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11290:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "11315:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11311:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11311:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11283:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11283:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11283:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "11350:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11358:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11343:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11343:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11343:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11369:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "11381:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11377:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11369:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10839:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10850:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10858:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10866:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10874:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10885:4:13",
														"type": ""
													}
												],
												"src": "10509:889:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11577:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11594:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11605:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11587:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11628:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11639:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11624:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11624:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11644:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11617:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11617:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11617:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11667:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11678:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11663:18:13"
																	},
																	{
																		"hexValue": "6e6f74207374617274206d6174696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11683:18:13",
																		"type": "",
																		"value": "not start mating"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11656:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11656:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11656:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11711:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11723:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11734:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11719:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11719:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11711:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11554:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11568:4:13",
														"type": ""
													}
												],
												"src": "11403:340:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11922:167:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11939:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11950:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11932:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11932:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11932:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11973:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11984:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11969:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11962:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11962:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12012:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12023:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12008:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12008:18:13"
																	},
																	{
																		"hexValue": "6e6f742066696e697368206d6174696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12028:19:13",
																		"type": "",
																		"value": "not finish mating"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12001:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12001:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12057:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12069:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12080:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12065:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12065:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12057:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11899:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11913:4:13",
														"type": ""
													}
												],
												"src": "11748:341:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12387:342:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12397:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12415:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12420:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12411:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12424:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12407:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12407:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12401:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12442:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12457:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12465:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12453:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12453:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12435:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12435:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12489:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12500:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12485:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12485:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12509:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12517:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12505:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12505:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12478:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12478:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12478:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12541:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12552:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12537:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12557:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12584:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12595:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12580:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12580:18:13"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12600:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12573:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12573:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12627:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12638:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12623:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12623:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12644:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12616:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12616:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12616:32:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12668:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12679:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12664:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12664:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12685:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12657:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12657:30:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12696:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12708:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12719:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12704:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12704:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12696:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12332:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12343:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12351:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12359:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12367:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12378:4:13",
														"type": ""
													}
												],
												"src": "12094:635:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12908:175:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12925:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12936:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12918:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12918:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12918:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12959:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12970:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12955:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12955:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12975:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12948:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12948:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12948:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12998:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13009:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12994:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12994:18:13"
																	},
																	{
																		"hexValue": "4f6e6c79206272656564206f6e636520617420612074696d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13014:27:13",
																		"type": "",
																		"value": "Only breed once at a time"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12987:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12987:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12987:55:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13051:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13063:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13074:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13059:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13051:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12885:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12899:4:13",
														"type": ""
													}
												],
												"src": "12734:349:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13262:160:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13279:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13290:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13272:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13272:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13272:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13313:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13324:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13309:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13309:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13329:2:13",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13302:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13302:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13352:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13363:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13348:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13348:18:13"
																	},
																	{
																		"hexValue": "54696d65206c696d6974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13368:12:13",
																		"type": "",
																		"value": "Time limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13341:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13341:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13341:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13390:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13402:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13413:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13398:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13398:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13390:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13239:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13253:4:13",
														"type": ""
													}
												],
												"src": "13088:334:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13602:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13619:3:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13624:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13612:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13612:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13612:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13651:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13656:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13647:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13647:12:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13669:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "13673:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "13665:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13665:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13686:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "13682:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13682:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13661:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13661:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13640:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13640:75:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13640:75:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13735:3:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13740:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13731:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13731:12:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13745:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13724:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13724:28:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13724:28:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13761:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13772:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13777:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13768:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13768:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13761:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13562:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13567:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13575:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13583:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13594:3:13",
														"type": ""
													}
												],
												"src": "13427:359:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13829:171:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13860:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13881:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13888:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13893:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13884:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13884:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13874:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13874:31:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13874:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13925:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13928:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13918:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13918:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13918:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13953:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13956:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13946:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13946:15:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13946:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13849:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13842:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13842:9:13"
															},
															"nodeType": "YulIf",
															"src": "13839:132:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13980:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13989:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13992:1:13"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13985:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13980:1:13"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13814:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13817:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13823:1:13",
														"type": ""
													}
												],
												"src": "13791:209:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14052:88:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14083:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14085:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14085:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14085:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14068:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14079:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14075:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14075:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14065:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14065:17:13"
															},
															"nodeType": "YulIf",
															"src": "14062:43:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14114:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14125:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14132:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14121:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14121:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14114:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14034:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14044:3:13",
														"type": ""
													}
												],
												"src": "14005:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14274:119:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14284:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14296:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14307:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14292:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14292:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14284:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14326:9:13"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14337:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14319:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14319:25:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14319:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14364:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14375:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14360:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14360:18:13"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14380:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14353:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14353:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14353:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14235:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14246:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14254:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14265:4:13",
														"type": ""
													}
												],
												"src": "14145:248:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14780:870:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14790:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14808:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14819:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14804:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14804:19:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "14794:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14832:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14850:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14855:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14846:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14846:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14859:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14842:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14836:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14877:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14892:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14900:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14888:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14888:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14870:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14870:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14870:34:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14913:12:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14923:2:13",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14917:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14945:9:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14956:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14941:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14941:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14965:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14973:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14961:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14961:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14934:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14934:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14934:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14997:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15008:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14993:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14993:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15013:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14986:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14986:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14986:31:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15026:17:13",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "15037:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "15030:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15052:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15072:6:13"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "15066:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15066:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15056:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15095:6:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15103:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15088:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15088:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15088:22:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15119:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15130:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15141:3:13",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15126:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15126:19:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15119:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15161:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15164:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15154:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15154:17:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15180:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15204:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "15207:2:13"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15194:9:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15194:16:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "15184:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15219:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15228:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "15223:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15287:119:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15308:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "15319:6:13"
																						}
																					],
																					"functionName": {
																						"name": "sload",
																						"nodeType": "YulIdentifier",
																						"src": "15313:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15313:13:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15301:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15301:26:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15301:26:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15340:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15351:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "15356:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15347:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15347:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15340:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15372:24:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15386:6:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15394:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15382:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15382:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15372:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "15249:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15252:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "15246:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15246:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "15260:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "15262:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15271:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15274:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15267:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15267:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "15262:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "15242:3:13",
																"statements": []
															},
															"src": "15238:168:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15426:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15437:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15422:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15422:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15446:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15451:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15442:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15442:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15415:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15415:47:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15471:55:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15514:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15522:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15485:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:41:13"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "15475:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15546:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15557:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15542:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15542:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "15567:6:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15575:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15563:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15563:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15535:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15535:51:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15535:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "15602:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15610:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15595:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15595:17:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15595:17:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15621:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "15633:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "15641:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15629:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15629:15:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15621:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14725:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14736:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14744:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14752:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14760:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14771:4:13",
														"type": ""
													}
												],
												"src": "14398:1252:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15829:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15846:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15839:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15839:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15839:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15880:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15891:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15876:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15896:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15869:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15869:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15919:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15930:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15915:18:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15935:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15908:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15908:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15908:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15990:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16001:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15986:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15986:18:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16006:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15979:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15979:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15979:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16024:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16036:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16047:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16032:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16032:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16024:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15806:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15820:4:13",
														"type": ""
													}
												],
												"src": "15655:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16236:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16253:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16246:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16246:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16246:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16287:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16298:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16283:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16283:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16303:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16276:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16276:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16276:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16326:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16337:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16322:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16322:18:13"
																	},
																	{
																		"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16342:34:13",
																		"type": "",
																		"value": "ArrayForUint256: index out of bo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16315:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16315:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16315:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16397:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16408:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16393:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16393:18:13"
																	},
																	{
																		"hexValue": "756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16413:6:13",
																		"type": "",
																		"value": "unds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16386:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16386:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16386:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16429:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16441:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16452:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16437:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16429:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16213:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16227:4:13",
														"type": ""
													}
												],
												"src": "16062:400:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16499:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16516:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16523:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16528:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16519:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16519:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16509:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16509:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16509:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16556:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16559:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16549:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16549:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16549:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16580:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16583:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16573:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16573:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16573:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "16467:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16756:218:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16766:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16778:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16789:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16774:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16774:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16766:4:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16801:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16819:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16824:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16815:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16815:11:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16828:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "16811:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16811:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "16805:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16846:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16861:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16869:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16857:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16857:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16839:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16839:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16839:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16893:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16904:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16889:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16889:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:13"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "16921:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16909:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16909:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16882:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16882:43:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16882:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16945:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16956:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16941:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16941:18:13"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16961:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16934:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16934:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16934:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16709:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16720:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16728:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16736:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16747:4:13",
														"type": ""
													}
												],
												"src": "16599:375:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17057:199:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17103:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17112:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17115:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17105:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17105:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17105:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17078:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17087:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17074:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17074:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17099:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17070:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17070:32:13"
															},
															"nodeType": "YulIf",
															"src": "17067:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17128:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17147:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17141:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17141:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17132:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17210:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17219:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17222:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17212:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17212:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17212:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17179:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "17200:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "17193:6:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17193:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17186:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17186:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17176:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17176:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17169:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17169:40:13"
															},
															"nodeType": "YulIf",
															"src": "17166:60:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17235:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17245:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17235:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17023:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17034:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17046:6:13",
														"type": ""
													}
												],
												"src": "16979:277:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17435:232:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17452:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17463:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17445:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17445:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17486:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17497:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17482:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17482:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17502:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17475:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17475:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17475:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17525:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17536:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17521:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17521:18:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17541:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17514:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17514:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17514:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17596:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17607:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17592:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17592:18:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17612:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17585:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17585:40:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17585:40:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17634:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17646:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17657:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17642:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17642:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17634:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17412:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17426:4:13",
														"type": ""
													}
												],
												"src": "17261:406:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17846:228:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17863:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17874:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17856:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17856:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17856:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17897:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17908:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17893:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17893:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17913:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17886:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17886:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17886:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17936:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17947:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17932:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17932:18:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17952:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17925:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17925:62:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17925:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18007:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18018:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18003:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18003:18:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18023:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17996:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17996:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17996:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18041:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18053:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18064:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18049:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18049:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18041:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17823:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17837:4:13",
														"type": ""
													}
												],
												"src": "17672:402:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18253:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18270:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18281:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18263:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18263:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18263:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18304:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18315:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18300:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18300:18:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18320:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18293:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18293:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18293:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18343:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18354:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18339:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18339:18:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18359:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18332:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18332:59:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18332:59:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18400:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18412:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18423:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18408:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18408:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18400:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18230:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18244:4:13",
														"type": ""
													}
												],
												"src": "18079:353:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18490:205:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18500:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "18509:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "18504:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18569:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18594:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "18599:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18590:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18590:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "18613:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "18618:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "18609:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "18609:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18603:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18603:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18583:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18583:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18583:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18530:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18533:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "18527:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18527:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "18541:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18543:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "18552:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18555:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "18548:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18548:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "18543:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "18523:3:13",
																"statements": []
															},
															"src": "18519:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18658:31:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "18671:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "18676:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "18667:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18667:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18685:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "18660:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18660:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18660:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "18647:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18650:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18644:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18644:13:13"
															},
															"nodeType": "YulIf",
															"src": "18641:48:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "18468:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "18473:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18478:6:13",
														"type": ""
													}
												],
												"src": "18437:258:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18837:137:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18847:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18867:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18861:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18861:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18851:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18909:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18917:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18905:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18905:17:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18924:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18929:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "18883:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18883:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18883:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18945:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18956:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18961:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18952:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18952:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18945:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18813:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18818:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18829:3:13",
														"type": ""
													}
												],
												"src": "18700:274:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19100:262:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19117:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19128:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19110:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19110:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19110:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19140:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19160:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19154:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19154:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19144:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19187:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19198:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19183:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19183:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19203:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19176:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19176:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19176:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "19245:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19253:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19241:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19241:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19262:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19273:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19258:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19258:18:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19278:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "19219:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19219:66:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19219:66:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19294:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19310:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "19329:6:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19337:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "19325:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19325:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "19346:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "19342:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19342:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "19321:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19321:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19306:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19306:45:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19353:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19302:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19302:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19294:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19069:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19080:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19091:4:13",
														"type": ""
													}
												],
												"src": "18979:383:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$2281__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_struct_NftInfo(value, pos)\n    {\n        mstore(pos, and(mload(value), sub(shl(160, 1), 1)))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_tuple_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__to_t_struct$_NftInfo_$864_memory_ptr_t_struct$_NftInfo_$864_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_NftInfo(value0, headStart)\n        abi_encode_struct_NftInfo(value1, add(headStart, 64))\n        mstore(add(headStart, 128), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 160), value3)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"start must more than zero\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, 32)\n    }\n    function abi_encode_tuple_t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"not start mating\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"not finish mating\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), 0)\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Only breed once at a time\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Time limit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        mstore(add(pos, 32), and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_storage_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := sload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        mstore(0, value2)\n        let srcPtr := keccak256(0, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sload(srcPtr))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, 1)\n        }\n        mstore(add(headStart, 96), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, pos)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        mstore(tail_2, 0)\n        tail := add(tail_2, _2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ArrayForUint256: index out of bo\")\n        mstore(add(headStart, 96), \"unds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c806379c5e977116100f9578063c409144311610097578063ec3c6dee11610071578063ec3c6dee146104a6578063ed9371d7146104af578063f23a6e61146104b8578063f2fde38b146104d757600080fd5b8063c409144314610462578063c971ebb314610475578063ea8a1af01461049e57600080fd5b80639fdd3a3f116100d35780639fdd3a3f1461034c578063a87430ba1461035f578063bc197c8114610417578063bf90fc1e1461044f57600080fd5b806379c5e977146103155780638705fcd4146103285780638da5cb5b1461033b57600080fd5b80635c39331c1161016657806363c668911161014057806363c66891146102d4578063647846a5146102e75780636b392680146102fa578063715018a61461030d57600080fd5b80635c39331c146102705780635dada3bb146102ae5780635dbc3838146102c157600080fd5b80631df0c04c116101a25780631df0c04c1461022b5780633f3ed4ca146102425780634b02218f146102555780634e71d92d1461026857600080fd5b806301ffc9a7146101c9578063087bc228146101f157806319b8094b14610206575b600080fd5b6101dc6101d73660046119fc565b6104ea565b60405190151581526020015b60405180910390f35b6102046101ff366004611a42565b610521565b005b6002546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b610234600a5481565b6040519081526020016101e8565b610204610250366004611a96565b6105de565b610204610263366004611ac2565b610616565b610204610810565b61028361027e366004611af5565b6109b5565b604080516001600160a01b0395861681529490931660208501529183015260608201526080016101e8565b6102046102bc366004611af5565b610a2c565b6102346102cf366004611af5565b610a78565b6102046102e2366004611bcc565b610acb565b600254610213906001600160a01b031681565b610204610308366004611c40565b610b80565b610204610baf565b610204610323366004611c40565b610be5565b610204610336366004611af5565b610c14565b6000546001600160a01b0316610213565b61020461035a366004611c59565b610c60565b6103d161036d366004611af5565b600d602090815260009182526040918290208251808401845281546001600160a01b03908116825260018301548285015284518086019095526002830154811685526003830154938501939093526004820154600590920154909392919091169084565b6040805185516001600160a01b039081168252602096870151878301528551811692820192909252949093015160608501529116608083015260a082015260c0016101e8565b610436610425366004611cfc565b63bc197c8160e01b95945050505050565b6040516001600160e01b031990911681526020016101e8565b61020461045d366004611da6565b610d16565b610204610470366004611af5565b611162565b610234610483366004611af5565b6001600160a01b03166000908152600e602052604090205490565b6102046112b9565b610234600b5481565b610234600c5481565b6104366104c6366004611de8565b63f23a6e6160e01b95945050505050565b6102046104e5366004611af5565b611454565b60006001600160e01b03198216630271189760e51b148061051b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000546001600160a01b031633146105545760405162461bcd60e51b815260040161054b90611e4d565b60405180910390fd5b600680546001600160a01b03199081166001600160a01b03968716908117909255600780548216958716959095178555600880548216948716949094178455600980549091169286169290921782556000908152600f6020526040808220600190819055945486168252808220859055925485168152828120939093555490921681522060029055565b6000546001600160a01b031633146106085760405162461bcd60e51b815260040161054b90611e4d565b600a92909255600b55600c55565b60008167ffffffffffffffff81111561063157610631611b10565b60405190808252806020026020018201604052801561065a578160200160208202803683370190505b50905060008267ffffffffffffffff81111561067857610678611b10565b6040519080825280602002602001820160405280156106a1578160200160208202803683370190505b509050600084116106f45760405162461bcd60e51b815260206004820152601960248201527f7374617274206d757374206d6f7265207468616e207a65726f00000000000000604482015260640161054b565b600060016107028686611e98565b61070c9190611eb0565b90505b8481106107a45780836107228783611eb0565b8151811061073257610732611ec7565b602090810291909101015260018261074a8784611eb0565b8151811061075a5761075a611ec7565b6020908102919091018101919091526001600160a01b0387166000908152600e8252604081208054600181018255908252919020018190558061079c81611edd565b91505061070f565b50604051631759616b60e11b81526001600160a01b03861690632eb2c2d6906107d7903390309087908790600401611f2f565b600060405180830381600087803b1580156107f157600080fd5b505af1158015610805573d6000803e3d6000fd5b505050505050505050565b336000908152600d6020526040812060058101544292036108665760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8160015482600501546108799190611e98565b10156108bb5760405162461bcd60e51b81526020600482015260116024820152706e6f742066696e697368206d6174696e6760781b604482015260640161054b565b60048101546001600160a01b03166000818152600e6020526040812081906108e2906114ef565b6001600160a01b0385166000908152600e6020526040902091935091506109099082611581565b604051637921219560e11b81526001600160a01b0384169063f242432a9061093c90309033908790600190600401611f8a565b600060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b50506040518481526001600160a01b03861692503391507f70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd9870689060200160405180910390a35050505050565b6001600160a01b0381166000908152600d602052604081206005015481908190819081036109ee57506000925082915081905080610a25565b505050506001600160a01b038181166000908152600d60205260409020805460028201546001830154600390930154918416931691905b9193509193565b6000546001600160a01b03163314610a565760405162461bcd60e51b815260040161054b90611e4d565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0381166000908152600d60205260408120600501548103610aa257506000919050565b6001546001600160a01b0383166000908152600d602052604090206005015461051b9190611e98565b6000546001600160a01b03163314610af55760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0383166000908152600e60205260409020610b179083611673565b604051631759616b60e11b81526001600160a01b03841690632eb2c2d690610b49903390309087908790600401611f2f565b600060405180830381600087803b158015610b6357600080fd5b505af1158015610b77573d6000803e3d6000fd5b50505050505050565b6000546001600160a01b03163314610baa5760405162461bcd60e51b815260040161054b90611e4d565b600455565b6000546001600160a01b03163314610bd95760405162461bcd60e51b815260040161054b90611e4d565b610be360006116ce565b565b6000546001600160a01b03163314610c0f5760405162461bcd60e51b815260040161054b90611e4d565b600155565b6000546001600160a01b03163314610c3e5760405162461bcd60e51b815260040161054b90611e4d565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b038181166000908152600d602052604081206004810180546001600160a01b0319169386169390931790925560058201549003610d11576006546001600160a01b039081166000908152600f6020526040808220600190819055600754841683528183208190556008548416835281832055600954909216815220600290555b505050565b336000908152600d60205260409020600581015415610d775760405162461bcd60e51b815260206004820152601960248201527f4f6e6c79206272656564206f6e636520617420612074696d6500000000000000604482015260640161054b565b6001600160a01b0385166000908152600f60209081526040808320546006850183528184208785529092529091205410610de05760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b6001600160a01b0384166000908152600f60209081526040808320546006850183528184208685529092529091205410610e495760405162461bcd60e51b815260206004820152600a602482015269151a5b59481b1a5b5a5d60b21b604482015260640161054b565b600354600454600254610e6d926001600160a01b039182169233929091169061171e565b604051637921219560e11b81526001600160a01b0386169063f242432a90610ea090339030908890600190600401611f8a565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b5050604051637921219560e11b81526001600160a01b038716925063f242432a9150610f0590339030908790600190600401611f8a565b600060405180830381600087803b158015610f1f57600080fd5b505af1158015610f33573d6000803e3d6000fd5b505042600584810182905584546001600160a01b038a81166001600160a01b031992831617875560018701899055600287018054918b169190921617905560038501869055546040805160208101939093523360601b6bffffffffffffffffffffffff191690830152605482015260009250606491506074016040516020818303038152906040528051906020012060001c610fcf9190611fc2565b600580549192506000610fe183611fe4565b91905055506000600a5482101561100457506006546001600160a01b0316611066565b600a5482101580156110175750600b5482105b1561102e57506007546001600160a01b0316611066565b600b5482101580156110415750600c5482105b1561105857506008546001600160a01b0316611066565b506009546001600160a01b03165b6004830180546001600160a01b0319166001600160a01b038381169190911790915587166000908152600684016020908152604080832088845290915281208054600192906110b6908490611e98565b90915550506001600160a01b0386166000908152600684016020908152604080832087845290915281208054600192906110f1908490611e98565b909155505060028301548354600185015460038601546040516001600160a01b0394851694939093169233927fe399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b609261115192918252602082015260400190565b60405180910390a450505050505050565b6000546001600160a01b0316331461118c5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0381166000908152600e6020526040812054908167ffffffffffffffff8111156111bf576111bf611b10565b6040519080825280602002602001820160405280156111e8578160200160208202803683370190505b50905060005b8281101561122757600182828151811061120a5761120a611ec7565b60209081029190910101528061121f81611fe4565b9150506111ee565b506001600160a01b0383166000818152600e6020526040908190209051631759616b60e11b8152632eb2c2d69161126691309133918790600401611ffd565b600060405180830381600087803b15801561128057600080fd5b505af1158015611294573d6000803e3d6000fd5b505050506001600160a01b0383166000908152600e60205260408120610d11916119ca565b336000908152600d60205260408120600581015490910361130f5760405162461bcd60e51b815260206004820152601060248201526f6e6f74207374617274206d6174696e6760801b604482015260640161054b565b8054600180830154604051637921219560e11b81526001600160a01b039093169263f242432a92611347923092339290600401611f8a565b600060405180830381600087803b15801561136157600080fd5b505af1158015611375573d6000803e3d6000fd5b5050505060028101546003820154604051637921219560e11b81526001600160a01b039092169163f242432a916113b59130913391600190600401611f8a565b600060405180830381600087803b1580156113cf57600080fd5b505af11580156113e3573d6000803e3d6000fd5b505060006005840155505060028101548154600183015460038401546040516001600160a01b0394851694939093169233927f9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d9261144992918252602082015260400190565b60405180910390a450565b6000546001600160a01b0316331461147e5760405162461bcd60e51b815260040161054b90611e4d565b6001600160a01b0381166114e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161054b565b6114ec816116ce565b50565b6000808260008154811061150557611505611ec7565b906000526020600020015491506000905060005b835481101561157b578284828154811061153557611535611ec7565b906000526020600020015410156115695783818154811061155857611558611ec7565b906000526020600020015492508091505b8061157381611fe4565b915050611519565b50915091565b815481106115dd5760405162461bcd60e51b8152602060048201526024808201527f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f604482015263756e647360e01b606482015260840161054b565b81546115eb90600190611eb0565b81101561164957816115fe826001611e98565b8154811061160e5761160e611ec7565b906000526020600020015482828154811061162b5761162b611ec7565b6000918252602090912001558061164181611fe4565b9150506115dd565b8180548061165957611659612088565b600190038181906000526020600020016000905590555050565b8051156116ca5760005b8151811015610d11578282828151811061169957611699611ec7565b60209081029190910181015182546001810184556000938452919092200155806116c281611fe4565b91505061167d565b5050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261177890859061177e565b50505050565b60006117d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166118509092919063ffffffff16565b805190915015610d1157808060200190518101906117f1919061209e565b610d115760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054b565b606061185f8484600085611869565b90505b9392505050565b6060824710156118ca5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161054b565b843b6119185760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054b565b600080866001600160a01b0316858760405161193491906120ec565b60006040518083038185875af1925050503d8060008114611971576040519150601f19603f3d011682016040523d82523d6000602084013e611976565b606091505b5091509150611986828286611991565b979650505050505050565b606083156119a0575081611862565b8251156119b05782518084602001fd5b8160405162461bcd60e51b815260040161054b9190612108565b50805460008255906000526020600020908101906114ec91905b808211156119f857600081556001016119e4565b5090565b600060208284031215611a0e57600080fd5b81356001600160e01b03198116811461186257600080fd5b80356001600160a01b0381168114611a3d57600080fd5b919050565b60008060008060808587031215611a5857600080fd5b611a6185611a26565b9350611a6f60208601611a26565b9250611a7d60408601611a26565b9150611a8b60608601611a26565b905092959194509250565b600080600060608486031215611aab57600080fd5b505081359360208301359350604090920135919050565b600080600060608486031215611ad757600080fd5b611ae084611a26565b95602085013595506040909401359392505050565b600060208284031215611b0757600080fd5b61186282611a26565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b4f57611b4f611b10565b604052919050565b600082601f830112611b6857600080fd5b8135602067ffffffffffffffff821115611b8457611b84611b10565b8160051b611b93828201611b26565b9283528481018201928281019087851115611bad57600080fd5b83870192505b8483101561198657823582529183019190830190611bb3565b600080600060608486031215611be157600080fd5b611bea84611a26565b9250602084013567ffffffffffffffff80821115611c0757600080fd5b611c1387838801611b57565b93506040860135915080821115611c2957600080fd5b50611c3686828701611b57565b9150509250925092565b600060208284031215611c5257600080fd5b5035919050565b60008060408385031215611c6c57600080fd5b611c7583611a26565b9150611c8360208401611a26565b90509250929050565b600082601f830112611c9d57600080fd5b813567ffffffffffffffff811115611cb757611cb7611b10565b611cca601f8201601f1916602001611b26565b818152846020838601011115611cdf57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215611d1457600080fd5b611d1d86611a26565b9450611d2b60208701611a26565b9350604086013567ffffffffffffffff80821115611d4857600080fd5b611d5489838a01611b57565b94506060880135915080821115611d6a57600080fd5b611d7689838a01611b57565b93506080880135915080821115611d8c57600080fd5b50611d9988828901611c8c565b9150509295509295909350565b60008060008060808587031215611dbc57600080fd5b611dc585611a26565b9350611dd360208601611a26565b93969395505050506040820135916060013590565b600080600080600060a08688031215611e0057600080fd5b611e0986611a26565b9450611e1760208701611a26565b93506040860135925060608601359150608086013567ffffffffffffffff811115611e4157600080fd5b611d9988828901611c8c565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611eab57611eab611e82565b500190565b600082821015611ec257611ec2611e82565b500390565b634e487b7160e01b600052603260045260246000fd5b600081611eec57611eec611e82565b506000190190565b600081518084526020808501945080840160005b83811015611f2457815187529582019590820190600101611f08565b509495945050505050565b6001600160a01b0385811682528416602082015260a060408201819052600090611f5b90830185611ef4565b8281036060840152611f6d8185611ef4565b838103608090940193909352505060008152602001949350505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b600082611fdf57634e487b7160e01b600052601260045260246000fd5b500690565b600060018201611ff657611ff6611e82565b5060010190565b6001600160a01b038581168252841660208083019190915260a060408301819052845490830181905260008581528281209092909160c085019190845b818110156120565784548452600194850194938301930161203a565b5050848203606086015261206a8287611ef4565b85810360809096019590955260008552909301979650505050505050565b634e487b7160e01b600052603160045260246000fd5b6000602082840312156120b057600080fd5b8151801515811461186257600080fd5b60005b838110156120db5781810151838201526020016120c3565b838111156117785750506000910152565b600082516120fe8184602087016120c0565b9190910192915050565b60208152600082518060208401526121278160408501602087016120c0565b601f01601f1916919091016040019291505056fea26469706673582212204e36e118cddd0a3ca74d4bdac127e6e765102aaecefcf1d405c80d9fb60e374e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79C5E977 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC4091443 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xEC3C6DEE GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xEC3C6DEE EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0xED9371D7 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4091443 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0xC971EBB3 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x49E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9FDD3A3F GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x9FDD3A3F EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x35F JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xBF90FC1E EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79C5E977 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x8705FCD4 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x63C66891 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x647846A5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x6B392680 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C39331C EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x5DADA3BB EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x5DBC3838 EQ PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1DF0C04C GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1DF0C04C EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x3F3ED4CA EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x268 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x87BC228 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x19B8094B EQ PUSH2 0x206 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x4EA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x1A42 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A96 JUMP JUMPDEST PUSH2 0x5DE JUMP JUMPDEST PUSH2 0x204 PUSH2 0x263 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AC2 JUMP JUMPDEST PUSH2 0x616 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x810 JUMP JUMPDEST PUSH2 0x283 PUSH2 0x27E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xA2C JUMP JUMPDEST PUSH2 0x234 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xACB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x213 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x204 PUSH2 0xBAF JUMP JUMPDEST PUSH2 0x204 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C40 JUMP JUMPDEST PUSH2 0xBE5 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x336 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x35A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0x3D1 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP4 ADD SLOAD DUP2 AND DUP6 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 SWAP7 DUP8 ADD MLOAD DUP8 DUP4 ADD MSTORE DUP6 MLOAD DUP2 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP1 SWAP4 ADD MLOAD PUSH1 0x60 DUP6 ADD MSTORE SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x45D CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA6 JUMP JUMPDEST PUSH2 0xD16 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x483 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x204 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x234 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x436 PUSH2 0x4C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DE8 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x204 PUSH2 0x4E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AF5 JUMP JUMPDEST PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0x51B JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x7 DUP1 SLOAD DUP3 AND SWAP6 DUP8 AND SWAP6 SWAP1 SWAP6 OR DUP6 SSTORE PUSH1 0x8 DUP1 SLOAD DUP3 AND SWAP5 DUP8 AND SWAP5 SWAP1 SWAP5 OR DUP5 SSTORE PUSH1 0x9 DUP1 SLOAD SWAP1 SWAP2 AND SWAP3 DUP7 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE SWAP5 SLOAD DUP7 AND DUP3 MSTORE DUP1 DUP3 KECCAK256 DUP6 SWAP1 SSTORE SWAP3 SLOAD DUP6 AND DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x608 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0xA SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x631 JUMPI PUSH2 0x631 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x65A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x678 JUMPI PUSH2 0x678 PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 GT PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7374617274206D757374206D6F7265207468616E207A65726F00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x702 DUP7 DUP7 PUSH2 0x1E98 JUMP JUMPDEST PUSH2 0x70C SWAP2 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP5 DUP2 LT PUSH2 0x7A4 JUMPI DUP1 DUP4 PUSH2 0x722 DUP8 DUP4 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x732 JUMPI PUSH2 0x732 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x1 DUP3 PUSH2 0x74A DUP8 DUP5 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x75A JUMPI PUSH2 0x75A PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE DUP3 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 ADD DUP2 SWAP1 SSTORE DUP1 PUSH2 0x79C DUP2 PUSH2 0x1EDD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x70F JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0x7D7 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD TIMESTAMP SWAP3 SUB PUSH2 0x866 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 PUSH1 0x1 SLOAD DUP3 PUSH1 0x5 ADD SLOAD PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST LT ISZERO PUSH2 0x8BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x6E6F742066696E697368206D6174696E67 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 PUSH2 0x8E2 SWAP1 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x909 SWAP1 DUP3 PUSH2 0x1581 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0x93C SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP3 POP CALLER SWAP2 POP PUSH32 0x70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SUB PUSH2 0x9EE JUMPI POP PUSH1 0x0 SWAP3 POP DUP3 SWAP2 POP DUP2 SWAP1 POP DUP1 PUSH2 0xA25 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 DUP5 AND SWAP4 AND SWAP2 SWAP1 JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD DUP2 SUB PUSH2 0xAA2 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xB17 SWAP1 DUP4 PUSH2 0x1673 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x2EB2C2D6 SWAP1 PUSH2 0xB49 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F2F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB77 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH2 0xBE3 PUSH1 0x0 PUSH2 0x16CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP7 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP3 ADD SLOAD SWAP1 SUB PUSH2 0xD11 JUMPI PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x8 SLOAD DUP5 AND DUP4 MSTORE DUP2 DUP4 KECCAK256 SSTORE PUSH1 0x9 SLOAD SWAP1 SWAP3 AND DUP2 MSTORE KECCAK256 PUSH1 0x2 SWAP1 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD ISZERO PUSH2 0xD77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206272656564206F6E636520617420612074696D6500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xDE0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x6 DUP6 ADD DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD LT PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x151A5B59481B1A5B5A5D PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD PUSH1 0x2 SLOAD PUSH2 0xE6D SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xF242432A SWAP1 PUSH2 0xEA0 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP3 POP PUSH4 0xF242432A SWAP2 POP PUSH2 0xF05 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP TIMESTAMP PUSH1 0x5 DUP5 DUP2 ADD DUP3 SWAP1 SSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP8 SSTORE PUSH1 0x1 DUP8 ADD DUP10 SWAP1 SSTORE PUSH1 0x2 DUP8 ADD DUP1 SLOAD SWAP2 DUP12 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x3 DUP6 ADD DUP7 SWAP1 SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE CALLER PUSH1 0x60 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP4 ADD MSTORE PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 POP PUSH1 0x64 SWAP2 POP PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1FC2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP2 SWAP3 POP PUSH1 0x0 PUSH2 0xFE1 DUP4 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP3 LT ISZERO PUSH2 0x1004 JUMPI POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1017 JUMPI POP PUSH1 0xB SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x102E JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST PUSH1 0xB SLOAD DUP3 LT ISZERO DUP1 ISZERO PUSH2 0x1041 JUMPI POP PUSH1 0xC SLOAD DUP3 LT JUMPDEST ISZERO PUSH2 0x1058 JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1066 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x10B6 SWAP1 DUP5 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 DUP5 ADD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x10F1 SWAP1 DUP5 SWAP1 PUSH2 0x1E98 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x2 DUP4 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0xE399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60 SWAP3 PUSH2 0x1151 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11BF JUMPI PUSH2 0x11BF PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11E8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x1 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x120A JUMPI PUSH2 0x120A PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0x121F DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EE JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH4 0x1759616B PUSH1 0xE1 SHL DUP2 MSTORE PUSH4 0x2EB2C2D6 SWAP2 PUSH2 0x1266 SWAP2 ADDRESS SWAP2 CALLER SWAP2 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1294 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xD11 SWAP2 PUSH2 0x19CA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x130F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x6E6F74207374617274206D6174696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 DUP1 DUP4 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH4 0xF242432A SWAP3 PUSH2 0x1347 SWAP3 ADDRESS SWAP3 CALLER SWAP3 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1375 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 PUSH4 0xF242432A SWAP2 PUSH2 0x13B5 SWAP2 ADDRESS SWAP2 CALLER SWAP2 PUSH1 0x1 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13E3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x5 DUP5 ADD SSTORE POP POP PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH1 0x1 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP5 SWAP4 SWAP1 SWAP4 AND SWAP3 CALLER SWAP3 PUSH32 0x9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D SWAP3 PUSH2 0x1449 SWAP3 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x147E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP1 PUSH2 0x1E4D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x14E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH2 0x14EC DUP2 PUSH2 0x16CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0x1505 JUMPI PUSH2 0x1505 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x157B JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1535 JUMPI PUSH2 0x1535 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0x1569 JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1558 JUMPI PUSH2 0x1558 PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 PUSH2 0x1573 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1519 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x15DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x756E6473 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP2 SLOAD PUSH2 0x15EB SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1EB0 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1649 JUMPI DUP2 PUSH2 0x15FE DUP3 PUSH1 0x1 PUSH2 0x1E98 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x160E JUMPI PUSH2 0x160E PUSH2 0x1EC7 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x162B JUMPI PUSH2 0x162B PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SSTORE DUP1 PUSH2 0x1641 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15DD JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x1659 JUMPI PUSH2 0x1659 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x16CA JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD11 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1699 JUMPI PUSH2 0x1699 PUSH2 0x1EC7 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD DUP3 SLOAD PUSH1 0x1 DUP2 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE SWAP2 SWAP1 SWAP3 KECCAK256 ADD SSTORE DUP1 PUSH2 0x16C2 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x167D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1778 SWAP1 DUP6 SWAP1 PUSH2 0x177E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1850 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xD11 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x17F1 SWAP2 SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x60 PUSH2 0x185F DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1869 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x18CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x54B JUMP JUMPDEST DUP5 EXTCODESIZE PUSH2 0x1918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x54B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1934 SWAP2 SWAP1 PUSH2 0x20EC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1971 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1976 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1986 DUP3 DUP3 DUP7 PUSH2 0x1991 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x19A0 JUMPI POP DUP2 PUSH2 0x1862 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x19B0 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2108 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x14EC SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x19E4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1A58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A61 DUP6 PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A6F PUSH1 0x20 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP3 POP PUSH2 0x1A7D PUSH1 0x40 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A8B PUSH1 0x60 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE0 DUP5 PUSH2 0x1A26 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1862 DUP3 PUSH2 0x1A26 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B4F JUMPI PUSH2 0x1B4F PUSH2 0x1B10 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B84 PUSH2 0x1B10 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1B93 DUP3 DUP3 ADD PUSH2 0x1B26 JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1BAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x1986 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1BB3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BEA DUP5 PUSH2 0x1A26 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1C07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C13 DUP8 DUP4 DUP9 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1C29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C36 DUP7 DUP3 DUP8 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C75 DUP4 PUSH2 0x1A26 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C83 PUSH1 0x20 DUP5 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB7 PUSH2 0x1B10 JUMP JUMPDEST PUSH2 0x1CCA PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1B26 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1CDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1D DUP7 PUSH2 0x1A26 JUMP JUMPDEST SWAP5 POP PUSH2 0x1D2B PUSH1 0x20 DUP8 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1D48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D54 DUP10 DUP4 DUP11 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D76 DUP10 DUP4 DUP11 ADD PUSH2 0x1B57 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D99 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1DBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DC5 DUP6 PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH2 0x1DD3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E09 DUP7 PUSH2 0x1A26 JUMP JUMPDEST SWAP5 POP PUSH2 0x1E17 PUSH1 0x20 DUP8 ADD PUSH2 0x1A26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D99 DUP9 DUP3 DUP10 ADD PUSH2 0x1C8C JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1EAB JUMPI PUSH2 0x1EAB PUSH2 0x1E82 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC2 PUSH2 0x1E82 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1EEC JUMPI PUSH2 0x1EEC PUSH2 0x1E82 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1F24 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1F08 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1F5B SWAP1 DUP4 ADD DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1F6D DUP2 DUP6 PUSH2 0x1EF4 JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x80 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 MSTORE POP POP PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1FDF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1FF6 JUMPI PUSH2 0x1FF6 PUSH2 0x1E82 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP4 ADD DUP2 SWAP1 MSTORE DUP5 SLOAD SWAP1 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC0 DUP6 ADD SWAP2 SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2056 JUMPI DUP5 SLOAD DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 SWAP4 DUP4 ADD SWAP4 ADD PUSH2 0x203A JUMP JUMPDEST POP POP DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x206A DUP3 DUP8 PUSH2 0x1EF4 JUMP JUMPDEST DUP6 DUP2 SUB PUSH1 0x80 SWAP1 SWAP7 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x0 DUP6 MSTORE SWAP1 SWAP4 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1862 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20DB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x20C3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1778 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20FE DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x20C0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2127 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x20C0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E CALLDATASIZE 0xE1 XOR 0xCD 0xDD EXP EXTCODECOPY 0xA7 0x4D 0x4B 0xDA 0xC1 0x27 0xE6 0xE7 PUSH6 0x102AAECEFCF1 0xD4 SDIV 0xC8 0xD SWAP16 0xB6 0xE CALLDATACOPY 0x4E PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:8241:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;8096:514:0;;;;;;:::i;:::-;;:::i;:::-;;14672:102;14757:8;;-1:-1:-1;;;;;14757:8:0;14672:102;;;-1:-1:-1;;;;;1253:32:13;;;1235:51;;1223:2;1208:18;14672:102:0;1089:203:13;7440:25:0;;;;;;;;;1443::13;;;1431:2;1416:18;7440:25:0;1297:177:13;8618:167:0;;;;;;:::i;:::-;;:::i;9139:622::-;;;;;;:::i;:::-;;:::i;12717:638::-;;;:::i;10002:353::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2605:15:13;;;2587:34;;2657:15;;;;2652:2;2637:18;;2630:43;2689:18;;;2682:34;2747:2;2732:18;;2725:34;2536:3;2521:19;10002:353:0;2318:447:13;14564:100:0;;;;;;:::i;:::-;;:::i;9769:225::-;;;;;;:::i;:::-;;:::i;8793:338::-;;;;;;:::i;:::-;;:::i;7151:22::-;;;;;-1:-1:-1;;;;;7151:22:0;;;14464:92;;;;;;:::i;:::-;;:::i;1668:101:1:-;;;:::i;14782:104:0:-;;;;;;:::i;:::-;;:::i;14368:88::-;;;;;;:::i;:::-;;:::i;1036:85:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;1036:85;;13947:413:0;;;;;;:::i;:::-;;:::i;7545:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7545:41:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5323:12:13;;-1:-1:-1;;;;;5319:38:13;;;5307:51;;5407:4;5396:16;;;5390:23;5374:14;;;5367:47;5323:12;;5319:38;;5839:18;;;5307:51;;;;5396:16;;;;5390:23;5374:14;;;5367:47;5895:32;;5889:3;5874:19;;5867:61;5915:3;5944:19;;5937:35;5739:3;5724:19;7545:41:0;5425:553:13;477:247:4;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;7628:33:13;;;7610:52;;7598:2;7583:18;477:247:4;7466:202:13;10363:1795:0;;;;;;:::i;:::-;;:::i;13480:459::-;;;;;;:::i;:::-;;:::i;13367:105::-;;;;;;:::i;:::-;-1:-1:-1;;;;;13446:11:0;13419:7;13446:11;;;:6;:11;;;;;:18;;13367:105;12166:543;;;:::i;7472:25::-;;;;;;7504:26;;;;;;252:219:4;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;1918:198:1;;;;;;:::i;:::-;;:::i;387:221:5:-;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;8096:514:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;;;;;;;;;8233:19:0::1;:34:::0;;-1:-1:-1;;;;;;8233:34:0;;::::1;-1:-1:-1::0;;;;;8233:34:0;;::::1;::::0;;::::1;::::0;;;8278:18:::1;:32:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8321:20:::1;:36:::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;8368:19:::1;:34:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;8413:35:0;;;:14:::1;:35;::::0;;;;;-1:-1:-1;8413:39:0;;;;8478:18;;;::::1;8463:34:::0;;;;;:38;;;8527:20;;;::::1;8512:36:::0;;;;;:40;;;;8578:19;;;::::1;8563:35:::0;;;8601:1:::1;8563:39:::0;;8096:514::o;8618:167::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;8713:5:0::1;:14:::0;;;;8738:5:::1;:14:::0;8763:5:::1;:14:::0;8618:167::o;9139:622::-;9284:20;9321:9;9307:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9307:24:0;;9284:47;;9342:24;9383:9;9369:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9369:24:0;;9342:51;;9420:1;9412:5;:9;9404:47;;;;-1:-1:-1;;;9404:47:0;;9249:2:13;9404:47:0;;;9231:21:13;9288:2;9268:18;;;9261:30;9327:27;9307:18;;;9300:55;9372:18;;9404:47:0;9047:349:13;9404:47:0;9467:9;9500:1;9480:17;9492:5;9480:9;:17;:::i;:::-;:21;;;;:::i;:::-;9467:35;;9462:186;9509:5;9504:1;:10;9462:186;;9551:1;9536:3;9540:7;9542:5;9551:1;9540:7;:::i;:::-;9536:12;;;;;;;;:::i;:::-;;;;;;;;;;:16;9586:1;9567:7;9575;9577:5;9575:1;:7;:::i;:::-;9567:16;;;;;;;;:::i;:::-;;;;;;;;;;;:20;;;;-1:-1:-1;;;;;9602:26:0;;;;;;:6;:26;;;;;:34;;;;;;;;;;;;;;;;;9634:1;9516:3;9634:1;9516:3;:::i;:::-;;;;9462:186;;;-1:-1:-1;9658:95:0;;-1:-1:-1;;;9658:95:0;;-1:-1:-1;;;;;9658:50:0;;;;;:95;;9709:10;;9729:4;;9736:3;;9741:7;;9658:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9273:488;;9139:622;;;:::o;12717:638::-;12831:10;12752:20;12825:17;;;:5;:17;;;;;12861:19;;;;12775:15;;12861:24;12853:53;;;;-1:-1:-1;;;12853:53:0;;11605:2:13;12853:53:0;;;11587:21:13;11644:2;11624:18;;;11617:30;-1:-1:-1;;;11663:18:13;;;11656:46;11719:18;;12853:53:0;11403:340:13;12853:53:0;12964:12;12947:13;;12925:4;:19;;;:35;;;;:::i;:::-;:51;;12917:81;;;;-1:-1:-1;;;12917:81:0;;11950:2:13;12917:81:0;;;11932:21:13;11989:2;11969:18;;;11962:30;-1:-1:-1;;;12008:18:13;;;12001:47;12065:18;;12917:81:0;11748:341:13;12917:81:0;13029:6;;;;-1:-1:-1;;;;;13029:6:0;13011:15;13112;;;:6;:15;;;;;13011;;13084:44;;:27;:44::i;:::-;-1:-1:-1;;;;;13177:15:0;;;;;;:6;:15;;;;;13046:82;;-1:-1:-1;13046:82:0;-1:-1:-1;13139:61:0;;13046:82;13139:37;:61::i;:::-;13213:80;;-1:-1:-1;;;13213:80:0;;-1:-1:-1;;;;;13213:34:0;;;;;:80;;13256:4;;13263:10;;13275;;13287:1;;13213:80;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13309:38:0;;1443:25:13;;;-1:-1:-1;;;;;13309:38:0;;;-1:-1:-1;13315:10:0;;-1:-1:-1;13309:38:0;;1431:2:13;1416:18;13309:38:0;;;;;;;12741:614;;;;;12717:638::o;10002:353::-;-1:-1:-1;;;;;10113:11:0;;10063:7;10113:11;;;:5;:11;;;;;:26;;;10063:7;;;;;;10113:31;;10109:101;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;;-1:-1:-1;10177:1:0;10161:37;;10109:101;-1:-1:-1;;;;;;;;;10228:11:0;;;;;;;:5;:11;;;;;:32;;10262:16;;;:32;10228;10296:24;;;10322;;;;;10228:32;;;;10262;;10296:24;10002:353;;;;;;:::o;14564:100::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14633:8:0::1;:23:::0;;-1:-1:-1;;;;;;14633:23:0::1;-1:-1:-1::0;;;;;14633:23:0;;;::::1;::::0;;;::::1;::::0;;14564:100::o;9769:225::-;-1:-1:-1;;;;;9859:11:0;;9836:7;9859:11;;;:5;:11;;;;;:26;;;:31;;9855:72;;-1:-1:-1;9914:1:0;;9769:225;-1:-1:-1;9769:225:0:o;9855:72::-;9973:13;;-1:-1:-1;;;;;9944:11:0;;;;;;:5;:11;;;;;:26;;;:42;;9973:13;9944:42;:::i;8793:338::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;8985:26:0;::::1;;::::0;;;:6:::1;:26;::::0;;;;8954:63:::1;::::0;9013:3;8954:30:::1;:63::i;:::-;9028:95;::::0;-1:-1:-1;;;9028:95:0;;-1:-1:-1;;;;;9028:50:0;::::1;::::0;::::1;::::0;:95:::1;::::0;9079:10:::1;::::0;9099:4:::1;::::0;9106:3;;9111:7;;9028:95:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8793:338:::0;;;:::o;14464:92::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14530:9:0::1;:18:::0;14464:92::o;1668:101:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;14782:104:0:-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14854:13:0::1;:24:::0;14782:104::o;14368:88::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;14432:10:0::1;:16:::0;;-1:-1:-1;;;;;;14432:16:0::1;-1:-1:-1::0;;;;;14432:16:0;;;::::1;::::0;;;::::1;::::0;;14368:88::o;13947:413::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;14044:9:0;;::::1;14016:25;14044:9:::0;;;:5:::1;:9;::::0;;;;14064:10:::1;::::0;::::1;:16:::0;;-1:-1:-1;;;;;;14064:16:0::1;::::0;;::::1;::::0;;;::::1;::::0;;;14095:23:::1;::::0;::::1;::::0;:28;;14091:262:::1;;14155:19;::::0;-1:-1:-1;;;;;14155:19:0;;::::1;14140:35;::::0;;;:14:::1;:35;::::0;;;;;14178:1:::1;14140:39:::0;;;;14209:18:::1;::::0;;::::1;14194:34:::0;;;;;:38;;;14262:20:::1;::::0;;::::1;14247:36:::0;;;;;:40;14317:19:::1;::::0;;;::::1;14302:35:::0;;;14340:1:::1;14302:39:::0;;14091:262:::1;14005:355;13947:413:::0;;:::o;10363:1795::-;10510:10;10480:21;10504:17;;;:5;:17;;;;;10540:19;;;;:24;10532:62;;;;-1:-1:-1;;;10532:62:0;;12936:2:13;10532:62:0;;;12918:21:13;12975:2;12955:18;;;12948:30;13014:27;12994:18;;;12987:55;13059:18;;10532:62:0;12734:349:13;10532:62:0;-1:-1:-1;;;;;10658:28:0;;;;;;:14;:28;;;;;;;;;10613:18;;;:32;;;;;:42;;;;;;;;;;:73;10605:96;;;;-1:-1:-1;;;10605:96:0;;13290:2:13;10605:96:0;;;13272:21:13;13329:2;13309:18;;;13302:30;-1:-1:-1;;;13348:18:13;;;13341:40;13398:18;;10605:96:0;13088:334:13;10605:96:0;-1:-1:-1;;;;;10765:28:0;;;;;;:14;:28;;;;;;;;;10720:18;;;:32;;;;;:42;;;;;;;;;;:73;10712:96;;;;-1:-1:-1;;;10712:96:0;;13290:2:13;10712:96:0;;;13272:21:13;13329:2;13309:18;;;13302:30;-1:-1:-1;;;13348:18:13;;;13341:40;13398:18;;10712:96:0;13088:334:13;10712:96:0;10886:10;;10911:9;;10821:8;;:110;;-1:-1:-1;;;;;10821:8:0;;;;10861:10;;10886;;;;10821:25;:110::i;:::-;10942:83;;-1:-1:-1;;;10942:83:0;;-1:-1:-1;;;;;10942:39:0;;;;;:83;;10982:10;;11002:4;;11009:8;;11019:1;;10942:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11036:83:0;;-1:-1:-1;;;11036:83:0;;-1:-1:-1;;;;;11036:39:0;;;-1:-1:-1;11036:39:0;;-1:-1:-1;11036:83:0;;11076:10;;11096:4;;11103:8;;11113:1;;11036:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11162:15:0;11140:19;;;;:37;;;11188:40;;-1:-1:-1;;;;;11188:40:0;;;-1:-1:-1;;;;;;11188:40:0;;;;;;-1:-1:-1;11239:17:0;;:28;;;11278:9;;;:40;;;;;;;;;;;;-1:-1:-1;11329:17:0;;:28;;;11445:9;11399:56;;;;;;13612:19:13;;;;11433:10:0;13669:2:13;13665:15;-1:-1:-1;;13661:53:13;13647:12;;;13640:75;13731:12;;;13724:28;-1:-1:-1;;;11460:3:0;;-1:-1:-1;13768:12:13;;11399:56:0;;;;;;;;;;;;11389:67;;;;;;11384:73;;:79;;;;:::i;:::-;11474:9;:11;;11370:93;;-1:-1:-1;11474:9:0;:11;;;:::i;:::-;;;;;;11498:15;11554:5;;11545:6;:14;11542:340;;;-1:-1:-1;11586:19:0;;-1:-1:-1;;;;;11586:19:0;11542:340;;;11637:5;;11627:6;:15;;:33;;;;;11655:5;;11646:6;:14;11627:33;11623:259;;;-1:-1:-1;11688:18:0;;-1:-1:-1;;;;;11688:18:0;11623:259;;;11738:5;;11728:6;:15;;:33;;;;;11756:5;;11747:6;:14;11728:33;11724:158;;;-1:-1:-1;11788:20:0;;-1:-1:-1;;;;;11788:20:0;11724:158;;;-1:-1:-1;11851:19:0;;-1:-1:-1;;;;;11851:19:0;11724:158;11892:6;;;:16;;-1:-1:-1;;;;;;11892:16:0;-1:-1:-1;;;;;11892:16:0;;;;;;;;;;11919:32;;-1:-1:-1;11919:32:0;;;:18;;;:32;;;;;;;;:42;;;;;;;;:47;;-1:-1:-1;;;11919:47:0;;-1:-1:-1;;11919:47:0;:::i;:::-;;;;-1:-1:-1;;;;;;;11977:32:0;;;;;;:18;;;:32;;;;;;;;:42;;;;;;;;:47;;12023:1;;11977:32;:47;;12023:1;;11977:47;:::i;:::-;;;;-1:-1:-1;;12086:9:0;;;:25;12059;;12086;12113:17;;;12132;;;;12040:110;;-1:-1:-1;;;;;12086:25:0;;;;12059;;;;;12047:10;;12040:110;;;;14319:25:13;;;14375:2;14360:18;;14353:34;14307:2;14292:18;;14145:248;12040:110:0;;;;;;;;10469:1689;;;10363:1795;;;;:::o;13480:459::-;1082:7:1;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;13577:26:0;::::1;13560:14;13577:26:::0;;;:6:::1;:26;::::0;;;;:33;;;13648:21:::1;::::0;::::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;-1:-1:-1;13648:21:0::1;;13621:48;;13685:9;13680:78;13704:6;13700:1;:10;13680:78;;;13745:1;13732:7;13740:1;13732:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;:14;13712:3;::::1;::::0;::::1;:::i;:::-;;;;13680:78;;;-1:-1:-1::0;;;;;;13768:50:0;::::1;13847:26;::::0;;;:6:::1;:26;::::0;;;;;;13768:119;;-1:-1:-1;;;13768:119:0;;:50:::1;::::0;:119:::1;::::0;13828:4:::1;::::0;13835:10:::1;::::0;13875:7;;13768:119:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;13905:26:0;::::1;;::::0;;;:6:::1;:26;::::0;;;;13898:33:::1;::::0;::::1;:::i;12166:543::-:0;12232:10;12202:21;12226:17;;;:5;:17;;;;;12262:19;;;;12226:17;;12262:24;12254:53;;;;-1:-1:-1;;;12254:53:0;;11605:2:13;12254:53:0;;;11587:21:13;11644:2;11624:18;;;11617:30;-1:-1:-1;;;11663:18:13;;;11656:46;11719:18;;12254:53:0;11403:340:13;12254:53:0;12329:25;;;12400:17;;;;12320:105;;-1:-1:-1;;;12320:105:0;;-1:-1:-1;;;;;12329:25:0;;;;12320:52;;:105;;12381:4;;12388:10;;12329:25;12320:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;12445:9:0;;;:25;12516:17;;;;12436:105;;-1:-1:-1;;;12436:105:0;;-1:-1:-1;;;;;12445:25:0;;;;12436:52;;:105;;12497:4;;12504:10;;12445:25;;12436:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12574:1:0;12552:19;;;:23;-1:-1:-1;;12637:9:0;;;:25;12610;;12637;12664:17;;;12683;;;;12591:110;;-1:-1:-1;;;;;12637:25:0;;;;12610;;;;;12598:10;;12591:110;;;;14319:25:13;;;14375:2;14360:18;;14353:34;14307:2;14292:18;;14145:248;12591:110:0;;;;;;;;12191:518;12166:543::o;1918:198:1:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:1;719:10:9;1248:23:1;1240:68;;;;-1:-1:-1;;;1240:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:1;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:1;;15857:2:13;1998:73:1::1;::::0;::::1;15839:21:13::0;15896:2;15876:18;;;15869:30;15935:34;15915:18;;;15908:62;-1:-1:-1;;;15986:18:13;;;15979:36;16032:19;;1998:73:1::1;15655:402:13::0;1998:73:1::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6298:341:0:-;6359:16;6377;6417:5;6423:1;6417:8;;;;;;;;:::i;:::-;;;;;;;;;6406:19;;6447:1;6436:12;;6463:9;6459:173;6481:12;;6477:16;;6459:173;;;6527:8;6516:5;6522:1;6516:8;;;;;;;;:::i;:::-;;;;;;;;;:19;6513:108;;;6566:5;6572:1;6566:8;;;;;;;;:::i;:::-;;;;;;;;;6555:19;;6604:1;6593:12;;6513:108;6494:3;;;;:::i;:::-;;;;6459:173;;;;6298:341;;;:::o;4212:300::-;4304:12;;4296:20;;4288:69;;;;-1:-1:-1;;;4288:69:0;;16264:2:13;4288:69:0;;;16246:21:13;16303:2;16283:18;;;16276:30;16342:34;16322:18;;;16315:62;-1:-1:-1;;;16393:18:13;;;16386:34;16437:19;;4288:69:0;16062:400:13;4288:69:0;4385:12;;:16;;4400:1;;4385:16;:::i;:::-;4377:5;:24;4370:113;;;4433:5;4439:9;:5;4447:1;4439:9;:::i;:::-;4433:16;;;;;;;;:::i;:::-;;;;;;;;;4418:5;4424;4418:12;;;;;;;;:::i;:::-;;;;;;;;;;:31;4464:7;;;;:::i;:::-;;;;4370:113;;;4493:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4212:300;;:::o;5008:181::-;5085:8;;:13;5082:100;;5112:6;5108:66;5128:1;:8;5124:1;:12;5108:66;;;5152:1;5159;5161;5159:4;;;;;;;;:::i;:::-;;;;;;;;;;;;5152:12;;;;;;;-1:-1:-1;5152:12:0;;;;;;;;;5138:3;;;;:::i;:::-;;;;5108:66;;5082:100;5008:181;;:::o;2270:187:1:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:1;;;-1:-1:-1;;;;;;2378:17:1;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;912:241:7:-;1077:68;;;-1:-1:-1;;;;;16857:15:13;;;1077:68:7;;;16839:34:13;16909:15;;16889:18;;;16882:43;16941:18;;;;16934:34;;;1077:68:7;;;;;;;;;;16774:18:13;;;;1077:68:7;;;;;;;;-1:-1:-1;;;;;1077:68:7;-1:-1:-1;;;1077:68:7;;;1050:96;;1070:5;;1050:19;:96::i;:::-;912:241;;;;:::o;3207:706::-;3626:23;3652:69;3680:4;3652:69;;;;;;;;;;;;;;;;;3660:5;-1:-1:-1;;;;;3652:27:7;;;:69;;;;;:::i;:::-;3735:17;;3626:95;;-1:-1:-1;3735:21:7;3731:176;;3830:10;3819:30;;;;;;;;;;;;:::i;:::-;3811:85;;;;-1:-1:-1;;;3811:85:7;;17463:2:13;3811:85:7;;;17445:21:13;17502:2;17482:18;;;17475:30;17541:34;17521:18;;;17514:62;-1:-1:-1;;;17592:18:13;;;17585:40;17642:19;;3811:85:7;17261:406:13;3514:223:8;3647:12;3678:52;3700:6;3708:4;3714:1;3717:12;3678:21;:52::i;:::-;3671:59;;3514:223;;;;;;:::o;4601:499::-;4766:12;4823:5;4798:21;:30;;4790:81;;;;-1:-1:-1;;;4790:81:8;;17874:2:13;4790:81:8;;;17856:21:13;17913:2;17893:18;;;17886:30;17952:34;17932:18;;;17925:62;-1:-1:-1;;;18003:18:13;;;17996:36;18049:19;;4790:81:8;17672:402:13;4790:81:8;1087:20;;4881:60;;;;-1:-1:-1;;;4881:60:8;;18281:2:13;4881:60:8;;;18263:21:13;18320:2;18300:18;;;18293:30;18359:31;18339:18;;;18332:59;18408:18;;4881:60:8;18079:353:13;4881:60:8;4953:12;4967:23;4994:6;-1:-1:-1;;;;;4994:11:8;5013:5;5020:4;4994:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4952:73;;;;5042:51;5059:7;5068:10;5080:12;5042:16;:51::i;:::-;5035:58;4601:499;-1:-1:-1;;;;;;;4601:499:8:o;7214:692::-;7360:12;7388:7;7384:516;;;-1:-1:-1;7418:10:8;7411:17;;7384:516;7529:17;;:21;7525:365;;7723:10;7717:17;7783:15;7770:10;7766:2;7762:19;7755:44;7525:365;7862:12;7855:20;;-1:-1:-1;;;7855:20:8;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:409::-;761:6;769;777;785;838:3;826:9;817:7;813:23;809:33;806:53;;;855:1;852;845:12;806:53;878:29;897:9;878:29;:::i;:::-;868:39;;926:38;960:2;949:9;945:18;926:38;:::i;:::-;916:48;;983:38;1017:2;1006:9;1002:18;983:38;:::i;:::-;973:48;;1040:38;1074:2;1063:9;1059:18;1040:38;:::i;:::-;1030:48;;675:409;;;;;;;:::o;1479:316::-;1556:6;1564;1572;1625:2;1613:9;1604:7;1600:23;1596:32;1593:52;;;1641:1;1638;1631:12;1593:52;-1:-1:-1;;1664:23:13;;;1734:2;1719:18;;1706:32;;-1:-1:-1;1785:2:13;1770:18;;;1757:32;;1479:316;-1:-1:-1;1479:316:13:o;1800:322::-;1877:6;1885;1893;1946:2;1934:9;1925:7;1921:23;1917:32;1914:52;;;1962:1;1959;1952:12;1914:52;1985:29;2004:9;1985:29;:::i;:::-;1975:39;2061:2;2046:18;;2033:32;;-1:-1:-1;2112:2:13;2097:18;;;2084:32;;1800:322;-1:-1:-1;;;1800:322:13:o;2127:186::-;2186:6;2239:2;2227:9;2218:7;2214:23;2210:32;2207:52;;;2255:1;2252;2245:12;2207:52;2278:29;2297:9;2278:29;:::i;2770:127::-;2831:10;2826:3;2822:20;2819:1;2812:31;2862:4;2859:1;2852:15;2886:4;2883:1;2876:15;2902:275;2973:2;2967:9;3038:2;3019:13;;-1:-1:-1;;3015:27:13;3003:40;;3073:18;3058:34;;3094:22;;;3055:62;3052:88;;;3120:18;;:::i;:::-;3156:2;3149:22;2902:275;;-1:-1:-1;2902:275:13:o;3182:712::-;3236:5;3289:3;3282:4;3274:6;3270:17;3266:27;3256:55;;3307:1;3304;3297:12;3256:55;3343:6;3330:20;3369:4;3392:18;3388:2;3385:26;3382:52;;;3414:18;;:::i;:::-;3460:2;3457:1;3453:10;3483:28;3507:2;3503;3499:11;3483:28;:::i;:::-;3545:15;;;3615;;;3611:24;;;3576:12;;;;3647:15;;;3644:35;;;3675:1;3672;3665:12;3644:35;3711:2;3703:6;3699:15;3688:26;;3723:142;3739:6;3734:3;3731:15;3723:142;;;3805:17;;3793:30;;3756:12;;;;3843;;;;3723:142;;3899:669;4026:6;4034;4042;4095:2;4083:9;4074:7;4070:23;4066:32;4063:52;;;4111:1;4108;4101:12;4063:52;4134:29;4153:9;4134:29;:::i;:::-;4124:39;;4214:2;4203:9;4199:18;4186:32;4237:18;4278:2;4270:6;4267:14;4264:34;;;4294:1;4291;4284:12;4264:34;4317:61;4370:7;4361:6;4350:9;4346:22;4317:61;:::i;:::-;4307:71;;4431:2;4420:9;4416:18;4403:32;4387:48;;4460:2;4450:8;4447:16;4444:36;;;4476:1;4473;4466:12;4444:36;;4499:63;4554:7;4543:8;4532:9;4528:24;4499:63;:::i;:::-;4489:73;;;3899:669;;;;;:::o;4796:180::-;4855:6;4908:2;4896:9;4887:7;4883:23;4879:32;4876:52;;;4924:1;4921;4914:12;4876:52;-1:-1:-1;4947:23:13;;4796:180;-1:-1:-1;4796:180:13:o;4981:260::-;5049:6;5057;5110:2;5098:9;5089:7;5085:23;5081:32;5078:52;;;5126:1;5123;5116:12;5078:52;5149:29;5168:9;5149:29;:::i;:::-;5139:39;;5197:38;5231:2;5220:9;5216:18;5197:38;:::i;:::-;5187:48;;4981:260;;;;;:::o;5983:530::-;6025:5;6078:3;6071:4;6063:6;6059:17;6055:27;6045:55;;6096:1;6093;6086:12;6045:55;6132:6;6119:20;6158:18;6154:2;6151:26;6148:52;;;6180:18;;:::i;:::-;6224:55;6267:2;6248:13;;-1:-1:-1;;6244:27:13;6273:4;6240:38;6224:55;:::i;:::-;6304:2;6295:7;6288:19;6350:3;6343:4;6338:2;6330:6;6326:15;6322:26;6319:35;6316:55;;;6367:1;6364;6357:12;6316:55;6432:2;6425:4;6417:6;6413:17;6406:4;6397:7;6393:18;6380:55;6480:1;6455:16;;;6473:4;6451:27;6444:38;;;;6459:7;5983:530;-1:-1:-1;;;5983:530:13:o;6518:943::-;6672:6;6680;6688;6696;6704;6757:3;6745:9;6736:7;6732:23;6728:33;6725:53;;;6774:1;6771;6764:12;6725:53;6797:29;6816:9;6797:29;:::i;:::-;6787:39;;6845:38;6879:2;6868:9;6864:18;6845:38;:::i;:::-;6835:48;;6934:2;6923:9;6919:18;6906:32;6957:18;6998:2;6990:6;6987:14;6984:34;;;7014:1;7011;7004:12;6984:34;7037:61;7090:7;7081:6;7070:9;7066:22;7037:61;:::i;:::-;7027:71;;7151:2;7140:9;7136:18;7123:32;7107:48;;7180:2;7170:8;7167:16;7164:36;;;7196:1;7193;7186:12;7164:36;7219:63;7274:7;7263:8;7252:9;7248:24;7219:63;:::i;:::-;7209:73;;7335:3;7324:9;7320:19;7307:33;7291:49;;7365:2;7355:8;7352:16;7349:36;;;7381:1;7378;7371:12;7349:36;;7404:51;7447:7;7436:8;7425:9;7421:24;7404:51;:::i;:::-;7394:61;;;6518:943;;;;;;;;:::o;7673:397::-;7759:6;7767;7775;7783;7836:3;7824:9;7815:7;7811:23;7807:33;7804:53;;;7853:1;7850;7843:12;7804:53;7876:29;7895:9;7876:29;:::i;:::-;7866:39;;7924:38;7958:2;7947:9;7943:18;7924:38;:::i;:::-;7673:397;;7914:48;;-1:-1:-1;;;;8009:2:13;7994:18;;7981:32;;8060:2;8045:18;8032:32;;7673:397::o;8075:606::-;8179:6;8187;8195;8203;8211;8264:3;8252:9;8243:7;8239:23;8235:33;8232:53;;;8281:1;8278;8271:12;8232:53;8304:29;8323:9;8304:29;:::i;:::-;8294:39;;8352:38;8386:2;8375:9;8371:18;8352:38;:::i;:::-;8342:48;;8437:2;8426:9;8422:18;8409:32;8399:42;;8488:2;8477:9;8473:18;8460:32;8450:42;;8543:3;8532:9;8528:19;8515:33;8571:18;8563:6;8560:30;8557:50;;;8603:1;8600;8593:12;8557:50;8626:49;8667:7;8658:6;8647:9;8643:22;8626:49;:::i;8686:356::-;8888:2;8870:21;;;8907:18;;;8900:30;8966:34;8961:2;8946:18;;8939:62;9033:2;9018:18;;8686:356::o;9401:127::-;9462:10;9457:3;9453:20;9450:1;9443:31;9493:4;9490:1;9483:15;9517:4;9514:1;9507:15;9533:128;9573:3;9604:1;9600:6;9597:1;9594:13;9591:39;;;9610:18;;:::i;:::-;-1:-1:-1;9646:9:13;;9533:128::o;9666:125::-;9706:4;9734:1;9731;9728:8;9725:34;;;9739:18;;:::i;:::-;-1:-1:-1;9776:9:13;;9666:125::o;9796:127::-;9857:10;9852:3;9848:20;9845:1;9838:31;9888:4;9885:1;9878:15;9912:4;9909:1;9902:15;9928:136;9967:3;9995:5;9985:39;;10004:18;;:::i;:::-;-1:-1:-1;;;10040:18:13;;9928:136::o;10069:435::-;10122:3;10160:5;10154:12;10187:6;10182:3;10175:19;10213:4;10242:2;10237:3;10233:12;10226:19;;10279:2;10272:5;10268:14;10300:1;10310:169;10324:6;10321:1;10318:13;10310:169;;;10385:13;;10373:26;;10419:12;;;;10454:15;;;;10346:1;10339:9;10310:169;;;-1:-1:-1;10495:3:13;;10069:435;-1:-1:-1;;;;;10069:435:13:o;10509:889::-;-1:-1:-1;;;;;10960:15:13;;;10942:34;;11012:15;;11007:2;10992:18;;10985:43;10922:3;11059:2;11044:18;;11037:31;;;10885:4;;11091:57;;11128:19;;11120:6;11091:57;:::i;:::-;11196:9;11188:6;11184:22;11179:2;11168:9;11164:18;11157:50;11230:44;11267:6;11259;11230:44;:::i;:::-;11311:22;;;11305:3;11290:19;;;11283:51;;;;-1:-1:-1;;11358:1:13;11343:17;;11389:2;11377:15;;10509:889;-1:-1:-1;;;;10509:889:13:o;12094:635::-;-1:-1:-1;;;;;12453:15:13;;;12435:34;;12505:15;;;;12500:2;12485:18;;12478:43;12552:2;12537:18;;12530:34;12595:2;12580:18;;12573:34;;;;12415:3;12638;12623:19;;12616:32;;;12378:4;12664:19;;;12657:30;12719:3;12704:19;;12094:635::o;13791:209::-;13823:1;13849;13839:132;;13893:10;13888:3;13884:20;13881:1;13874:31;13928:4;13925:1;13918:15;13956:4;13953:1;13946:15;13839:132;-1:-1:-1;13985:9:13;;13791:209::o;14005:135::-;14044:3;14065:17;;;14062:43;;14085:18;;:::i;:::-;-1:-1:-1;14132:1:13;14121:13;;14005:135::o;14398:1252::-;-1:-1:-1;;;;;14888:15:13;;;14870:34;;14961:15;;14923:2;14941:18;;;14934:43;;;;14819:3;15008:2;14993:18;;14986:31;;;15066:13;;14804:19;;;15088:22;;;14771:4;15154:17;;;15194:16;;;14771:4;;15194:16;;15141:3;15126:19;;;14923:2;14771:4;15238:168;15252:6;15249:1;15246:13;15238:168;;;15313:13;;15301:26;;15394:1;15382:14;;;;15347:12;;;;15267:9;15238:168;;;15242:3;;15451:9;15446:3;15442:19;15437:2;15426:9;15422:18;15415:47;15485:41;15522:3;15514:6;15485:41;:::i;:::-;15563:22;;;15557:3;15542:19;;;15535:51;;;;15610:1;15595:17;;15629:15;;;;14398:1252;-1:-1:-1;;;;;;;14398:1252:13:o;16467:127::-;16528:10;16523:3;16519:20;16516:1;16509:31;16559:4;16556:1;16549:15;16583:4;16580:1;16573:15;16979:277;17046:6;17099:2;17087:9;17078:7;17074:23;17070:32;17067:52;;;17115:1;17112;17105:12;17067:52;17147:9;17141:16;17200:5;17193:13;17186:21;17179:5;17176:32;17166:60;;17222:1;17219;17212:12;18437:258;18509:1;18519:113;18533:6;18530:1;18527:13;18519:113;;;18609:11;;;18603:18;18590:11;;;18583:39;18555:2;18548:10;18519:113;;;18650:6;18647:1;18644:13;18641:48;;;-1:-1:-1;;18685:1:13;18667:16;;18660:27;18437:258::o;18700:274::-;18829:3;18867:6;18861:13;18883:53;18929:6;18924:3;18917:4;18909:6;18905:17;18883:53;:::i;:::-;18952:16;;;;;18700:274;-1:-1:-1;;18700:274:13:o;18979:383::-;19128:2;19117:9;19110:21;19091:4;19160:6;19154:13;19203:6;19198:2;19187:9;19183:18;19176:34;19219:66;19278:6;19273:2;19262:9;19258:18;19253:2;19245:6;19241:15;19219:66;:::i;:::-;19346:2;19325:15;-1:-1:-1;;19321:29:13;19306:45;;;;19353:2;19302:54;;18979:383;-1:-1:-1;;18979:383:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1712200",
								"executionCost": "121070",
								"totalCost": "1833270"
							},
							"external": {
								"JPDA1()": "2341",
								"JPDA2()": "2339",
								"JPDA3()": "2361",
								"addNFTBatch(address,uint256[],uint256[])": "infinite",
								"addNftBatchWithNumber(address,uint256,uint256)": "infinite",
								"cancel()": "infinite",
								"claim()": "infinite",
								"feeToken()": "2404",
								"getFeeMintAddress()": "2411",
								"getUserMatingNft(address)": "11290",
								"getUserOvipositionTime(address)": "7044",
								"mating(address,address,uint256,uint256)": "infinite",
								"nftCount(address)": "2604",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2421",
								"renounceOwnership()": "28225",
								"setBreedInterval(uint256)": "24510",
								"setConfig(address,address,address,address)": "infinite",
								"setFeeAddress(address)": "26779",
								"setFeeAmount(uint256)": "24553",
								"setFeeMintAddress(address)": "26779",
								"setJPDA(uint256,uint256,uint256)": "68793",
								"setNFT(address,address)": "infinite",
								"supportsInterface(bytes4)": "473",
								"transferOwnership(address)": "28419",
								"urgentWithdraw(address)": "infinite",
								"users(address)": "13467"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7140,
									"end": 7144,
									"name": "PUSH",
									"source": 0,
									"value": "1C20"
								},
								{
									"begin": 7108,
									"end": 7144,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7108,
									"end": 7144,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7262,
									"end": 7263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7245,
									"end": 7263,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7245,
									"end": 7263,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7463,
									"end": 7465,
									"name": "PUSH",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 7440,
									"end": 7465,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 7440,
									"end": 7465,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7497,
									"name": "PUSH",
									"source": 0,
									"value": "52"
								},
								{
									"begin": 7472,
									"end": 7497,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7472,
									"end": 7497,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7527,
									"end": 7530,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 7504,
									"end": 7530,
									"name": "PUSH",
									"source": 0,
									"value": "C"
								},
								{
									"begin": 7504,
									"end": 7530,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8066,
									"end": 8088,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 14889,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e36e118cddd0a3ca74d4bdac127e6e765102aaecefcf1d405c80d9fb60e374e64736f6c634300080d0033",
									".code": [
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "79C5E977"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "EC3C6DEE"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "EC3C6DEE"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "ED9371D7"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "C4091443"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "C971EBB3"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "EA8A1AF0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "9FDD3A3F"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "9FDD3A3F"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "BF90FC1E"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "79C5E977"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "8705FCD4"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "5C39331C"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "647846A5"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "6B392680"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "5C39331C"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "5DADA3BB"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "5DBC3838"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "1DF0C04C"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "1DF0C04C"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "3F3ED4CA"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "4B02218F"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "4E71D92D"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "87BC228"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "19B8094B"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 14889,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14757,
											"end": 14765,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14757,
											"end": 14765,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14757,
											"end": 14765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1253,
											"end": 1285,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1286,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1286,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14672,
											"end": 14774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1089,
											"end": 1292,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1297,
											"end": 1474,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2620,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2587,
											"end": 2621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2587,
											"end": 2621,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2657,
											"end": 2672,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2652,
											"end": 2654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2637,
											"end": 2655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2630,
											"end": 2673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2689,
											"end": 2707,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2682,
											"end": 2716,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2725,
											"end": 2759,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2521,
											"end": 2540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2318,
											"end": 2765,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7173,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5319,
											"end": 5357,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5307,
											"end": 5358,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5390,
											"end": 5413,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5414,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5927,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5927,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5892,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5867,
											"end": 5928,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5944,
											"end": 5963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5944,
											"end": 5963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5937,
											"end": 5972,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5739,
											"end": 5742,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 5724,
											"end": 5743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7545,
											"end": 7586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5425,
											"end": 5978,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7628,
											"end": 7661,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7610,
											"end": 7662,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7598,
											"end": 7600,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7583,
											"end": 7601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7466,
											"end": 7668,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13419,
											"end": 13426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13452,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13457,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13367,
											"end": 13472,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7472,
											"end": 7497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7504,
											"end": 7530,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8252,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8233,
											"end": 8267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8310,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8341,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8321,
											"end": 8357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8387,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8368,
											"end": 8402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8427,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8413,
											"end": 8452,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8478,
											"end": 8496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8501,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8527,
											"end": 8547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8548,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8512,
											"end": 8552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8598,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8563,
											"end": 8602,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8602,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8096,
											"end": 8610,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8718,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8738,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 8738,
											"end": 8752,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8763,
											"end": 8768,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 8763,
											"end": 8777,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8618,
											"end": 8785,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9304,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9284,
											"end": 9331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9392,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9369,
											"end": 9393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9342,
											"end": 9393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9420,
											"end": 9421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9412,
											"end": 9417,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9412,
											"end": 9421,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9251,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9252,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9288,
											"end": 9290,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9261,
											"end": 9291,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9327,
											"end": 9354,
											"name": "PUSH",
											"source": 13,
											"value": "7374617274206D757374206D6F7265207468616E207A65726F00000000000000"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9300,
											"end": 9355,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9372,
											"end": 9390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 9047,
											"end": 9396,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9404,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9476,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9500,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9492,
											"end": 9497,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9489,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 9480,
											"end": 9497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 9480,
											"end": 9501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9509,
											"end": 9514,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9504,
											"end": 9514,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9542,
											"end": 9547,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9548,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9536,
											"end": 9552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9567,
											"end": 9574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 9577,
											"end": 9582,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9576,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 9575,
											"end": 9582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9583,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9567,
											"end": 9587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9608,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9602,
											"end": 9636,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 9634,
											"end": 9635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9516,
											"end": 9519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 9462,
											"end": 9648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 9658,
											"end": 9708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9709,
											"end": 9719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9736,
											"end": 9739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9658,
											"end": 9753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9273,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9273,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9139,
											"end": 9761,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12831,
											"end": 12841,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12752,
											"end": 12772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12825,
											"end": 12830,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12825,
											"end": 12842,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12880,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12861,
											"end": 12880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12790,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12775,
											"end": 12790,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12861,
											"end": 12885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F74207374617274206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11656,
											"end": 11702,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11403,
											"end": 11743,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 12853,
											"end": 12906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12964,
											"end": 12976,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12947,
											"end": 12960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12944,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12925,
											"end": 12944,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 12925,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12976,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12925,
											"end": 12976,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11950,
											"end": 11952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11932,
											"end": 11953,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11969,
											"end": 11987,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11962,
											"end": 11992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F742066696E697368206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12008,
											"end": 12026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12001,
											"end": 12048,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12065,
											"end": 12083,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11748,
											"end": 12089,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12917,
											"end": 12998,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13029,
											"end": 13035,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13118,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13112,
											"end": 13127,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13011,
											"end": 13026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13084,
											"end": 13128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 13084,
											"end": 13128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13084,
											"end": 13128,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 13084,
											"end": 13128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13183,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13177,
											"end": 13192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13128,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13046,
											"end": 13128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13139,
											"end": 13200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13139,
											"end": 13200,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13139,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 13139,
											"end": 13200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13139,
											"end": 13200,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 13139,
											"end": 13200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 13213,
											"end": 13247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13256,
											"end": 13260,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13256,
											"end": 13260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13263,
											"end": 13273,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13263,
											"end": 13273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13275,
											"end": 13285,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13275,
											"end": 13285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13287,
											"end": 13288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13287,
											"end": 13288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 13213,
											"end": 13293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13315,
											"end": 13325,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13315,
											"end": 13325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "PUSH",
											"source": 0,
											"value": "70EB43C4A8AE8C40502DCF22436C509C28D6FF421CF07C491BE56984BD987068"
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13309,
											"end": 13347,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 13355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 13355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 13355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 13355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12741,
											"end": 13355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12717,
											"end": 13355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10118,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10139,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10063,
											"end": 10070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10113,
											"end": 10144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10177,
											"end": 10178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10161,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10161,
											"end": 10198,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 10109,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10233,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10322,
											"end": 10346,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10260,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10262,
											"end": 10294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10296,
											"end": 10320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10002,
											"end": 10355,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14633,
											"end": 14641,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14633,
											"end": 14656,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14564,
											"end": 14664,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9836,
											"end": 9843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9864,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9885,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9859,
											"end": 9890,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9769,
											"end": 9994,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 9855,
											"end": 9927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9949,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9970,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9973,
											"end": 9986,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 9944,
											"end": 9986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 8991,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8985,
											"end": 9011,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9013,
											"end": 9016,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8954,
											"end": 8984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 8954,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 9028,
											"end": 9078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9079,
											"end": 9089,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9079,
											"end": 9089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9099,
											"end": 9103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9111,
											"end": 9118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9028,
											"end": 9123,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8793,
											"end": 9131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14530,
											"end": 14539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14530,
											"end": 14548,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14464,
											"end": 14556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14854,
											"end": 14867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14854,
											"end": 14878,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14782,
											"end": 14886,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14432,
											"end": 14442,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14448,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14368,
											"end": 14456,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14016,
											"end": 14041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14049,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14044,
											"end": 14053,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14064,
											"end": 14074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14064,
											"end": 14080,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14118,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14095,
											"end": 14118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14123,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14095,
											"end": 14123,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14091,
											"end": 14353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14091,
											"end": 14353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14155,
											"end": 14174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14154,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14178,
											"end": 14179,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14140,
											"end": 14179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14140,
											"end": 14179,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14209,
											"end": 14227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14232,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14194,
											"end": 14232,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14282,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 14262,
											"end": 14282,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14262,
											"end": 14282,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14283,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14283,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14247,
											"end": 14287,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14336,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14337,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14337,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14340,
											"end": 14341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14302,
											"end": 14341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14302,
											"end": 14341,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14091,
											"end": 14353,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 14091,
											"end": 14353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14005,
											"end": 14360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13947,
											"end": 14360,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10510,
											"end": 10520,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10480,
											"end": 10501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10509,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10504,
											"end": 10521,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10540,
											"end": 10564,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12936,
											"end": 12938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12918,
											"end": 12939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12975,
											"end": 12977,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12955,
											"end": 12973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12948,
											"end": 12978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13041,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C79206272656564206F6E636520617420612074696D6500000000000000"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12994,
											"end": 13012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12987,
											"end": 13042,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13059,
											"end": 13077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 12734,
											"end": 13083,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 10532,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10672,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10658,
											"end": 10686,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10613,
											"end": 10686,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59481B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13088,
											"end": 13422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 10605,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10779,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10765,
											"end": 10793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10762,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10720,
											"end": 10793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13290,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13272,
											"end": 13293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13329,
											"end": 13331,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13309,
											"end": 13327,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13302,
											"end": 13332,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151A5B59481B1A5B5A5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13348,
											"end": 13366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13341,
											"end": 13381,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13398,
											"end": 13416,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 13088,
											"end": 13422,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 10712,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10911,
											"end": 10920,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 10821,
											"end": 10931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10829,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 10871,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10861,
											"end": 10871,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10886,
											"end": 10896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10821,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 10821,
											"end": 10931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10821,
											"end": 10931,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 10821,
											"end": 10931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10942,
											"end": 10981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 10981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 10981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 10981,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 10942,
											"end": 10981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11002,
											"end": 11006,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11002,
											"end": 11006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11017,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11017,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11019,
											"end": 11020,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11019,
											"end": 11020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 10942,
											"end": 11025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11075,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11075,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11075,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11075,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 11036,
											"end": 11075,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11076,
											"end": 11086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11103,
											"end": 11111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 11036,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11162,
											"end": 11177,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11159,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11140,
											"end": 11159,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11177,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11140,
											"end": 11177,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11228,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11239,
											"end": 11256,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11267,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11239,
											"end": 11267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11278,
											"end": 11318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": 11329,
											"end": 11346,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11357,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11329,
											"end": 11357,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11445,
											"end": 11454,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13631,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13631,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13631,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13612,
											"end": 13631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11433,
											"end": 11443,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13669,
											"end": 13671,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13665,
											"end": 13680,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13661,
											"end": 13714,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13640,
											"end": 13715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13731,
											"end": 13743,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13724,
											"end": 13752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11460,
											"end": 11463,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 11460,
											"end": 11463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13768,
											"end": 13780,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 13768,
											"end": 13780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11399,
											"end": 11455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11389,
											"end": 11456,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11457,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 11384,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11370,
											"end": 11463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11370,
											"end": 11463,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11474,
											"end": 11483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11474,
											"end": 11485,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11498,
											"end": 11513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11559,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 11554,
											"end": 11559,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11545,
											"end": 11559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11586,
											"end": 11605,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11586,
											"end": 11605,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11586,
											"end": 11605,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 11542,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11637,
											"end": 11642,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 11637,
											"end": 11642,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11642,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11642,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11655,
											"end": 11660,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 11655,
											"end": 11660,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11646,
											"end": 11660,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 11627,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 11623,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11738,
											"end": 11743,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 11738,
											"end": 11743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11743,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11743,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11756,
											"end": 11761,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 11756,
											"end": 11761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11753,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11747,
											"end": 11761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 11728,
											"end": 11761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11788,
											"end": 11808,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11788,
											"end": 11808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11788,
											"end": 11808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11870,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11851,
											"end": 11870,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11851,
											"end": 11870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 11724,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11898,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11892,
											"end": 11898,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11898,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11892,
											"end": 11908,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11937,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11919,
											"end": 11966,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 11995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12023,
											"end": 12024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11977,
											"end": 12024,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12086,
											"end": 12095,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12086,
											"end": 12095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12113,
											"end": 12130,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12113,
											"end": 12130,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12113,
											"end": 12130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12149,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12132,
											"end": 12149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12132,
											"end": 12149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12086,
											"end": 12111,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12059,
											"end": 12084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12047,
											"end": 12057,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12047,
											"end": 12057,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "E399CB3F10D63D6491D8CD021AEC1FD1690F49C5FF42AFE1002D5C4C07B63B60"
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14375,
											"end": 14377,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14353,
											"end": 14387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14307,
											"end": 14309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14292,
											"end": 14310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14292,
											"end": 14310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14145,
											"end": 14393,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12150,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10469,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10363,
											"end": 12158,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13480,
											"end": 13939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13560,
											"end": 13574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13583,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13603,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13577,
											"end": 13610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13648,
											"end": 13669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13621,
											"end": 13669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13621,
											"end": 13669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13685,
											"end": 13694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13704,
											"end": 13710,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13700,
											"end": 13710,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13745,
											"end": 13746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13732,
											"end": 13739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13740,
											"end": 13741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13742,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13732,
											"end": 13746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13712,
											"end": 13715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 13680,
											"end": 13758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13768,
											"end": 13818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13853,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13847,
											"end": 13873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1759616B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13818,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 13768,
											"end": 13818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13832,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 13828,
											"end": 13832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13845,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13835,
											"end": 13845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13882,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13875,
											"end": 13882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13911,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13905,
											"end": 13931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13898,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 13898,
											"end": 13931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13898,
											"end": 13931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 13898,
											"end": 13931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12242,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12202,
											"end": 12223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12231,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12281,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12262,
											"end": 12281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12262,
											"end": 12286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11605,
											"end": 11607,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11587,
											"end": 11608,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11624,
											"end": 11642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11617,
											"end": 11647,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F74207374617274206D6174696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11656,
											"end": 11702,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11719,
											"end": 11737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 11403,
											"end": 11743,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 12254,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12400,
											"end": 12417,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12417,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12400,
											"end": 12417,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12372,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 12320,
											"end": 12372,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12381,
											"end": 12385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12388,
											"end": 12398,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12388,
											"end": 12398,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12329,
											"end": 12354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 12320,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12533,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79212195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12488,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 12436,
											"end": 12488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 12497,
											"end": 12501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12514,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12504,
											"end": 12514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12445,
											"end": 12470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 12436,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12574,
											"end": 12575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12552,
											"end": 12571,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12552,
											"end": 12571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12552,
											"end": 12575,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12646,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12664,
											"end": 12681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12681,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12683,
											"end": 12700,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12683,
											"end": 12700,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12683,
											"end": 12700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12683,
											"end": 12700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12637,
											"end": 12662,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12610,
											"end": 12635,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12598,
											"end": 12608,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12598,
											"end": 12608,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "9C625EE4C8BE2EB2762502530F265AD033D6ED61845F91EA555A4A271E73EE9D"
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14319,
											"end": 14344,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14375,
											"end": 14377,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14360,
											"end": 14378,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14353,
											"end": 14387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14307,
											"end": 14309,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14292,
											"end": 14310,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14292,
											"end": 14310,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14145,
											"end": 14393,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12591,
											"end": 12701,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12166,
											"end": 12709,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15839,
											"end": 15860,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15896,
											"end": 15898,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15869,
											"end": 15899,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15935,
											"end": 15969,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 15915,
											"end": 15933,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15915,
											"end": 15933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15915,
											"end": 15933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15908,
											"end": 15970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15986,
											"end": 16004,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15986,
											"end": 16004,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 16004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 16015,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16032,
											"end": 16051,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16032,
											"end": 16051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 15655,
											"end": 16057,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16264,
											"end": 16266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16246,
											"end": 16267,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16303,
											"end": 16305,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16283,
											"end": 16301,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16283,
											"end": 16301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16283,
											"end": 16301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16276,
											"end": 16306,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16376,
											"name": "PUSH",
											"source": 13,
											"value": "4172726179466F7255696E743235363A20696E646578206F7574206F6620626F"
										},
										{
											"begin": 16322,
											"end": 16340,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16322,
											"end": 16340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16322,
											"end": 16340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16315,
											"end": 16377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16393,
											"end": 16411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16386,
											"end": 16420,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16437,
											"end": 16456,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16437,
											"end": 16456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 16062,
											"end": 16462,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16857,
											"end": 16872,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16872,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16857,
											"end": 16872,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16839,
											"end": 16873,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16909,
											"end": 16924,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16909,
											"end": 16924,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 16907,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16889,
											"end": 16907,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16889,
											"end": 16907,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16882,
											"end": 16925,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 16959,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16941,
											"end": 16959,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 16959,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16941,
											"end": 16959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 16968,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 16968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16934,
											"end": 16968,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16774,
											"end": 16792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1077,
											"end": 1145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1070,
											"end": 1075,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1050,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 1050,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 912,
											"end": 1153,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 3207,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3649,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3680,
											"end": 3684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 3652,
											"end": 3679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 3652,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3721,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3731,
											"end": 3907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3819,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17463,
											"end": 17465,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17445,
											"end": 17466,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17502,
											"end": 17504,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 17482,
											"end": 17500,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17482,
											"end": 17500,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17482,
											"end": 17500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17475,
											"end": 17505,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17541,
											"end": 17575,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17521,
											"end": 17539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17514,
											"end": 17576,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD081CDD58D8D95959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17592,
											"end": 17610,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17592,
											"end": 17610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17592,
											"end": 17610,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17585,
											"end": 17625,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17642,
											"end": 17661,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 17642,
											"end": 17661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 17261,
											"end": 17667,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3729,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3678,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 3678,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3671,
											"end": 3730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3671,
											"end": 3730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3737,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4766,
											"end": 4778,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4823,
											"end": 4828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4819,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4828,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4798,
											"end": 4828,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 17874,
											"end": 17876,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17856,
											"end": 17877,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17913,
											"end": 17915,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17893,
											"end": 17911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17886,
											"end": 17916,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17952,
											"end": 17986,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 17932,
											"end": 17950,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17932,
											"end": 17950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17932,
											"end": 17950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17925,
											"end": 17987,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C8818D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18003,
											"end": 18021,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 18003,
											"end": 18021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18003,
											"end": 18021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17996,
											"end": 18032,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18049,
											"end": 18068,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 18049,
											"end": 18068,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 17672,
											"end": 18074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "tag",
											"source": 8,
											"value": "419"
										},
										{
											"begin": 4790,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1107,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 18281,
											"end": 18283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 18263,
											"end": 18284,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18320,
											"end": 18322,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18300,
											"end": 18318,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18293,
											"end": 18323,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18359,
											"end": 18390,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 18339,
											"end": 18357,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 18339,
											"end": 18357,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18339,
											"end": 18357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18332,
											"end": 18391,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18408,
											"end": 18426,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 18408,
											"end": 18426,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 18079,
											"end": 18432,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 4881,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4953,
											"end": 4965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4967,
											"end": 4990,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4994,
											"end": 5005,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5018,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5020,
											"end": 5024,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4994,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 5025,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5080,
											"end": 5092,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 5042,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5035,
											"end": 5093,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 5100,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 7214,
											"end": 7906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7360,
											"end": 7372,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7388,
											"end": 7395,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7418,
											"end": 7428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 7411,
											"end": 7428,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 7384,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7546,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7529,
											"end": 7550,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7723,
											"end": 7733,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7717,
											"end": 7734,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7770,
											"end": 7780,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7768,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7755,
											"end": 7799,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 7525,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 7855,
											"end": 7875,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "354"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "445"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "446"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 761,
											"end": 767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 777,
											"end": 783,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 838,
											"end": 841,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 826,
											"end": 835,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 817,
											"end": 824,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 809,
											"end": 842,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 855,
											"end": 856,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 845,
											"end": 857,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 806,
											"end": 859,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 806,
											"end": 859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 897,
											"end": 906,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 878,
											"end": 907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 878,
											"end": 907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 868,
											"end": 907,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 868,
											"end": 907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 949,
											"end": 958,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 945,
											"end": 963,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 926,
											"end": 964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 916,
											"end": 964,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 916,
											"end": 964,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 1017,
											"end": 1019,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1006,
											"end": 1015,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1002,
											"end": 1020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 983,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 1040,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1030,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 675,
											"end": 1084,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1556,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1564,
											"end": 1570,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1572,
											"end": 1578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1627,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1622,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1611,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1600,
											"end": 1623,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1596,
											"end": 1628,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1643,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 1593,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1664,
											"end": 1687,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1734,
											"end": 1736,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1706,
											"end": 1738,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1479,
											"end": 1795,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1883,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1934,
											"end": 1943,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1944,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1949,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1963,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1960,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 1914,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 2004,
											"end": 2013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 1985,
											"end": 2014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1975,
											"end": 2014,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2112,
											"end": 2114,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1800,
											"end": 2122,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2127,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 2127,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2192,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2239,
											"end": 2241,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2237,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2210,
											"end": 2242,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2255,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2253,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2245,
											"end": 2257,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 2207,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2297,
											"end": 2306,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 2278,
											"end": 2307,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2770,
											"end": 2897,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 2770,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2831,
											"end": 2841,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 2826,
											"end": 2829,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2822,
											"end": 2842,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2852,
											"end": 2867,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2890,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2876,
											"end": 2891,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2973,
											"end": 2975,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3038,
											"end": 3040,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3042,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3092,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3116,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3117,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3052,
											"end": 3140,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 3120,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3149,
											"end": 3171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 3177,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3182,
											"end": 3894,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 3182,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3236,
											"end": 3241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3286,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3274,
											"end": 3280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3270,
											"end": 3287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3266,
											"end": 3293,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3307,
											"end": 3308,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3309,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 3256,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3330,
											"end": 3350,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3369,
											"end": 3373,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3392,
											"end": 3410,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3388,
											"end": 3390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3385,
											"end": 3411,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3382,
											"end": 3434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 3414,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3462,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3457,
											"end": 3458,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3453,
											"end": 3463,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3507,
											"end": 3509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 3483,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3545,
											"end": 3560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3630,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3635,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3647,
											"end": 3662,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3673,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3665,
											"end": 3677,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 3644,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3699,
											"end": 3714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 3745,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3734,
											"end": 3737,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3746,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3822,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3805,
											"end": 3822,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3756,
											"end": 3768,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3843,
											"end": 3855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 3723,
											"end": 3865,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4026,
											"end": 4032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4034,
											"end": 4040,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4097,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4083,
											"end": 4092,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4093,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4098,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4109,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 4063,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4153,
											"end": 4162,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 4134,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4163,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4163,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4212,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4186,
											"end": 4218,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4255,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4278,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4267,
											"end": 4281,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4292,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 4264,
											"end": 4298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4370,
											"end": 4377,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4361,
											"end": 4367,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4359,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4346,
											"end": 4368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 4317,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4378,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4403,
											"end": 4435,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4435,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4460,
											"end": 4462,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4450,
											"end": 4458,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4463,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4476,
											"end": 4477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4473,
											"end": 4474,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4478,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4444,
											"end": 4480,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4554,
											"end": 4561,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4543,
											"end": 4551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4541,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 4499,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4489,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 4568,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4861,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4910,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4896,
											"end": 4905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4887,
											"end": 4894,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4879,
											"end": 4911,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4924,
											"end": 4925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4922,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4914,
											"end": 4926,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 4876,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4947,
											"end": 4970,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4947,
											"end": 4970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4796,
											"end": 4976,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5057,
											"end": 5063,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5098,
											"end": 5107,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5096,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5085,
											"end": 5108,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5081,
											"end": 5113,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5126,
											"end": 5127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5124,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5116,
											"end": 5128,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 5078,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5168,
											"end": 5177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 5149,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5178,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5231,
											"end": 5233,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5229,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 5197,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5187,
											"end": 5235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 5241,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6078,
											"end": 6081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6075,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6063,
											"end": 6069,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6082,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6086,
											"end": 6098,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 6045,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6132,
											"end": 6138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6119,
											"end": 6139,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6176,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 6148,
											"end": 6200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 6180,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 6267,
											"end": 6269,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6248,
											"end": 6261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6244,
											"end": 6271,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 6224,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6304,
											"end": 6306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6295,
											"end": 6302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6307,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6350,
											"end": 6353,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6343,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6330,
											"end": 6336,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6354,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6364,
											"end": 6365,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6369,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 6316,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6423,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6397,
											"end": 6404,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6393,
											"end": 6411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6380,
											"end": 6435,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 6480,
											"end": 6481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6455,
											"end": 6471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6473,
											"end": 6477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6451,
											"end": 6478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6444,
											"end": 6482,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6466,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5983,
											"end": 6513,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6696,
											"end": 6702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6760,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6745,
											"end": 6754,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6736,
											"end": 6743,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6732,
											"end": 6755,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6728,
											"end": 6761,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "tag",
											"source": 13,
											"value": "517"
										},
										{
											"begin": 6725,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6816,
											"end": 6825,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 6797,
											"end": 6826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6826,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6787,
											"end": 6826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6879,
											"end": 6881,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6877,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 6845,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6883,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6883,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6923,
											"end": 6932,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6919,
											"end": 6937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6906,
											"end": 6938,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6998,
											"end": 7000,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7001,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7016,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 6984,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 7090,
											"end": 7097,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7081,
											"end": 7087,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7070,
											"end": 7079,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 7066,
											"end": 7088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 7037,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7098,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7151,
											"end": 7153,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7140,
											"end": 7149,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7136,
											"end": 7154,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7123,
											"end": 7155,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7107,
											"end": 7155,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7180,
											"end": 7182,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7183,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7196,
											"end": 7197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7186,
											"end": 7198,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 7164,
											"end": 7200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7263,
											"end": 7271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7252,
											"end": 7261,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 7248,
											"end": 7272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 7219,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7282,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7320,
											"end": 7339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7307,
											"end": 7340,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7352,
											"end": 7368,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7383,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7436,
											"end": 7444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7425,
											"end": 7434,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7421,
											"end": 7445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 7404,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6518,
											"end": 7461,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7767,
											"end": 7773,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7783,
											"end": 7789,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7836,
											"end": 7839,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7824,
											"end": 7833,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7815,
											"end": 7822,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7811,
											"end": 7834,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7807,
											"end": 7840,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7853,
											"end": 7854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7850,
											"end": 7851,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 7855,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 7804,
											"end": 7857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7895,
											"end": 7904,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 7876,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7905,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7866,
											"end": 7905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 7958,
											"end": 7960,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7947,
											"end": 7956,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7943,
											"end": 7961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7962,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7914,
											"end": 7962,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7994,
											"end": 8012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7994,
											"end": 8012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7981,
											"end": 8013,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8060,
											"end": 8062,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8045,
											"end": 8063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8064,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8064,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 8070,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8075,
											"end": 8681,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 8075,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8185,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8193,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8203,
											"end": 8209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8211,
											"end": 8217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8252,
											"end": 8261,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8243,
											"end": 8250,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8239,
											"end": 8262,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8235,
											"end": 8268,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8281,
											"end": 8282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8278,
											"end": 8279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8271,
											"end": 8283,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 8232,
											"end": 8285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 8323,
											"end": 8332,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 8304,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8294,
											"end": 8333,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8294,
											"end": 8333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 8352,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8390,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8437,
											"end": 8439,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8426,
											"end": 8435,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8409,
											"end": 8441,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8441,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8441,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8488,
											"end": 8490,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8477,
											"end": 8486,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8473,
											"end": 8491,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8492,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8450,
											"end": 8492,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8450,
											"end": 8492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8543,
											"end": 8546,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8532,
											"end": 8541,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8515,
											"end": 8548,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8563,
											"end": 8569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8560,
											"end": 8590,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8601,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8593,
											"end": 8605,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 8557,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 8667,
											"end": 8674,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8647,
											"end": 8656,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8643,
											"end": 8665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 8626,
											"end": 8675,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8888,
											"end": 8890,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8907,
											"end": 8925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8900,
											"end": 8930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8966,
											"end": 9000,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8961,
											"end": 8963,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 8964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8939,
											"end": 9001,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9035,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8686,
											"end": 9042,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9401,
											"end": 9528,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9401,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9462,
											"end": 9472,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9457,
											"end": 9460,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9453,
											"end": 9473,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9497,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9483,
											"end": 9498,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9514,
											"end": 9515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9522,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9573,
											"end": 9576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9604,
											"end": 9605,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9600,
											"end": 9606,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9594,
											"end": 9607,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 9591,
											"end": 9630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 9610,
											"end": 9628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9533,
											"end": 9661,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9706,
											"end": 9710,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9731,
											"end": 9732,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 9736,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 9725,
											"end": 9759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 9739,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9791,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9796,
											"end": 9923,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 9796,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9857,
											"end": 9867,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9848,
											"end": 9868,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9838,
											"end": 9869,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9888,
											"end": 9892,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9885,
											"end": 9886,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9878,
											"end": 9893,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9912,
											"end": 9916,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9909,
											"end": 9910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9917,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9967,
											"end": 9970,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9995,
											"end": 10000,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9985,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 9985,
											"end": 10024,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 10004,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 10064,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10122,
											"end": 10125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10154,
											"end": 10166,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10187,
											"end": 10193,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10185,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10194,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10217,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10233,
											"end": 10245,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10226,
											"end": 10245,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10226,
											"end": 10245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10272,
											"end": 10277,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10268,
											"end": 10282,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10324,
											"end": 10330,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10331,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10385,
											"end": 10398,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 10373,
											"end": 10399,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10419,
											"end": 10431,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10454,
											"end": 10469,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10346,
											"end": 10347,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10339,
											"end": 10348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 10310,
											"end": 10479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10498,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10069,
											"end": 10504,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10960,
											"end": 10975,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10976,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10976,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11012,
											"end": 11027,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11007,
											"end": 11009,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10992,
											"end": 11010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10985,
											"end": 11028,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10922,
											"end": 10925,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 11059,
											"end": 11061,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11044,
											"end": 11062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11037,
											"end": 11068,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10885,
											"end": 10889,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11147,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11128,
											"end": 11147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11120,
											"end": 11126,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 11091,
											"end": 11148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11188,
											"end": 11194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11184,
											"end": 11206,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11179,
											"end": 11181,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11168,
											"end": 11177,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11164,
											"end": 11182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11157,
											"end": 11207,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 11267,
											"end": 11273,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 11230,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11311,
											"end": 11333,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11305,
											"end": 11308,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11290,
											"end": 11309,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11283,
											"end": 11334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11358,
											"end": 11359,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11343,
											"end": 11360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11377,
											"end": 11392,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11377,
											"end": 11392,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10509,
											"end": 11398,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12453,
											"end": 12468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12435,
											"end": 12469,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12505,
											"end": 12520,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12500,
											"end": 12502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12485,
											"end": 12503,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12485,
											"end": 12503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12478,
											"end": 12521,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12552,
											"end": 12554,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12530,
											"end": 12564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12595,
											"end": 12597,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12580,
											"end": 12598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12573,
											"end": 12607,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12415,
											"end": 12418,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12623,
											"end": 12642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12648,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12378,
											"end": 12382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12664,
											"end": 12683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12719,
											"end": 12722,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12704,
											"end": 12723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12729,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13791,
											"end": 14000,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 13791,
											"end": 14000,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13823,
											"end": 13824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13850,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13839,
											"end": 13971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 13839,
											"end": 13971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13893,
											"end": 13903,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 13888,
											"end": 13891,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13884,
											"end": 13904,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13874,
											"end": 13905,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13928,
											"end": 13932,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 13925,
											"end": 13926,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13918,
											"end": 13933,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13956,
											"end": 13960,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13953,
											"end": 13954,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13946,
											"end": 13961,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13839,
											"end": 13971,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 13839,
											"end": 13971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13985,
											"end": 13994,
											"name": "MOD",
											"source": 13
										},
										{
											"begin": 13985,
											"end": 13994,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13791,
											"end": 14000,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14005,
											"end": 14140,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 14005,
											"end": 14140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14047,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14065,
											"end": 14082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14062,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 14062,
											"end": 14105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14085,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 14085,
											"end": 14103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 14085,
											"end": 14103,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14085,
											"end": 14103,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 14085,
											"end": 14103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14132,
											"end": 14133,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 14121,
											"end": 14134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14121,
											"end": 14134,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14005,
											"end": 14140,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14398,
											"end": 15650,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 14398,
											"end": 15650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14888,
											"end": 14903,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14870,
											"end": 14904,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14870,
											"end": 14904,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 14976,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 14976,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 14925,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14977,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14977,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14977,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14934,
											"end": 14977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 14822,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 15008,
											"end": 15010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14993,
											"end": 15011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15017,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14986,
											"end": 15017,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15066,
											"end": 15079,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15066,
											"end": 15079,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14804,
											"end": 14823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14804,
											"end": 14823,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14804,
											"end": 14823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15088,
											"end": 15110,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15088,
											"end": 15110,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15088,
											"end": 15110,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15154,
											"end": 15171,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15154,
											"end": 15171,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15154,
											"end": 15171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15210,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15210,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15194,
											"end": 15210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15144,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 15126,
											"end": 15145,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15126,
											"end": 15145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15126,
											"end": 15145,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14923,
											"end": 14925,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15252,
											"end": 15258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15249,
											"end": 15250,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15246,
											"end": 15259,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15313,
											"end": 15326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15313,
											"end": 15326,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15327,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15394,
											"end": 15395,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15382,
											"end": 15396,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15382,
											"end": 15396,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15382,
											"end": 15396,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15382,
											"end": 15396,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15347,
											"end": 15359,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15347,
											"end": 15359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15347,
											"end": 15359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15347,
											"end": 15359,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15267,
											"end": 15276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 15238,
											"end": 15406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15242,
											"end": 15245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15242,
											"end": 15245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15451,
											"end": 15460,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15446,
											"end": 15449,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15442,
											"end": 15461,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15437,
											"end": 15439,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15426,
											"end": 15435,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15422,
											"end": 15440,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15415,
											"end": 15462,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 15522,
											"end": 15525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15514,
											"end": 15520,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 15485,
											"end": 15526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15563,
											"end": 15585,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15557,
											"end": 15560,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15542,
											"end": 15561,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15542,
											"end": 15561,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 15542,
											"end": 15561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15586,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15586,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15586,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15535,
											"end": 15586,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15610,
											"end": 15611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15595,
											"end": 15612,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15595,
											"end": 15612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15629,
											"end": 15644,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 14398,
											"end": 15650,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14398,
											"end": 15650,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 16467,
											"end": 16594,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 16467,
											"end": 16594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16528,
											"end": 16538,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 16523,
											"end": 16526,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 16519,
											"end": 16539,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16516,
											"end": 16517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16509,
											"end": 16540,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16559,
											"end": 16563,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 16556,
											"end": 16557,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 16549,
											"end": 16564,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16583,
											"end": 16587,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16580,
											"end": 16581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16588,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16979,
											"end": 17256,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 16979,
											"end": 17256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17046,
											"end": 17052,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17101,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17087,
											"end": 17096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17078,
											"end": 17085,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17074,
											"end": 17097,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17070,
											"end": 17102,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 17067,
											"end": 17119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17067,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 17067,
											"end": 17119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17115,
											"end": 17116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17112,
											"end": 17113,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17105,
											"end": 17117,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17067,
											"end": 17119,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 17067,
											"end": 17119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17156,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17141,
											"end": 17157,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 17200,
											"end": 17205,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17193,
											"end": 17206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17207,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17179,
											"end": 17184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17176,
											"end": 17208,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17166,
											"end": 17226,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 17166,
											"end": 17226,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17222,
											"end": 17223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17219,
											"end": 17220,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 17212,
											"end": 17224,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18437,
											"end": 18695,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 18437,
											"end": 18695,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18509,
											"end": 18510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18533,
											"end": 18539,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18530,
											"end": 18531,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18527,
											"end": 18540,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18609,
											"end": 18620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18603,
											"end": 18621,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18590,
											"end": 18601,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18590,
											"end": 18601,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18590,
											"end": 18601,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18583,
											"end": 18622,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18555,
											"end": 18557,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18548,
											"end": 18558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 18519,
											"end": 18632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18650,
											"end": 18656,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18647,
											"end": 18648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 18657,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18641,
											"end": 18689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18641,
											"end": 18689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 18641,
											"end": 18689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18685,
											"end": 18686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18667,
											"end": 18683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18667,
											"end": 18683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18660,
											"end": 18687,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18437,
											"end": 18695,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 18700,
											"end": 18974,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 18700,
											"end": 18974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18829,
											"end": 18832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18867,
											"end": 18873,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18861,
											"end": 18874,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18883,
											"end": 18936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 18929,
											"end": 18935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18924,
											"end": 18927,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18917,
											"end": 18921,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18909,
											"end": 18915,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18905,
											"end": 18922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18883,
											"end": 18936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 18883,
											"end": 18936,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 18883,
											"end": 18936,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 18883,
											"end": 18936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18952,
											"end": 18968,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18700,
											"end": 18974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18700,
											"end": 18974,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 18979,
											"end": 19362,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 18979,
											"end": 19362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19128,
											"end": 19130,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19117,
											"end": 19126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19110,
											"end": 19131,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19091,
											"end": 19095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19160,
											"end": 19166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19154,
											"end": 19167,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 19203,
											"end": 19209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 19198,
											"end": 19200,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19187,
											"end": 19196,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19183,
											"end": 19201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19176,
											"end": 19210,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 19278,
											"end": 19284,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19273,
											"end": 19275,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19262,
											"end": 19271,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19258,
											"end": 19276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19253,
											"end": 19255,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19245,
											"end": 19251,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19241,
											"end": 19256,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19219,
											"end": 19285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 19219,
											"end": 19285,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19219,
											"end": 19285,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 19219,
											"end": 19285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19346,
											"end": 19348,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 19325,
											"end": 19340,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19321,
											"end": 19350,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19351,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19353,
											"end": 19355,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19302,
											"end": 19356,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19302,
											"end": 19356,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18979,
											"end": 19362,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18979,
											"end": 19362,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"JPDA1()": "1df0c04c",
							"JPDA2()": "ec3c6dee",
							"JPDA3()": "ed9371d7",
							"addNFTBatch(address,uint256[],uint256[])": "63c66891",
							"addNftBatchWithNumber(address,uint256,uint256)": "4b02218f",
							"cancel()": "ea8a1af0",
							"claim()": "4e71d92d",
							"feeToken()": "647846a5",
							"getFeeMintAddress()": "19b8094b",
							"getUserMatingNft(address)": "5c39331c",
							"getUserOvipositionTime(address)": "5dbc3838",
							"mating(address,address,uint256,uint256)": "bf90fc1e",
							"nftCount(address)": "c971ebb3",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setBreedInterval(uint256)": "79c5e977",
							"setConfig(address,address,address,address)": "087bc228",
							"setFeeAddress(address)": "8705fcd4",
							"setFeeAmount(uint256)": "6b392680",
							"setFeeMintAddress(address)": "5dada3bb",
							"setJPDA(uint256,uint256,uint256)": "3f3ed4ca",
							"setNFT(address,address)": "9fdd3a3f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"urgentWithdraw(address)": "c4091443",
							"users(address)": "a87430ba"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"Mating\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"JPDA1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPDA2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"JPDA3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addNFTBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"addNftBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeMintAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserMatingNft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserOvipositionTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftContractB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenIdB\",\"type\":\"uint256\"}],\"name\":\"mating\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"name\":\"setBreedInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"luckybeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"hashbeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"knightbeeMint\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"queenbeeMint\",\"type\":\"address\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mint\",\"type\":\"address\"}],\"name\":\"setFeeMintAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_JPDA1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_JPDA2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_JPDA3\",\"type\":\"uint256\"}],\"name\":\"setJPDA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"setNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"urgentWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Breed.NftInfo\",\"name\":\"nftA\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct Breed.NftInfo\",\"name\":\"nftB\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"t\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"Breed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x6f7e52a9c8b6443331ed1ab4c0b0033c226ee72925b8c2e031fe6831d7e7660e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31312825ac723661080b299478706e2e4683a4e28921a24bb0e9667c8051d3de\",\"dweb:/ipfs/Qmbz2iXyYumSE4QDHhUzVJ64EwGvFdaoMN8VCg2hsDJpma\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1858,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 884,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "breedInterval",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 887,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)2281"
							},
							{
								"astId": 889,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 891,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "feeAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 894,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "randNonce",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 896,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "luckybeeMintAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 898,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "hashbeeMintAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 900,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "knightbeeMintAddress",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							},
							{
								"astId": 902,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "queenbeeMintAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 905,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA1",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 908,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA2",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 911,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "JPDA3",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 916,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "users",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_struct(UserInfo)881_storage)"
							},
							{
								"astId": 921,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "nftIds",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 925,
								"contract": "nft/NFTBreed.sol:Breed",
								"label": "breedTimeLimit",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)2281": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_struct(UserInfo)881_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Breed.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)881_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(NftInfo)864_storage": {
								"encoding": "inplace",
								"label": "struct Breed.NftInfo",
								"members": [
									{
										"astId": 861,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 863,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(UserInfo)881_storage": {
								"encoding": "inplace",
								"label": "struct Breed.UserInfo",
								"members": [
									{
										"astId": 867,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftA",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(NftInfo)864_storage"
									},
									{
										"astId": 870,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftB",
										"offset": 0,
										"slot": "2",
										"type": "t_struct(NftInfo)864_storage"
									},
									{
										"astId": 872,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "t",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									},
									{
										"astId": 874,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "startTimestamp",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 880,
										"contract": "nft/NFTBreed.sol:Breed",
										"label": "nftBreedTimes",
										"offset": 0,
										"slot": "6",
										"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
									}
								],
								"numberOfBytes": "224"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibArrayForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":2267:6644  library LibArrayForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":2267:6644  library LibArrayForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ed718eeaae066be9634f4dc5b3b33498f9f339386a0d8563230caeb8ffc0dd364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ed718eeaae066be9634f4dc5b3b33498f9f339386a0d8563230caeb8ffc0dd364736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xD7 XOR 0xEE 0xAA 0xE0 PUSH7 0xBE9634F4DC5B3B CALLER 0x49 DUP16 SWAP16 CALLER SWAP4 DUP7 LOG0 0xD8 JUMP ORIGIN ADDRESS 0xCA 0xEB DUP16 0xFC 0xD 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2267:4377:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ed718eeaae066be9634f4dc5b3b33498f9f339386a0d8563230caeb8ffc0dd364736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xD7 XOR 0xEE 0xAA 0xE0 PUSH7 0xBE9634F4DC5B3B CALLER 0x49 DUP16 SWAP16 CALLER SWAP4 DUP7 LOG0 0xD8 JUMP ORIGIN ADDRESS 0xCA 0xEB DUP16 0xFC 0xD 0xD3 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"addValue(uint256[] storage pointer,uint256)": "infinite",
								"binarySearch(uint256[] storage pointer,uint256)": "infinite",
								"distinct(uint256[] storage pointer)": "infinite",
								"equals(uint256[] storage pointer,uint256[] storage pointer)": "infinite",
								"extend(uint256[] storage pointer,uint256[] memory)": "infinite",
								"firstIndexOf(uint256[] storage pointer,uint256)": "infinite",
								"max(uint256[] storage pointer)": "infinite",
								"min(uint256[] storage pointer)": "infinite",
								"removeByIndex(uint256[] storage pointer,uint256)": "infinite",
								"removeByValue(uint256[] storage pointer,uint256)": "infinite",
								"reverse(uint256[] storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ed718eeaae066be9634f4dc5b3b33498f9f339386a0d8563230caeb8ffc0dd364736f6c634300080d0033",
									".code": [
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"LibArrayForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x6f7e52a9c8b6443331ed1ab4c0b0033c226ee72925b8c2e031fe6831d7e7660e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31312825ac723661080b299478706e2e4683a4e28921a24bb0e9667c8051d3de\",\"dweb:/ipfs/Qmbz2iXyYumSE4QDHhUzVJ64EwGvFdaoMN8VCg2hsDJpma\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibSafeMathForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/NFTBreed.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/NFTBreed.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122018b8c9f531975b6d62133a93e6b212b58baa303bed116eab9c4372deb5f7161164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018b8c9f531975b6d62133a93e6b212b58baa303bed116eab9c4372deb5f7161164736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xB8 0xC9 CREATE2 BALANCE SWAP8 JUMPDEST PUSH14 0x62133A93E6B212B58BAA303BED11 PUSH15 0xAB9C4372DEB5F7161164736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;559:1704:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122018b8c9f531975b6d62133a93e6b212b58baa303bed116eab9c4372deb5f7161164736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR 0xB8 0xC9 CREATE2 BALANCE SWAP8 JUMPDEST PUSH14 0x62133A93E6B212B58BAA303BED11 PUSH15 0xAB9C4372DEB5F7161164736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"power(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122018b8c9f531975b6d62133a93e6b212b58baa303bed116eab9c4372deb5f7161164736f6c634300080d0033",
									".code": [
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/NFTBreed.sol\":\"LibSafeMathForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/NFTBreed.sol\":{\"keccak256\":\"0x6f7e52a9c8b6443331ed1ab4c0b0033c226ee72925b8c2e031fe6831d7e7660e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31312825ac723661080b299478706e2e4683a4e28921a24bb0e9667c8051d3de\",\"dweb:/ipfs/Qmbz2iXyYumSE4QDHhUzVJ64EwGvFdaoMN8VCg2hsDJpma\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1858,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":204:726  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      tag_7\n      calldatasize\n      0x04\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      shl(0xe0, 0xbc197c81)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n    tag_12:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":3449:3482   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3431:3483   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3419:3421   */\n      0x20\n        /* \"#utility.yul\":3404:3422   */\n      add\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":477:724  function onERC1155BatchReceived(... */\n      tag_10\n        /* \"#utility.yul\":3287:3489   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":252:471  function onERC1155Received(... */\n    tag_5:\n      tag_12\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      shl(0xe0, 0xf23a6e61)\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":489:493  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:561  interfaceId == type(IERC1155Receiver).interfaceId */\n      dup3\n      and\n      shl(0xe5, 0x02711897)\n      eq\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":512:601  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      tag_25\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":565:601  super.supportsInterface(interfaceId) */\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":505:601  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":387:608  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_8:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_37:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_38:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:670   */\n    tag_30:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_41:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:802   */\n    tag_31:\n        /* \"#utility.yul\":736:746   */\n      0x4e487b71\n        /* \"#utility.yul\":731:734   */\n      0xe0\n        /* \"#utility.yul\":727:747   */\n      shl\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:748   */\n      mstore\n        /* \"#utility.yul\":767:771   */\n      0x41\n        /* \"#utility.yul\":764:765   */\n      0x04\n        /* \"#utility.yul\":757:772   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x24\n        /* \"#utility.yul\":788:789   */\n      0x00\n        /* \"#utility.yul\":781:796   */\n      revert\n        /* \"#utility.yul\":807:1082   */\n    tag_32:\n        /* \"#utility.yul\":878:880   */\n      0x40\n        /* \"#utility.yul\":872:881   */\n      mload\n        /* \"#utility.yul\":943:945   */\n      0x1f\n        /* \"#utility.yul\":924:937   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":920:947   */\n      and\n        /* \"#utility.yul\":908:948   */\n      dup2\n      add\n        /* \"#utility.yul\":978:996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":963:997   */\n      dup2\n      gt\n        /* \"#utility.yul\":999:1021   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":960:1022   */\n      or\n        /* \"#utility.yul\":957:1045   */\n      iszero\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1025:1043   */\n      tag_45\n      tag_31\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1061:1063   */\n      0x40\n        /* \"#utility.yul\":1054:1076   */\n      mstore\n        /* \"#utility.yul\":807:1082   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1087:1799   */\n    tag_33:\n        /* \"#utility.yul\":1141:1146   */\n      0x00\n        /* \"#utility.yul\":1194:1197   */\n      dup3\n        /* \"#utility.yul\":1187:1191   */\n      0x1f\n        /* \"#utility.yul\":1179:1185   */\n      dup4\n        /* \"#utility.yul\":1175:1192   */\n      add\n        /* \"#utility.yul\":1171:1198   */\n      slt\n        /* \"#utility.yul\":1161:1216   */\n      tag_47\n      jumpi\n        /* \"#utility.yul\":1212:1213   */\n      0x00\n        /* \"#utility.yul\":1209:1210   */\n      dup1\n        /* \"#utility.yul\":1202:1214   */\n      revert\n        /* \"#utility.yul\":1161:1216   */\n    tag_47:\n        /* \"#utility.yul\":1248:1254   */\n      dup2\n        /* \"#utility.yul\":1235:1255   */\n      calldataload\n        /* \"#utility.yul\":1274:1278   */\n      0x20\n        /* \"#utility.yul\":1297:1315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1293:1295   */\n      dup3\n        /* \"#utility.yul\":1290:1316   */\n      gt\n        /* \"#utility.yul\":1287:1339   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1319:1337   */\n      tag_49\n      tag_31\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1365:1367   */\n      dup2\n        /* \"#utility.yul\":1362:1363   */\n      0x05\n        /* \"#utility.yul\":1358:1368   */\n      shl\n        /* \"#utility.yul\":1388:1416   */\n      tag_50\n        /* \"#utility.yul\":1412:1414   */\n      dup3\n        /* \"#utility.yul\":1408:1410   */\n      dup3\n        /* \"#utility.yul\":1404:1415   */\n      add\n        /* \"#utility.yul\":1388:1416   */\n      tag_32\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1450:1465   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1520:1535   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":1516:1540   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":1481:1493   */\n      dup3\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1552:1567   */\n      dup8\n      dup6\n      gt\n        /* \"#utility.yul\":1549:1584   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1580:1581   */\n      0x00\n        /* \"#utility.yul\":1577:1578   */\n      dup1\n        /* \"#utility.yul\":1570:1582   */\n      revert\n        /* \"#utility.yul\":1549:1584   */\n    tag_51:\n        /* \"#utility.yul\":1616:1618   */\n      dup4\n        /* \"#utility.yul\":1608:1614   */\n      dup8\n        /* \"#utility.yul\":1604:1619   */\n      add\n        /* \"#utility.yul\":1593:1619   */\n      swap3\n      pop\n        /* \"#utility.yul\":1628:1770   */\n    tag_52:\n        /* \"#utility.yul\":1644:1650   */\n      dup5\n        /* \"#utility.yul\":1639:1642   */\n      dup4\n        /* \"#utility.yul\":1636:1651   */\n      lt\n        /* \"#utility.yul\":1628:1770   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":1710:1727   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1698:1728   */\n      dup3\n      mstore\n        /* \"#utility.yul\":1661:1673   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":1748:1760   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":1628:1770   */\n      jump(tag_52)\n    tag_54:\n        /* \"#utility.yul\":1788:1793   */\n      swap8\n        /* \"#utility.yul\":1087:1799   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1804:2334   */\n    tag_34:\n        /* \"#utility.yul\":1846:1851   */\n      0x00\n        /* \"#utility.yul\":1899:1902   */\n      dup3\n        /* \"#utility.yul\":1892:1896   */\n      0x1f\n        /* \"#utility.yul\":1884:1890   */\n      dup4\n        /* \"#utility.yul\":1880:1897   */\n      add\n        /* \"#utility.yul\":1876:1903   */\n      slt\n        /* \"#utility.yul\":1866:1921   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1914:1915   */\n      dup1\n        /* \"#utility.yul\":1907:1919   */\n      revert\n        /* \"#utility.yul\":1866:1921   */\n    tag_56:\n        /* \"#utility.yul\":1953:1959   */\n      dup2\n        /* \"#utility.yul\":1940:1960   */\n      calldataload\n        /* \"#utility.yul\":1979:1997   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1975:1977   */\n      dup2\n        /* \"#utility.yul\":1972:1998   */\n      gt\n        /* \"#utility.yul\":1969:2021   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":2001:2019   */\n      tag_58\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2045:2100   */\n      tag_59\n        /* \"#utility.yul\":2088:2090   */\n      0x1f\n        /* \"#utility.yul\":2069:2082   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2065:2092   */\n      and\n        /* \"#utility.yul\":2094:2098   */\n      0x20\n        /* \"#utility.yul\":2061:2099   */\n      add\n        /* \"#utility.yul\":2045:2100   */\n      tag_32\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2125:2127   */\n      dup2\n        /* \"#utility.yul\":2116:2123   */\n      dup2\n        /* \"#utility.yul\":2109:2128   */\n      mstore\n        /* \"#utility.yul\":2171:2174   */\n      dup5\n        /* \"#utility.yul\":2164:2168   */\n      0x20\n        /* \"#utility.yul\":2159:2161   */\n      dup4\n        /* \"#utility.yul\":2151:2157   */\n      dup7\n        /* \"#utility.yul\":2147:2162   */\n      add\n        /* \"#utility.yul\":2143:2169   */\n      add\n        /* \"#utility.yul\":2140:2175   */\n      gt\n        /* \"#utility.yul\":2137:2192   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":2188:2189   */\n      0x00\n        /* \"#utility.yul\":2185:2186   */\n      dup1\n        /* \"#utility.yul\":2178:2190   */\n      revert\n        /* \"#utility.yul\":2137:2192   */\n    tag_60:\n        /* \"#utility.yul\":2253:2255   */\n      dup2\n        /* \"#utility.yul\":2246:2250   */\n      0x20\n        /* \"#utility.yul\":2238:2244   */\n      dup6\n        /* \"#utility.yul\":2234:2251   */\n      add\n        /* \"#utility.yul\":2227:2231   */\n      0x20\n        /* \"#utility.yul\":2218:2225   */\n      dup4\n        /* \"#utility.yul\":2214:2232   */\n      add\n        /* \"#utility.yul\":2201:2256   */\n      calldatacopy\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2276:2292   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2294:2298   */\n      0x20\n        /* \"#utility.yul\":2272:2299   */\n      add\n        /* \"#utility.yul\":2265:2303   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2280:2287   */\n      swap4\n        /* \"#utility.yul\":1804:2334   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2339:3282   */\n    tag_14:\n        /* \"#utility.yul\":2493:2499   */\n      0x00\n        /* \"#utility.yul\":2501:2507   */\n      dup1\n        /* \"#utility.yul\":2509:2515   */\n      0x00\n        /* \"#utility.yul\":2517:2523   */\n      dup1\n        /* \"#utility.yul\":2525:2531   */\n      0x00\n        /* \"#utility.yul\":2578:2581   */\n      0xa0\n        /* \"#utility.yul\":2566:2575   */\n      dup7\n        /* \"#utility.yul\":2557:2564   */\n      dup9\n        /* \"#utility.yul\":2553:2576   */\n      sub\n        /* \"#utility.yul\":2549:2582   */\n      slt\n        /* \"#utility.yul\":2546:2599   */\n      iszero\n      tag_62\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2546:2599   */\n    tag_62:\n        /* \"#utility.yul\":2618:2647   */\n      tag_63\n        /* \"#utility.yul\":2637:2646   */\n      dup7\n        /* \"#utility.yul\":2618:2647   */\n      tag_30\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":2608:2647   */\n      swap5\n      pop\n        /* \"#utility.yul\":2666:2704   */\n      tag_64\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2689:2698   */\n      dup8\n        /* \"#utility.yul\":2685:2703   */\n      add\n        /* \"#utility.yul\":2666:2704   */\n      tag_30\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":2656:2704   */\n      swap4\n      pop\n        /* \"#utility.yul\":2755:2757   */\n      0x40\n        /* \"#utility.yul\":2744:2753   */\n      dup7\n        /* \"#utility.yul\":2740:2758   */\n      add\n        /* \"#utility.yul\":2727:2759   */\n      calldataload\n        /* \"#utility.yul\":2778:2796   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2819:2821   */\n      dup1\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2808:2822   */\n      gt\n        /* \"#utility.yul\":2805:2839   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2832:2833   */\n      dup1\n        /* \"#utility.yul\":2825:2837   */\n      revert\n        /* \"#utility.yul\":2805:2839   */\n    tag_65:\n        /* \"#utility.yul\":2858:2919   */\n      tag_66\n        /* \"#utility.yul\":2911:2918   */\n      dup10\n        /* \"#utility.yul\":2902:2908   */\n      dup4\n        /* \"#utility.yul\":2891:2900   */\n      dup11\n        /* \"#utility.yul\":2887:2909   */\n      add\n        /* \"#utility.yul\":2858:2919   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2848:2919   */\n      swap5\n      pop\n        /* \"#utility.yul\":2972:2974   */\n      0x60\n        /* \"#utility.yul\":2961:2970   */\n      dup9\n        /* \"#utility.yul\":2957:2975   */\n      add\n        /* \"#utility.yul\":2944:2976   */\n      calldataload\n        /* \"#utility.yul\":2928:2976   */\n      swap2\n      pop\n        /* \"#utility.yul\":3001:3003   */\n      dup1\n        /* \"#utility.yul\":2991:2999   */\n      dup3\n        /* \"#utility.yul\":2988:3004   */\n      gt\n        /* \"#utility.yul\":2985:3021   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup1\n        /* \"#utility.yul\":3007:3019   */\n      revert\n        /* \"#utility.yul\":2985:3021   */\n    tag_67:\n        /* \"#utility.yul\":3040:3103   */\n      tag_68\n        /* \"#utility.yul\":3095:3102   */\n      dup10\n        /* \"#utility.yul\":3084:3092   */\n      dup4\n        /* \"#utility.yul\":3073:3082   */\n      dup11\n        /* \"#utility.yul\":3069:3093   */\n      add\n        /* \"#utility.yul\":3040:3103   */\n      tag_33\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3030:3103   */\n      swap4\n      pop\n        /* \"#utility.yul\":3156:3159   */\n      0x80\n        /* \"#utility.yul\":3145:3154   */\n      dup9\n        /* \"#utility.yul\":3141:3160   */\n      add\n        /* \"#utility.yul\":3128:3161   */\n      calldataload\n        /* \"#utility.yul\":3112:3161   */\n      swap2\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      dup1\n        /* \"#utility.yul\":3176:3184   */\n      dup3\n        /* \"#utility.yul\":3173:3189   */\n      gt\n        /* \"#utility.yul\":3170:3206   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":3202:3203   */\n      0x00\n        /* \"#utility.yul\":3199:3200   */\n      dup1\n        /* \"#utility.yul\":3192:3204   */\n      revert\n        /* \"#utility.yul\":3170:3206   */\n    tag_69:\n      pop\n        /* \"#utility.yul\":3225:3276   */\n      tag_70\n        /* \"#utility.yul\":3268:3275   */\n      dup9\n        /* \"#utility.yul\":3257:3265   */\n      dup3\n        /* \"#utility.yul\":3246:3255   */\n      dup10\n        /* \"#utility.yul\":3242:3266   */\n      add\n        /* \"#utility.yul\":3225:3276   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":3215:3276   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2339:3282   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3494:4100   */\n    tag_20:\n        /* \"#utility.yul\":3598:3604   */\n      0x00\n        /* \"#utility.yul\":3606:3612   */\n      dup1\n        /* \"#utility.yul\":3614:3620   */\n      0x00\n        /* \"#utility.yul\":3622:3628   */\n      dup1\n        /* \"#utility.yul\":3630:3636   */\n      0x00\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3671:3680   */\n      dup7\n        /* \"#utility.yul\":3662:3669   */\n      dup9\n        /* \"#utility.yul\":3658:3681   */\n      sub\n        /* \"#utility.yul\":3654:3687   */\n      slt\n        /* \"#utility.yul\":3651:3704   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":3700:3701   */\n      0x00\n        /* \"#utility.yul\":3697:3698   */\n      dup1\n        /* \"#utility.yul\":3690:3702   */\n      revert\n        /* \"#utility.yul\":3651:3704   */\n    tag_73:\n        /* \"#utility.yul\":3723:3752   */\n      tag_74\n        /* \"#utility.yul\":3742:3751   */\n      dup7\n        /* \"#utility.yul\":3723:3752   */\n      tag_30\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3713:3752   */\n      swap5\n      pop\n        /* \"#utility.yul\":3771:3809   */\n      tag_75\n        /* \"#utility.yul\":3805:3807   */\n      0x20\n        /* \"#utility.yul\":3794:3803   */\n      dup8\n        /* \"#utility.yul\":3790:3808   */\n      add\n        /* \"#utility.yul\":3771:3809   */\n      tag_30\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3761:3809   */\n      swap4\n      pop\n        /* \"#utility.yul\":3856:3858   */\n      0x40\n        /* \"#utility.yul\":3845:3854   */\n      dup7\n        /* \"#utility.yul\":3841:3859   */\n      add\n        /* \"#utility.yul\":3828:3860   */\n      calldataload\n        /* \"#utility.yul\":3818:3860   */\n      swap3\n      pop\n        /* \"#utility.yul\":3907:3909   */\n      0x60\n        /* \"#utility.yul\":3896:3905   */\n      dup7\n        /* \"#utility.yul\":3892:3910   */\n      add\n        /* \"#utility.yul\":3879:3911   */\n      calldataload\n        /* \"#utility.yul\":3869:3911   */\n      swap2\n      pop\n        /* \"#utility.yul\":3962:3965   */\n      0x80\n        /* \"#utility.yul\":3951:3960   */\n      dup7\n        /* \"#utility.yul\":3947:3966   */\n      add\n        /* \"#utility.yul\":3934:3967   */\n      calldataload\n        /* \"#utility.yul\":3990:4008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3982:3988   */\n      dup2\n        /* \"#utility.yul\":3979:4009   */\n      gt\n        /* \"#utility.yul\":3976:4026   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":4022:4023   */\n      0x00\n        /* \"#utility.yul\":4019:4020   */\n      dup1\n        /* \"#utility.yul\":4012:4024   */\n      revert\n        /* \"#utility.yul\":3976:4026   */\n    tag_76:\n        /* \"#utility.yul\":4045:4094   */\n      tag_70\n        /* \"#utility.yul\":4086:4093   */\n      dup9\n        /* \"#utility.yul\":4077:4083   */\n      dup3\n        /* \"#utility.yul\":4066:4075   */\n      dup10\n        /* \"#utility.yul\":4062:4084   */\n      add\n        /* \"#utility.yul\":4045:4094   */\n      tag_34\n      jump\t// in\n\n    auxdata: 0xa264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506103c5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_2168": {
									"entryPoint": null,
									"id": 2168,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_2145": {
									"entryPoint": null,
									"id": 2145,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_2202": {
									"entryPoint": 197,
									"id": 2202,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2847": {
									"entryPoint": null,
									"id": 2847,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4102:13",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:13"
															},
															"nodeType": "YulIf",
															"src": "93:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:13",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:13",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:13"
															},
															"nodeType": "YulIf",
															"src": "199:71:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:13",
														"type": ""
													}
												],
												"src": "14:286:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:13",
														"type": ""
													}
												],
												"src": "305:187:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "556:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "565:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "633:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "638:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "642:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:50:13"
															},
															"nodeType": "YulIf",
															"src": "594:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "525:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "536:5:13",
														"type": ""
													}
												],
												"src": "497:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "707:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "724:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "731:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "727:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "717:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "717:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "764:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "757:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "757:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "757:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "788:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "791:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "781:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "781:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "781:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "675:127:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "852:230:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "862:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "878:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "872:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "890:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "912:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "928:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "934:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "924:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "924:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "943:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "939:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "939:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "920:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "920:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "908:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "908:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "894:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1023:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1025:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1025:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1025:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "966:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "978:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "963:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "963:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1002:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1014:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "999:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "999:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "960:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "960:62:13"
															},
															"nodeType": "YulIf",
															"src": "957:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1065:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1054:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1054:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "832:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "841:6:13",
														"type": ""
													}
												],
												"src": "807:275:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:648:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1187:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1175:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1175:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:35:13"
															},
															"nodeType": "YulIf",
															"src": "1161:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1248:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1235:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1229:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:14:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1274:4:13",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1317:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1319:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1319:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1319:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1293:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1297:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1290:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:26:13"
															},
															"nodeType": "YulIf",
															"src": "1287:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:20:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1365:2:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "1358:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:10:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1377:39:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1408:2:13"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1412:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1404:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1404:11:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1388:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1388:28:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1381:3:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1425:16:13",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "1438:3:13"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "1429:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1457:3:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1462:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1450:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1450:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1450:15:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1485:3:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1481:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1481:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1474:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1502:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:13"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "1532:2:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:15:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1537:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1516:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:24:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "1506:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1568:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1577:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1580:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1570:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1570:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1570:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1555:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1563:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1552:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1552:15:13"
															},
															"nodeType": "YulIf",
															"src": "1549:35:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1593:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1608:6:13"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1616:2:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1604:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1604:15:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1597:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1684:86:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1705:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "1723:3:13"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1710:12:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1710:17:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1698:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1698:30:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1698:30:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1741:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1752:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1757:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1748:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1748:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1741:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1644:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1636:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1636:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1652:23:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1654:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1665:3:13"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1670:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1661:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1661:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1654:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1632:3:13",
																"statements": []
															},
															"src": "1628:142:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1779:14:13",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1788:5:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1779:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1125:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1133:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1141:5:13",
														"type": ""
													}
												],
												"src": "1087:712:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1856:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1884:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1892:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1880:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1880:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1899:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1876:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1876:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:35:13"
															},
															"nodeType": "YulIf",
															"src": "1866:55:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1953:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1940:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:20:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2001:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2001:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2001:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1975:2:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1979:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1972:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:26:13"
															},
															"nodeType": "YulIf",
															"src": "1969:52:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2030:70:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2073:2:13"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2077:4:13",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2069:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2069:13:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2088:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2084:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2084:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2065:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2065:27:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2094:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:38:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2045:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2045:55:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2034:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2116:7:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2125:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2109:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2109:19:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2176:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2185:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2188:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2178:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2178:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2178:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2151:6:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2159:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2147:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2147:15:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2164:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:26:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2140:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2140:35:13"
															},
															"nodeType": "YulIf",
															"src": "2137:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2218:7:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2227:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2214:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2214:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2238:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2246:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:17:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2253:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2201:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:55:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "2280:7:13"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2289:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2276:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2276:16:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2294:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2272:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2272:27:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:38:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:38:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2312:16:13",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "2321:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2312:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1830:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1838:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1846:5:13",
														"type": ""
													}
												],
												"src": "1804:530:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:746:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2557:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2566:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2553:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2578:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:33:13"
															},
															"nodeType": "YulIf",
															"src": "2546:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2618:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2656:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2689:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2700:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2685:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2685:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2666:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2666:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2713:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2717:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2768:28:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2778:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2772:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2823:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2832:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2835:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2825:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2825:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2825:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2808:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2808:14:13"
															},
															"nodeType": "YulIf",
															"src": "2805:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2848:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2891:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2902:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2887:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2911:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2858:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:61:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2848:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2928:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2961:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2972:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2944:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "2932:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3005:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "2991:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3001:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2988:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2988:16:13"
															},
															"nodeType": "YulIf",
															"src": "2985:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3030:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3073:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3084:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3095:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3040:28:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:63:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3030:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3112:49:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3156:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3141:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3128:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3128:33:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "3116:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3190:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3199:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3202:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3192:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3192:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "3176:8:13"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3186:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3173:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:16:13"
															},
															"nodeType": "YulIf",
															"src": "3170:36:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:61:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "3257:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3242:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3268:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3225:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:51:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3215:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2470:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2481:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2493:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2501:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2509:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2517:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2525:6:13",
														"type": ""
													}
												],
												"src": "2339:943:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3386:103:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3396:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3408:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3404:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3404:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3396:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3438:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3453:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3465:3:13",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3470:10:13",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3461:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3461:20:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3449:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3449:33:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3431:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3431:52:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3355:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3366:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3377:4:13",
														"type": ""
													}
												],
												"src": "3287:202:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3641:459:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3688:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3697:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3700:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3690:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3690:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3690:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3662:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3658:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3658:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3654:33:13"
															},
															"nodeType": "YulIf",
															"src": "3651:53:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3713:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3742:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3723:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3723:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3713:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3761:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3794:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3805:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3771:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3771:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3761:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3818:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3845:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3856:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3841:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3841:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3828:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3818:6:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3896:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3907:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3892:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3879:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3879:32:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3920:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3951:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3962:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3947:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3947:19:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3934:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3934:33:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3924:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4019:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4022:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4012:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3982:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3990:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3979:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:13"
															},
															"nodeType": "YulIf",
															"src": "3976:50:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4035:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:13"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4086:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4045:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:49:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4035:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3586:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3598:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3606:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3614:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3622:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3630:6:13",
														"type": ""
													}
												],
												"src": "3494:606:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let _3 := shl(5, _1)\n        let dst := allocate_memory(add(_3, _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, _3), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006e578063f23a6e61146100a6575b600080fd5b6100596100543660046100fc565b6100c5565b60405190151581526020015b60405180910390f35b61008d61007c366004610280565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610065565b61008d6100b436600461032a565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806100f657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006020828403121561010e57600080fd5b81356001600160e01b03198116811461012657600080fd5b9392505050565b80356001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561018857610188610149565b604052919050565b600082601f8301126101a157600080fd5b8135602067ffffffffffffffff8211156101bd576101bd610149565b8160051b6101cc82820161015f565b92835284810182019282810190878511156101e657600080fd5b83870192505b84831015610205578235825291830191908301906101ec565b979650505050505050565b600082601f83011261022157600080fd5b813567ffffffffffffffff81111561023b5761023b610149565b61024e601f8201601f191660200161015f565b81815284602083860101111561026357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561029857600080fd5b6102a18661012d565b94506102af6020870161012d565b9350604086013567ffffffffffffffff808211156102cc57600080fd5b6102d889838a01610190565b945060608801359150808211156102ee57600080fd5b6102fa89838a01610190565b9350608088013591508082111561031057600080fd5b5061031d88828901610210565b9150509295509295909350565b600080600080600060a0868803121561034257600080fd5b61034b8661012d565b94506103596020870161012d565b93506040860135925060608601359150608086013567ffffffffffffffff81111561038357600080fd5b61031d8882890161021056fea264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6E JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0xFC JUMP JUMPDEST PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH2 0x7C CALLDATASIZE PUSH1 0x4 PUSH2 0x280 JUMP JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x65 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x32A JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x2711897 PUSH1 0xE5 SHL EQ DUP1 PUSH2 0xF6 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x188 JUMPI PUSH2 0x188 PUSH2 0x149 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD JUMPI PUSH2 0x1BD PUSH2 0x149 JUMP JUMPDEST DUP2 PUSH1 0x5 SHL PUSH2 0x1CC DUP3 DUP3 ADD PUSH2 0x15F JUMP JUMPDEST SWAP3 DUP4 MSTORE DUP5 DUP2 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP1 DUP8 DUP6 GT ISZERO PUSH2 0x1E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP8 ADD SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x205 JUMPI DUP3 CALLDATALOAD DUP3 MSTORE SWAP2 DUP4 ADD SWAP2 SWAP1 DUP4 ADD SWAP1 PUSH2 0x1EC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23B JUMPI PUSH2 0x23B PUSH2 0x149 JUMP JUMPDEST PUSH2 0x24E PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x15F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A1 DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x2AF PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D8 DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FA DUP10 DUP4 DUP11 ADD PUSH2 0x190 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x310 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x34B DUP7 PUSH2 0x12D JUMP JUMPDEST SWAP5 POP PUSH2 0x359 PUSH1 0x20 DUP8 ADD PUSH2 0x12D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x383 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31D DUP9 DUP3 DUP10 ADD PUSH2 0x210 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD 0xCC RETURNDATACOPY DUP11 PUSH13 0x42A70AD7499ABCAF01740F1499 DUP1 DUP11 GASPRICE 0xE9 ADDMOD 0xE5 0xC4 0x2E 0xBB 0xA9 0xDF EQ PUSH18 0x5064736F6C634300080D0033000000000000 ",
							"sourceMap": "204:522:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:5;;;;;;:::i;:::-;;:::i;:::-;;;470:14:13;;463:22;445:41;;433:2;418:18;387:221:5;;;;;;;;477:247:4;;;;;;:::i;:::-;-1:-1:-1;;;477:247:4;;;;;;;;;;;-1:-1:-1;;;;;;3449:33:13;;;3431:52;;3419:2;3404:18;477:247:4;3287:202:13;252:219:4;;;;;;:::i;:::-;-1:-1:-1;;;252:219:4;;;;;;;;387:221:5;489:4;-1:-1:-1;;;;;;512:49:5;;-1:-1:-1;;;512:49:5;;:89;;-1:-1:-1;;;;;;;;;;937:40:10;;;565:36:5;505:96;387:221;-1:-1:-1;;387:221:5:o;14:286:13:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:13;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:13:o;497:173::-;565:20;;-1:-1:-1;;;;;614:31:13;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:127::-;736:10;731:3;727:20;724:1;717:31;767:4;764:1;757:15;791:4;788:1;781:15;807:275;878:2;872:9;943:2;924:13;;-1:-1:-1;;920:27:13;908:40;;978:18;963:34;;999:22;;;960:62;957:88;;;1025:18;;:::i;:::-;1061:2;1054:22;807:275;;-1:-1:-1;807:275:13:o;1087:712::-;1141:5;1194:3;1187:4;1179:6;1175:17;1171:27;1161:55;;1212:1;1209;1202:12;1161:55;1248:6;1235:20;1274:4;1297:18;1293:2;1290:26;1287:52;;;1319:18;;:::i;:::-;1365:2;1362:1;1358:10;1388:28;1412:2;1408;1404:11;1388:28;:::i;:::-;1450:15;;;1520;;;1516:24;;;1481:12;;;;1552:15;;;1549:35;;;1580:1;1577;1570:12;1549:35;1616:2;1608:6;1604:15;1593:26;;1628:142;1644:6;1639:3;1636:15;1628:142;;;1710:17;;1698:30;;1661:12;;;;1748;;;;1628:142;;;1788:5;1087:712;-1:-1:-1;;;;;;;1087:712:13:o;1804:530::-;1846:5;1899:3;1892:4;1884:6;1880:17;1876:27;1866:55;;1917:1;1914;1907:12;1866:55;1953:6;1940:20;1979:18;1975:2;1972:26;1969:52;;;2001:18;;:::i;:::-;2045:55;2088:2;2069:13;;-1:-1:-1;;2065:27:13;2094:4;2061:38;2045:55;:::i;:::-;2125:2;2116:7;2109:19;2171:3;2164:4;2159:2;2151:6;2147:15;2143:26;2140:35;2137:55;;;2188:1;2185;2178:12;2137:55;2253:2;2246:4;2238:6;2234:17;2227:4;2218:7;2214:18;2201:55;2301:1;2276:16;;;2294:4;2272:27;2265:38;;;;2280:7;1804:530;-1:-1:-1;;;1804:530:13:o;2339:943::-;2493:6;2501;2509;2517;2525;2578:3;2566:9;2557:7;2553:23;2549:33;2546:53;;;2595:1;2592;2585:12;2546:53;2618:29;2637:9;2618:29;:::i;:::-;2608:39;;2666:38;2700:2;2689:9;2685:18;2666:38;:::i;:::-;2656:48;;2755:2;2744:9;2740:18;2727:32;2778:18;2819:2;2811:6;2808:14;2805:34;;;2835:1;2832;2825:12;2805:34;2858:61;2911:7;2902:6;2891:9;2887:22;2858:61;:::i;:::-;2848:71;;2972:2;2961:9;2957:18;2944:32;2928:48;;3001:2;2991:8;2988:16;2985:36;;;3017:1;3014;3007:12;2985:36;3040:63;3095:7;3084:8;3073:9;3069:24;3040:63;:::i;:::-;3030:73;;3156:3;3145:9;3141:19;3128:33;3112:49;;3186:2;3176:8;3173:16;3170:36;;;3202:1;3199;3192:12;3170:36;;3225:51;3268:7;3257:8;3246:9;3242:24;3225:51;:::i;:::-;3215:61;;;2339:943;;;;;;;;:::o;3494:606::-;3598:6;3606;3614;3622;3630;3683:3;3671:9;3662:7;3658:23;3654:33;3651:53;;;3700:1;3697;3690:12;3651:53;3723:29;3742:9;3723:29;:::i;:::-;3713:39;;3771:38;3805:2;3794:9;3790:18;3771:38;:::i;:::-;3761:48;;3856:2;3845:9;3841:18;3828:32;3818:42;;3907:2;3896:9;3892:18;3879:32;3869:42;;3962:3;3951:9;3947:19;3934:33;3990:18;3982:6;3979:30;3976:50;;;4022:1;4019;4012:12;3976:50;4045:49;4086:7;4077:6;4066:9;4062:22;4045:49;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "193000",
								"executionCost": "238",
								"totalCost": "193238"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "404"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 204,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 204,
									"end": 726,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008cc3e8a6c42a70ad7499abcaf01740f1499808a3ae908e5c42ebba9df14715064736f6c634300080d0033",
									".code": [
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 204,
											"end": 726,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 204,
											"end": 726,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 724,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3482,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3431,
											"end": 3483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3419,
											"end": 3421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 477,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3287,
											"end": 3489,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 387,
											"end": 608,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 489,
											"end": 493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "AND",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2711897"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 512,
											"end": 561,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 512,
											"end": 561,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 512,
											"end": 601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 565,
											"end": 601,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 565,
											"end": 601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 601,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 387,
											"end": 608,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 387,
											"end": 608,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 675,
											"end": 802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 736,
											"end": 746,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 731,
											"end": 734,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 727,
											"end": 747,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 767,
											"end": 771,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 757,
											"end": 772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 788,
											"end": 789,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 796,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 880,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 924,
											"end": 937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 924,
											"end": 937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 920,
											"end": 947,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 908,
											"end": 948,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 978,
											"end": 996,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 997,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 963,
											"end": 997,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 999,
											"end": 1021,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1022,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 957,
											"end": 1045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1025,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 807,
											"end": 1082,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1194,
											"end": 1197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1175,
											"end": 1192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1171,
											"end": 1198,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1212,
											"end": 1213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1214,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1161,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1248,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1255,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1315,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1293,
											"end": 1295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1316,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1287,
											"end": 1339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1319,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1362,
											"end": 1363,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1358,
											"end": 1368,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1412,
											"end": 1414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1410,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1388,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1450,
											"end": 1465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1535,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1516,
											"end": 1540,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1481,
											"end": 1493,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1567,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1580,
											"end": 1581,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1577,
											"end": 1578,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1582,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1608,
											"end": 1614,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1604,
											"end": 1619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1710,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1698,
											"end": 1728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1661,
											"end": 1673,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1628,
											"end": 1770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1788,
											"end": 1793,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1087,
											"end": 1799,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1846,
											"end": 1851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1902,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1892,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1884,
											"end": 1890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 1897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1876,
											"end": 1903,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1915,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1907,
											"end": 1919,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1866,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1960,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1977,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1972,
											"end": 1998,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 1969,
											"end": 2021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 2001,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2088,
											"end": 2090,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2092,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 2045,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2116,
											"end": 2123,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2128,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2164,
											"end": 2168,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2159,
											"end": 2161,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 2186,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2190,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2137,
											"end": 2192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2250,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2244,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2251,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2218,
											"end": 2225,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2232,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2201,
											"end": 2256,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2298,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2265,
											"end": 2303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1804,
											"end": 2334,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2493,
											"end": 2499,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2581,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2566,
											"end": 2575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2549,
											"end": 2582,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 2546,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2637,
											"end": 2646,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2608,
											"end": 2647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2689,
											"end": 2698,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2666,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2822,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2832,
											"end": 2833,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2825,
											"end": 2837,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 2805,
											"end": 2839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2911,
											"end": 2918,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2908,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2900,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 2887,
											"end": 2909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2858,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2961,
											"end": 2970,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2975,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2928,
											"end": 2976,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 2999,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3004,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 2985,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3095,
											"end": 3102,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3084,
											"end": 3092,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3082,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3069,
											"end": 3093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3030,
											"end": 3103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3141,
											"end": 3160,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3128,
											"end": 3161,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3112,
											"end": 3161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3176,
											"end": 3184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3173,
											"end": 3189,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3202,
											"end": 3203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3204,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3268,
											"end": 3275,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3257,
											"end": 3265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3242,
											"end": 3266,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 3225,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3276,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2339,
											"end": 3282,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3494,
											"end": 4100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3598,
											"end": 3604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3612,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3614,
											"end": 3620,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3622,
											"end": 3628,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3630,
											"end": 3636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3662,
											"end": 3669,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3681,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3654,
											"end": 3687,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3742,
											"end": 3751,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 3723,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3713,
											"end": 3752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3805,
											"end": 3807,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3803,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3771,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3858,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3828,
											"end": 3860,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3818,
											"end": 3860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3896,
											"end": 3905,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3911,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3965,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3951,
											"end": 3960,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3967,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3990,
											"end": 4008,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4020,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4024,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 3976,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4045,
											"end": 4094,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xc17dae2baabdf6f414ee129c3f07324309aaa8ae63297ab55cada28a6969a81b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80777f3b7c186477704a96b29deb2bce56c281a6618aeda284a2a0f94d635c3c\",\"dweb:/ipfs/QmPrbgsuseYdJ1hmLHZ2dnxdHfqiFHZBqBSZZANwCEjJQr\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xc743d2235b8854045c308d2f8f1ed88efed6c2bebf2b7a4a51ea42480c82e566\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e54e397a053f319187999ef4d65446a7f15f693ddd66dfaed4d856f67dac4e\",\"dweb:/ipfs/QmbGTFVdZxShg76UPcuLAXm6HBjZx3Vn6CL1eaBhV9rST1\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808de0ae4918c664643c885ca7fa6503e8ef2bd75609dfc85152c0128a3422d\",\"dweb:/ipfs/QmNrhFC1XgBKuuxfahFeiwi1MCdu3FLNpHj2uStgmf4iJj\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;645:3270:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C SLOAD SWAP6 PUSH13 0xDA34E5429E1FE807F02690D059 DUP9 0x5C ORIGIN DIV PUSH23 0x5AA20A59893EFAAC130564736F6C634300080D00330000 ",
							"sourceMap": "645:3270:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c54956cda34e5429e1fe807f02690d059885c3204765aa20a59893efaac130564736f6c634300080d0033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 SUB PUSH22 0x3A3A89746922F0E5CE850A4B7F5F490892C1AA149668 SMOD COINBASE LOG1 MSTORE8 SAR CALL EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "179:7729:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b103753a3a89746922f0e5ce850a4b7f5f490892c1aa1496680741a1531df13c64736f6c634300080d0033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0x4D SLT PUSH12 0x27E5770565AF6A4A784B9602 SELFDESTRUCT 0xCB 0xE1 CALLDATALOAD SWAP2 MSTORE 0x29 0xD2 SELFBALANCE 0xCF 0xBE CALL PUSH1 0xF4 0xA7 PUSH16 0x64736F6C634300080D00330000000000 ",
							"sourceMap": "467:6301:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220844d126b27e5770565af6a4a784b9602ffcbe135915229d247cfbef160f4a76f64736f6c634300080d0033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> nft/NFTBreed.sol:48:65:\n   |\n48 |     function power(uint256 a, uint256 b) internal pure returns (uint256){\n   |                                                                 ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1708,
					"file": "nft/NFTBreed.sol",
					"start": 1701
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/NFTBreed.sol": {
				"ast": {
					"absolutePath": "nft/NFTBreed.sol",
					"exportedSymbols": {
						"Address": [
							2802
						],
						"Breed": [
							1850
						],
						"Context": [
							2824
						],
						"ERC1155Holder": [
							2169
						],
						"ERC1155Receiver": [
							2203
						],
						"ERC165": [
							2848
						],
						"IERC1155": [
							2077
						],
						"IERC1155Receiver": [
							2118
						],
						"IERC165": [
							2860
						],
						"IERC20": [
							2281
						],
						"LibArrayForUint256Utils": [
							848
						],
						"LibSafeMathForUint256Utils": [
							253
						],
						"Ownable": [
							1955
						],
						"SafeERC20": [
							2505
						],
						"SafeMath": [
							3172
						]
					},
					"id": 1851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 3173,
							"src": "86:73:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 2506,
							"src": "161:81:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 1956,
							"src": "244:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 2282,
							"src": "314:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 2078,
							"src": "388:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1851,
							"sourceUnit": 2170,
							"src": "466:87:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSafeMathForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "LibSafeMathForUint256Utils",
							"nameLocation": "567:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "670:122:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "689:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "681:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 18,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 19,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "681:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206164646974696f6e206f766572666c6f77",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "725:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															},
															"value": "SafeMathForUint256: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "709:56:0"
											},
											{
												"expression": {
													"id": 29,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "783:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 30,
												"nodeType": "Return",
												"src": "776:8:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "612:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "616:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:0"
									},
									"scope": 253,
									"src": "603:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "867:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 43,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a207375627472616374696f6e206f766572666c6f77",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															},
															"value": "SafeMathForUint256: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "878:59:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "956:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "948:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 51,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "948:17:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "983:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 55,
												"nodeType": "Return",
												"src": "976:8:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "809:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "824:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:22:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:9:0"
									},
									"scope": 253,
									"src": "800:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1067:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 69,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1082:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "1078:57:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "1100:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 74,
															"nodeType": "Return",
															"src": "1115:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1155:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1147:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1147:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 84,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 85,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1183:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 87,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1195:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															},
															"value": "SafeMathForUint256: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1175:66:0"
											},
											{
												"expression": {
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1259:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 93,
												"nodeType": "Return",
												"src": "1252:8:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1009:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1024:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:22:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:9:0"
									},
									"scope": 253,
									"src": "1000:268:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1343:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1362:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1362:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206469766973696f6e206279207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															},
															"value": "SafeMathForUint256: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1354:54:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1427:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1419:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1419:17:0"
											},
											{
												"expression": {
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1454:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1447:8:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1285:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1297:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1308:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1300:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:22:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:9:0"
									},
									"scope": 253,
									"src": "1276:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1538:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d6f64756c6f206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															},
															"value": "SafeMathForUint256: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1549:53:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 139,
												"nodeType": "Return",
												"src": "1613:12:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1480:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1495:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:9:0"
									},
									"scope": 253,
									"src": "1471:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1709:176:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "1722:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 149,
													"id": 154,
													"nodeType": "Return",
													"src": "1733:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 156,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1752:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 149,
													"id": 160,
													"nodeType": "Return",
													"src": "1763:8:0"
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1792:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "1784:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"hexValue": "31",
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1796:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:13:0"
											},
											{
												"body": {
													"id": 183,
													"nodeType": "Block",
													"src": "1838:40:0",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "1861:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 179,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 177,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1857:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1857:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1853:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "1853:13:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"initializationExpression": {
													"assignments": [
														167
													],
													"declarations": [
														{
															"constant": false,
															"id": 167,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1820:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 184,
															"src": "1812:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 169,
													"initialValue": {
														"hexValue": "30",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1812:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1834:3:0",
														"subExpression": {
															"id": 173,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 175,
													"nodeType": "ExpressionStatement",
													"src": "1834:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1808:70:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "1650:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:22:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:0"
									},
									"scope": 253,
									"src": "1641:244:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1960:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1978:14:0",
													"trueExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 201,
												"nodeType": "Return",
												"src": "1971:21:0"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1902:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1914:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1906:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:9:0"
									},
									"scope": 253,
									"src": "1893:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2075:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 213,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2093:13:0",
													"trueExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 218,
												"nodeType": "Return",
												"src": "2086:20:0"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2017:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2066:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:9:0"
									},
									"scope": 253,
									"src": "2008:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2193:67:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "2212:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2216:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2211:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "2233:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2237:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2233:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 241,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2241:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2245:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2241:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2233:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2232:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2232:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 248,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2231:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 250,
												"nodeType": "Return",
												"src": "2204:48:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:22:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2183:9:0"
									},
									"scope": 253,
									"src": "2122:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1851,
							"src": "559:1704:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibArrayForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "LibArrayForUint256Utils",
							"nameLocation": "2275:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2802:497:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2832:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2816:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2813:62:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2834:41:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2854:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2853:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 265,
															"id": 273,
															"nodeType": "Return",
															"src": "2846:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "2895:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2887:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"hexValue": "30",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2901:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:15:0"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "2921:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2913:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2928:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2928:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:29:0"
											},
											{
												"body": {
													"id": 329,
													"nodeType": "Block",
													"src": "2973:289:0",
													"statements": [
														{
															"assignments": [
																291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 291,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "2993:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 329,
																	"src": "2985:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2985:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 297,
															"initialValue": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "3034:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 295,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3039:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 292,
																		"name": "LibSafeMathForUint256Utils",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2999:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibSafeMathForUint256Utils_$253_$",
																			"typeString": "type(library LibSafeMathForUint256Utils)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "2999:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2999:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2985:59:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 298,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3059:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3059:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 301,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 308,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "3130:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[] storage pointer"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "3136:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 311,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "3143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3130:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 326,
																	"nodeType": "Block",
																	"src": "3203:48:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 320,
																					"name": "low",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "3222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 321,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3228:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3234:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3228:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3222:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 325,
																			"nodeType": "ExpressionStatement",
																			"src": "3222:13:0"
																		}
																	]
																},
																"id": 327,
																"nodeType": "IfStatement",
																"src": "3126:125:0",
																"trueBody": {
																	"id": 319,
																	"nodeType": "Block",
																	"src": "3148:49:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 313,
																					"name": "high",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "3167:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 314,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3174:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3180:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3174:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3167:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 318,
																			"nodeType": "ExpressionStatement",
																			"src": "3167:14:0"
																		}
																	]
																}
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "3056:195:0",
															"trueBody": {
																"id": 307,
																"nodeType": "Block",
																"src": "3077:44:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3098:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 304,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "3104:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3097:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 265,
																		"id": 306,
																		"nodeType": "Return",
																		"src": "3090:18:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 287,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2961:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 288,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2968:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2961:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "WhileStatement",
												"src": "2955:307:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3281:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 265,
												"id": 334,
												"nodeType": "Return",
												"src": "3274:17:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2305:399:0",
										"text": " @dev Searches a sortd uint256 array and returns the first element index that \n match the key value, Time complexity O(log n)\n @param array is expected to be sorted in ascending order\n @param key is element \n @return if matches key in the array return true,else return false \n @return the first element index that match the key value,if not exist,return 0"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nameLocation": "2716:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2729:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 256,
													"nodeType": "ArrayTypeName",
													"src": "2729:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2762:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2754:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2790:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2796:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:12:0"
									},
									"scope": 848,
									"src": "2707:592:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3405:220:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 348,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3418:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "3415:56:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "3436:35:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3453:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3460:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 355,
															"nodeType": "Return",
															"src": "3445:17:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 380,
													"nodeType": "Block",
													"src": "3521:72:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 369,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "3533:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 371,
																	"indexExpression": {
																		"id": 370,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "3539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3533:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 372,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3545:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3533:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "IfStatement",
															"src": "3530:55:0",
															"trueBody": {
																"id": 378,
																"nodeType": "Block",
																"src": "3549:36:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3567:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 375,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 359,
																					"src": "3573:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 376,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3566:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 347,
																		"id": 377,
																		"nodeType": "Return",
																		"src": "3559:16:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3499:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 363,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3499:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"initializationExpression": {
													"assignments": [
														359
													],
													"declarations": [
														{
															"constant": false,
															"id": 359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3492:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 381,
															"src": "3484:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 361,
													"initialValue": {
														"hexValue": "30",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3484:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3517:3:0",
														"subExpression": {
															"id": 366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3517:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "3517:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3480:113:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3607:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 347,
												"id": 385,
												"nodeType": "Return",
												"src": "3600:17:0"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "firstIndexOf",
									"nameLocation": "3316:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3329:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3329:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3362:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3354:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:38:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3389:15:0"
									},
									"scope": 848,
									"src": "3307:318:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3684:229:0",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "3703:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:12:0"
											},
											{
												"body": {
													"id": 439,
													"nodeType": "Block",
													"src": "3762:144:0",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 409,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 410,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 412,
																	"indexExpression": {
																		"id": 411,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "3777:15:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 415,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"id": 416,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3813:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3807:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 418,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3818:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 425,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 419,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3824:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3824:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3839:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3824:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 423,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3843:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3824:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3818:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3807:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "3807:38:0"
														},
														{
															"expression": {
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 428,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3860:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 435,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 429,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3866:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3866:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3881:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3866:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 433,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3860:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 436,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3860:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "3860:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 401,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3739:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3739:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3739:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3735:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 440,
												"initializationExpression": {
													"assignments": [
														397
													],
													"declarations": [
														{
															"constant": false,
															"id": 397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3728:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 440,
															"src": "3723:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 396,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 399,
													"initialValue": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3723:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3757:3:0",
														"subExpression": {
															"id": 406,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 408,
													"nodeType": "ExpressionStatement",
													"src": "3757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3718:188:0"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reverse",
									"nameLocation": "3642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3650:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"nodeType": "ArrayTypeName",
													"src": "3650:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:25:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:0:0"
									},
									"scope": 848,
									"src": "3633:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4007:197:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 455,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "4015:54:0",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "4039:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 452,
															"id": 459,
															"nodeType": "Return",
															"src": "4048:12:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 484,
													"nodeType": "Block",
													"src": "4113:65:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "4125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 475,
																	"indexExpression": {
																		"id": 474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4127:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "4133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"id": 477,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4125:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "4122:48:0",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "4138:32:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 452,
																		"id": 481,
																		"nodeType": "Return",
																		"src": "4148:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 467,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4099:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4095:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4088:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 485,
															"src": "4080:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4080:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4109:3:0",
														"subExpression": {
															"id": 470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "4109:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4076:102:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 487,
												"nodeType": "Return",
												"src": "4185:11:0"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "3930:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3937:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3958:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 446,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 447,
													"nodeType": "ArrayTypeName",
													"src": "3958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:42:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4002:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:6:0"
									},
									"scope": 848,
									"src": "3921:283:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4280:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4296:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4304:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4296:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f756e6473",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															},
															"value": "ArrayForUint256: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "4288:69:0"
											},
											{
												"body": {
													"id": 524,
													"nodeType": "Block",
													"src": "4403:80:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 511,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4418:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 512,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "4424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 515,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "4439:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4447:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4439:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4433:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4418:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "4418:31:0"
														},
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4464:7:0",
																"subExpression": {
																	"id": 521,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "4464:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4385:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4377:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "WhileStatement",
												"src": "4370:113:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 526,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4493:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4493:11:0"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByIndex",
									"nameLocation": "4221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4235:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "4235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:37:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:0:0"
									},
									"scope": 848,
									"src": "4212:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4595:172:0",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4611:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4606:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"nodeType": "VariableDeclarationStatement",
												"src": "4606:10:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4632:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4627:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"nodeType": "VariableDeclarationStatement",
												"src": "4627:9:0"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 546,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "4648:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 547,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4647:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 550,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 549,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4663:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4647:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4647:42:0"
											},
											{
												"condition": {
													"id": 555,
													"name": "isIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "4703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "4700:60:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "4708:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4735:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"id": 558,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "4742:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 556,
																	"name": "removeByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4721:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "4721:27:0"
														}
													]
												}
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByValue",
									"nameLocation": "4533:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4547:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "4547:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4580:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:40:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4595:0:0"
									},
									"scope": 848,
									"src": "4524:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4841:159:0",
										"statements": [
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4854:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4849:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"nodeType": "VariableDeclarationStatement",
												"src": "4849:10:0"
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:9:0"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 578,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4891:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 579,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "4897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 580,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4890:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 582,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "4919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "4926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 581,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4906:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4906:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4890:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4890:42:0"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4946:5:0",
													"subExpression": {
														"id": 587,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "4947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "4943:50:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "4952:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "4975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 589,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4964:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "4964:17:0"
														}
													]
												}
											}
										]
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addValue",
									"nameLocation": "4784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4793:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 566,
													"nodeType": "ArrayTypeName",
													"src": "4793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:40:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4841:0:0"
									},
									"scope": 848,
									"src": "4775:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5074:115:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 607,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5085:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5082:100:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5099:83:0",
													"statements": [
														{
															"body": {
																"id": 630,
																"nodeType": "Block",
																"src": "5142:32:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 625,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 604,
																						"src": "5159:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 627,
																					"indexExpression": {
																						"id": 626,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 612,
																						"src": "5161:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5159:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "5152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "5152:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer,uint256)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "5152:12:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 615,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "5128:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"initializationExpression": {
																"assignments": [
																	612
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 612,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5117:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 631,
																		"src": "5112:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 611,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5112:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 614,
																"initialValue": {
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5112:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5138:3:0",
																	"subExpression": {
																		"id": 619,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "5138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 621,
																"nodeType": "ExpressionStatement",
																"src": "5138:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5108:66:0"
														}
													]
												}
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extend",
									"nameLocation": "5017:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5042:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5024:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"nodeType": "ArrayTypeName",
													"src": "5024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5045:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "5045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:41:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5074:0:0"
									},
									"scope": 848,
									"src": "5008:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "5274:667:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "contains",
														"nameLocation": "5290:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5285:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 643,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:13:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5314:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5309:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:10:0"
											},
											{
												"body": {
													"id": 737,
													"nodeType": "Block",
													"src": "5370:532:0",
													"statements": [
														{
															"expression": {
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 660,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "5385:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5396:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5385:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "5385:16:0"
														},
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5416:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "5416:9:0"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "j",
																	"nameLocation": "5445:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 737,
																	"src": "5440:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5440:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 673,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5440:12:0"
														},
														{
															"body": {
																"id": 699,
																"nodeType": "Block",
																"src": "5494:175:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 681,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 683,
																				"indexExpression": {
																					"id": 682,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5522:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5516:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 684,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5528:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 686,
																				"indexExpression": {
																					"id": 685,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "5534:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5528:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5516:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 698,
																		"nodeType": "IfStatement",
																		"src": "5513:141:0",
																		"trueBody": {
																			"id": 697,
																			"nodeType": "Block",
																			"src": "5537:117:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 688,
																							"name": "contains",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "5560:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 689,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5570:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "5560:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 691,
																					"nodeType": "ExpressionStatement",
																					"src": "5560:14:0"
																				},
																				{
																					"expression": {
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 692,
																							"name": "index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 647,
																							"src": "5597:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 693,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 650,
																							"src": "5605:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5597:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 695,
																					"nodeType": "ExpressionStatement",
																					"src": "5597:9:0"
																				},
																				{
																					"id": 696,
																					"nodeType": "Break",
																					"src": "5629:5:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "5472:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 675,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 700,
															"loopExpression": {
																"expression": {
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5490:3:0",
																	"subExpression": {
																		"id": 678,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "5490:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 680,
																"nodeType": "ExpressionStatement",
																"src": "5490:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5467:202:0"
														},
														{
															"condition": {
																"id": 701,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "5687:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "5683:208:0",
															"trueBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "5697:194:0",
																"statements": [
																	{
																		"body": {
																			"id": 725,
																			"nodeType": "Block",
																			"src": "5758:66:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 715,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5781:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 717,
																							"indexExpression": {
																								"id": 716,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 669,
																								"src": "5787:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5781:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 718,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5792:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 722,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 721,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 719,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 669,
																									"src": "5798:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 720,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5802:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5798:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5792:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5781:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 724,
																					"nodeType": "ExpressionStatement",
																					"src": "5781:23:0"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 706,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "5732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 707,
																						"name": "array",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 638,
																						"src": "5736:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																							"typeString": "uint256[] storage pointer"
																						}
																					},
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "5736:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5751:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5736:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5732:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 726,
																		"initializationExpression": {
																			"expression": {
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 702,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 703,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "5725:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5721:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 705,
																			"nodeType": "ExpressionStatement",
																			"src": "5721:9:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5754:3:0",
																				"subExpression": {
																					"id": 712,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 714,
																			"nodeType": "ExpressionStatement",
																			"src": "5754:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "5716:108:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 727,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5842:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5842:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5842:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 731,
																		"nodeType": "ExpressionStatement",
																		"src": "5842:11:0"
																	},
																	{
																		"expression": {
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "5872:3:0",
																			"subExpression": {
																				"id": 732,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "5872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "5872:3:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5347:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"initializationExpression": {
													"assignments": [
														650
													],
													"declarations": [
														{
															"constant": false,
															"id": 650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5340:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 738,
															"src": "5335:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 649,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 652,
													"initialValue": {
														"hexValue": "30",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5335:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5365:3:0",
														"subExpression": {
															"id": 657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5365:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "5365:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5330:572:0"
											},
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 740,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5912:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "5912:21:0"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distinct",
									"nameLocation": "5206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5233:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5215:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 637,
													"nodeType": "ArrayTypeName",
													"src": "5215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:25:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "5266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:16:0"
									},
									"scope": 848,
									"src": "5197:744:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "6046:244:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "maxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 758,
														"indexExpression": {
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6074:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6057:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6057:19:0"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "maxIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "6087:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6087:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "6087:12:0"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "6149:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 776,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "6167:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "6173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 779,
																	"name": "maxValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6178:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "IfStatement",
															"src": "6164:108:0",
															"trueBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "6187:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 781,
																				"name": "maxValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "6206:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 782,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "6217:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 784,
																				"indexExpression": {
																					"id": 783,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6223:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6217:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6206:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "6206:19:0"
																	},
																	{
																		"expression": {
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 787,
																				"name": "maxIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "6244:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6244:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 790,
																		"nodeType": "ExpressionStatement",
																		"src": "6244:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "6128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 770,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6132:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6128:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														766
													],
													"declarations": [
														{
															"constant": false,
															"id": 766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6122:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "6114:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 768,
													"initialValue": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6114:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6145:3:0",
														"subExpression": {
															"id": 773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 775,
													"nodeType": "ExpressionStatement",
													"src": "6145:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6110:173:0"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5958:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5962:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 747,
													"nodeType": "ArrayTypeName",
													"src": "5962:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:25:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "maxValue",
												"nameLocation": "6018:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "maxIndex",
												"nameLocation": "6036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:36:0"
									},
									"scope": 848,
									"src": "5949:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "6395:244:0",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "minValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 807,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 809,
														"indexExpression": {
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6406:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "6406:19:0"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "minIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "6436:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "6436:12:0"
											},
											{
												"body": {
													"id": 844,
													"nodeType": "Block",
													"src": "6498:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 827,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "6516:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 829,
																	"indexExpression": {
																		"id": 828,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "6522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6516:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 830,
																	"name": "minValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6527:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6516:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "6513:108:0",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "6536:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "minValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "6555:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 833,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 835,
																				"indexExpression": {
																					"id": 834,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "6572:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6566:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6555:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 837,
																		"nodeType": "ExpressionStatement",
																		"src": "6555:19:0"
																	},
																	{
																		"expression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 838,
																				"name": "minIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "6593:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 839,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "6604:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6593:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "6593:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 821,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6481:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6477:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"initializationExpression": {
													"assignments": [
														817
													],
													"declarations": [
														{
															"constant": false,
															"id": 817,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6471:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 845,
															"src": "6463:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 816,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 819,
													"initialValue": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6463:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6494:3:0",
														"subExpression": {
															"id": 824,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"nodeType": "ExpressionStatement",
													"src": "6494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6459:173:0"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6307:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6311:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 797,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ArrayTypeName",
													"src": "6311:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6310:25:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "minValue",
												"nameLocation": "6367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "minIndex",
												"nameLocation": "6385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6377:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:36:0"
									},
									"scope": 848,
									"src": "6298:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1851,
							"src": "2267:4377:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1955,
										"src": "6666:7:0"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "6666:7:0"
								},
								{
									"baseName": {
										"id": 851,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2169,
										"src": "6676:13:0"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "6676:13:0"
								}
							],
							"canonicalName": "Breed",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1850,
							"linearizedBaseContracts": [
								1850,
								2169,
								2203,
								2118,
								2848,
								2860,
								1955,
								2824
							],
							"name": "Breed",
							"nameLocation": "6657:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 855,
									"libraryName": {
										"id": 853,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3172,
										"src": "6702:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6696:27:0",
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6715:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 859,
									"libraryName": {
										"id": 856,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2505,
										"src": "6735:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6729:27:0",
									"typeName": {
										"id": 858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 857,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2281,
											"src": "6749:6:0"
										},
										"referencedDeclaration": 2281,
										"src": "6749:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2281",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Breed.NftInfo",
									"id": 864,
									"members": [
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "6798:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 864,
											"src": "6790:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 860,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6790:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "6832:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 864,
											"src": "6824:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6824:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NftInfo",
									"nameLocation": "6771:7:0",
									"nodeType": "StructDefinition",
									"scope": 1850,
									"src": "6764:83:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Breed.UserInfo",
									"id": 881,
									"members": [
										{
											"constant": false,
											"id": 867,
											"mutability": "mutable",
											"name": "nftA",
											"nameLocation": "6894:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6886:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
												"typeString": "struct Breed.NftInfo"
											},
											"typeName": {
												"id": 866,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 865,
													"name": "NftInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 864,
													"src": "6886:7:0"
												},
												"referencedDeclaration": 864,
												"src": "6886:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
													"typeString": "struct Breed.NftInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "nftB",
											"nameLocation": "6917:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6909:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
												"typeString": "struct Breed.NftInfo"
											},
											"typeName": {
												"id": 869,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 868,
													"name": "NftInfo",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 864,
													"src": "6909:7:0"
												},
												"referencedDeclaration": 864,
												"src": "6909:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_NftInfo_$864_storage_ptr",
													"typeString": "struct Breed.NftInfo"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "t",
											"nameLocation": "6940:1:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6932:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 871,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6932:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "6960:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "6952:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6952:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 880,
											"mutability": "mutable",
											"name": "nftBreedTimes",
											"nameLocation": "7079:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 881,
											"src": "7034:58:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(uint256 => uint256))"
											},
											"typeName": {
												"id": 879,
												"keyType": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7042:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "7034:44:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(uint256 => uint256))"
												},
												"valueType": {
													"id": 878,
													"keyType": {
														"id": 876,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "7061:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Mapping",
													"src": "7053:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
														"typeString": "mapping(uint256 => uint256)"
													},
													"valueType": {
														"id": 877,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "7072:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "6866:8:0",
									"nodeType": "StructDefinition",
									"scope": 1850,
									"src": "6859:241:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 884,
									"mutability": "mutable",
									"name": "breedInterval",
									"nameLocation": "7124:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7108:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7108:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37323030",
										"id": 883,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7140:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7200_by_1",
											"typeString": "int_const 7200"
										},
										"value": "7200"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "647846a5",
									"id": 887,
									"mutability": "mutable",
									"name": "feeToken",
									"nameLocation": "7165:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7151:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$2281",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 886,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 885,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2281,
											"src": "7151:6:0"
										},
										"referencedDeclaration": 2281,
										"src": "7151:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$2281",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "feeAddress",
									"nameLocation": "7196:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7180:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7180:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 891,
									"mutability": "mutable",
									"name": "feeAmount",
									"nameLocation": "7229:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7213:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7213:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 894,
									"mutability": "mutable",
									"name": "randNonce",
									"nameLocation": "7250:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7245:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 892,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "7245:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 893,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7262:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 896,
									"mutability": "mutable",
									"name": "luckybeeMintAddress",
									"nameLocation": "7288:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7272:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 895,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7272:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 898,
									"mutability": "mutable",
									"name": "hashbeeMintAddress",
									"nameLocation": "7330:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7314:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 897,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7314:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 900,
									"mutability": "mutable",
									"name": "knightbeeMintAddress",
									"nameLocation": "7371:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7355:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 899,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7355:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 902,
									"mutability": "mutable",
									"name": "queenbeeMintAddress",
									"nameLocation": "7414:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7398:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 901,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "7398:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1df0c04c",
									"id": 905,
									"mutability": "mutable",
									"name": "JPDA1",
									"nameLocation": "7455:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7440:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 903,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7440:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537",
										"id": 904,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7463:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57_by_1",
											"typeString": "int_const 57"
										},
										"value": "57"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ec3c6dee",
									"id": 908,
									"mutability": "mutable",
									"name": "JPDA2",
									"nameLocation": "7487:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7472:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 906,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7472:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3832",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7495:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_82_by_1",
											"typeString": "int_const 82"
										},
										"value": "82"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed9371d7",
									"id": 911,
									"mutability": "mutable",
									"name": "JPDA3",
									"nameLocation": "7519:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7504:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 909,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7504:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7527:3:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 916,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "7581:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7545:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
										"typeString": "mapping(address => struct Breed.UserInfo)"
									},
									"typeName": {
										"id": 915,
										"keyType": {
											"id": 912,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7553:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7545:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
											"typeString": "mapping(address => struct Breed.UserInfo)"
										},
										"valueType": {
											"id": 914,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 913,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 881,
												"src": "7564:8:0"
											},
											"referencedDeclaration": 881,
											"src": "7564:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
												"typeString": "struct Breed.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 921,
									"mutability": "mutable",
									"name": "nftIds",
									"nameLocation": "7631:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7593:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 920,
										"keyType": {
											"id": 917,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7601:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7593:29:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueType": {
											"baseType": {
												"id": 918,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7612:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 919,
											"nodeType": "ArrayTypeName",
											"src": "7612:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 925,
									"mutability": "mutable",
									"name": "breedTimeLimit",
									"nameLocation": "7677:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1850,
									"src": "7644:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 924,
										"keyType": {
											"id": 922,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7652:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7644:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 923,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "7663:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "e399cb3f10d63d6491d8cd021aec1fd1690f49c5ff42afe1002d5c4c07b63b60",
									"id": 937,
									"name": "Mating",
									"nameLocation": "7706:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7713:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7713:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "7751:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7735:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "7781:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7765:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "7803:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7795:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "7821:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "7813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7712:118:0"
									},
									"src": "7700:131:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9c625ee4c8be2eb2762502530f265ad033d6ed61845f91ea555a4a271e73ee9d",
									"id": 949,
									"name": "Cancel",
									"nameLocation": "7843:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7866:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7850:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "7888:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7872:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7872:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "7918:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7902:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7902:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "7940:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "7958:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "7950:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7849:118:0"
									},
									"src": "7837:131:0"
								},
								{
									"anonymous": false,
									"eventSelector": "70eb43c4a8ae8c40502dcf22436c509c28d6ff421cf07c491be56984bd987068",
									"id": 957,
									"name": "Claim",
									"nameLocation": "7980:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "8002:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7986:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7986:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "8024:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "8008:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "8037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7985:68:0"
									},
									"src": "7974:80:0"
								},
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "8080:8:0",
										"statements": []
									},
									"id": 961,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8077:2:0"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8080:0:0"
									},
									"scope": 1850,
									"src": "8066:22:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "8222:388:0",
										"statements": [
											{
												"expression": {
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 974,
														"name": "luckybeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "8233:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 975,
														"name": "luckybeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8255:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8233:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "8233:34:0"
											},
											{
												"expression": {
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 978,
														"name": "hashbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "8278:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 979,
														"name": "hashbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "8299:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8278:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 981,
												"nodeType": "ExpressionStatement",
												"src": "8278:32:0"
											},
											{
												"expression": {
													"id": 984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 982,
														"name": "knightbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "8321:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 983,
														"name": "knightbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "8344:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8321:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 985,
												"nodeType": "ExpressionStatement",
												"src": "8321:36:0"
											},
											{
												"expression": {
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 986,
														"name": "queenbeeMintAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "8368:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 987,
														"name": "queenbeeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "8390:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8368:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "8368:34:0"
											},
											{
												"expression": {
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 990,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8413:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 992,
														"indexExpression": {
															"id": 991,
															"name": "luckybeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "8428:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8413:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8451:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8413:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "8413:39:0"
											},
											{
												"expression": {
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 996,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8463:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 997,
															"name": "hashbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "8478:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8463:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8463:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "8463:38:0"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1002,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8512:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1004,
														"indexExpression": {
															"id": 1003,
															"name": "knightbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 900,
															"src": "8527:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8512:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8512:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "8512:40:0"
											},
											{
												"expression": {
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1008,
															"name": "breedTimeLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "8563:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1010,
														"indexExpression": {
															"id": 1009,
															"name": "queenbeeMintAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "8578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8563:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8601:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "8563:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "8563:39:0"
											}
										]
									},
									"functionSelector": "087bc228",
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 972,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 971,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "8212:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8212:9:0"
										}
									],
									"name": "setConfig",
									"nameLocation": "8105:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "luckybeeMint",
												"nameLocation": "8123:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8115:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "hashbeeMint",
												"nameLocation": "8145:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8137:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "knightbeeMint",
												"nameLocation": "8166:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8158:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "queenbeeMint",
												"nameLocation": "8189:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "8181:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8114:88:0"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8222:0:0"
									},
									"scope": 1850,
									"src": "8096:514:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "8702:83:0",
										"statements": [
											{
												"expression": {
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1026,
														"name": "JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1027,
														"name": "_JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "8721:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8713:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1029,
												"nodeType": "ExpressionStatement",
												"src": "8713:14:0"
											},
											{
												"expression": {
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1030,
														"name": "JPDA2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "8738:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1031,
														"name": "_JPDA2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "8746:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "8738:14:0"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1034,
														"name": "JPDA3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "8763:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "_JPDA3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8771:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8763:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "8763:14:0"
											}
										]
									},
									"functionSelector": "3f3ed4ca",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1024,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1023,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "8692:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8692:9:0"
										}
									],
									"name": "setJPDA",
									"nameLocation": "8627:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "_JPDA1",
												"nameLocation": "8643:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "_JPDA2",
												"nameLocation": "8659:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8651:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "_JPDA3",
												"nameLocation": "8675:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "8667:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:48:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8702:0:0"
									},
									"scope": 1850,
									"src": "8618:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "8943:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1055,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "8985:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1057,
															"indexExpression": {
																"id": 1056,
																"name": "nftContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "8992:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8985:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1058,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "9013:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1052,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8954:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8954:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8954:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "8954:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9079:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9079:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1069,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9099:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9091:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1067,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9091:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9091:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1071,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "9106:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1072,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "9111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9120:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1062,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "9037:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1061,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "9028:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9028:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "9028:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9028:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "9028:95:0"
											}
										]
									},
									"functionSelector": "63c66891",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1050,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1049,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "8933:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8933:9:0"
										}
									],
									"name": "addNFTBatch",
									"nameLocation": "8802:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "8832:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8824:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "8878:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8861:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1042,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1043,
													"nodeType": "ArrayTypeName",
													"src": "8861:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8909:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8892:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1045,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1046,
													"nodeType": "ArrayTypeName",
													"src": "8892:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8813:110:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8943:0:0"
									},
									"scope": 1850,
									"src": "8793:338:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "9273:488:0",
										"statements": [
											{
												"assignments": [
													1090
												],
												"declarations": [
													{
														"constant": false,
														"id": 1090,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "9301:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "9284:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1088,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1089,
															"nodeType": "ArrayTypeName",
															"src": "9284:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9321:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9307:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1091,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9311:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1092,
															"nodeType": "ArrayTypeName",
															"src": "9311:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9307:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9284:47:0"
											},
											{
												"assignments": [
													1101
												],
												"declarations": [
													{
														"constant": false,
														"id": 1101,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "9359:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "9342:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9342:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1100,
															"nodeType": "ArrayTypeName",
															"src": "9342:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"arguments": [
														{
															"id": 1105,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "9383:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "9369:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1102,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"nodeType": "ArrayTypeName",
															"src": "9373:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9369:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9342:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "9412:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9420:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9412:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7374617274206d757374206d6f7265207468616e207a65726f",
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9423:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270",
																"typeString": "literal_string \"start must more than zero\""
															},
															"value": "start must more than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b8827adfc7e597013734178998e4530e73c11ac98d0cf15295cc3388fdfc270",
																"typeString": "literal_string \"start must more than zero\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9404:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9404:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "9404:47:0"
											},
											{
												"body": {
													"id": 1153,
													"nodeType": "Block",
													"src": "9521:127:0",
													"statements": [
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1130,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1090,
																		"src": "9536:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1131,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "9540:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1132,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "9542:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9540:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9536:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1135,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "9551:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9536:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "9536:16:0"
														},
														{
															"expression": {
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1138,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "9567:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1142,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1139,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1116,
																			"src": "9575:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1140,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1081,
																			"src": "9577:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9575:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9567:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9586:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9567:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "9567:20:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1150,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "9634:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"id": 1146,
																			"name": "nftIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 921,
																			"src": "9602:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																				"typeString": "mapping(address => uint256[] storage ref)"
																			}
																		},
																		"id": 1148,
																		"indexExpression": {
																			"id": 1147,
																			"name": "nftContractAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1079,
																			"src": "9609:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9602:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "9602:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9602:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "9602:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "9504:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1125,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "9509:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9504:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"initializationExpression": {
													"assignments": [
														1116
													],
													"declarations": [
														{
															"constant": false,
															"id": 1116,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9475:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1154,
															"src": "9467:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1115,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1123,
													"initialValue": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1117,
																		"name": "idsNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1083,
																		"src": "9480:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1118,
																		"name": "start",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "9492:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9480:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9500:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9480:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1122,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9479:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9467:35:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "9516:3:0",
														"subExpression": {
															"id": 1127,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "9516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1129,
													"nodeType": "ExpressionStatement",
													"src": "9516:3:0"
												},
												"nodeType": "ForStatement",
												"src": "9462:186:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1159,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9709:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9709:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1163,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "9729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9721:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9721:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9721:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1165,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "9736:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1166,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "9741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9750:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1156,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "9667:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1155,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "9658:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9658:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "9658:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9658:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "9658:95:0"
											}
										]
									},
									"functionSelector": "4b02218f",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addNftBatchWithNumber",
									"nameLocation": "9148:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "9188:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9180:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "9225:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9217:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "9249:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "9241:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9169:96:0"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9273:0:0"
									},
									"scope": 1850,
									"src": "9139:622:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "9844:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1178,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "9859:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1180,
															"indexExpression": {
																"id": 1179,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "9865:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9859:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1181,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "9859:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9889:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9859:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "IfStatement",
												"src": "9855:72:0",
												"trueBody": {
													"id": 1186,
													"nodeType": "Block",
													"src": "9892:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9914:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1177,
															"id": 1185,
															"nodeType": "Return",
															"src": "9907:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1188,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "9944:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1190,
															"indexExpression": {
																"id": 1189,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1173,
																"src": "9950:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9944:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "9944:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1192,
														"name": "breedInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "9973:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9944:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1194,
												"nodeType": "Return",
												"src": "9937:49:0"
											}
										]
									},
									"functionSelector": "5dbc3838",
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserOvipositionTime",
									"nameLocation": "9778:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9809:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9801:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9801:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9800:14:0"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "9836:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9835:9:0"
									},
									"scope": 1850,
									"src": "9769:225:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1251,
										"nodeType": "Block",
										"src": "10098:257:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1209,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "10113:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																	"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																}
															},
															"id": 1211,
															"indexExpression": {
																"id": 1210,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "10119:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10113:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																"typeString": "struct Breed.UserInfo storage ref"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "10113:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10113:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1228,
												"nodeType": "IfStatement",
												"src": "10109:101:0",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "10146:64:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10169:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10169:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10169:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10189:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10181:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1219,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10181:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10181:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 1223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10193:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"hexValue": "30",
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10196:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1225,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10168:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
																	"typeString": "tuple(address,address,int_const 0,int_const 0)"
																}
															},
															"functionReturnParameters": 1208,
															"id": 1226,
															"nodeType": "Return",
															"src": "10161:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1229,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10228:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1231,
																	"indexExpression": {
																		"id": 1230,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10234:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10228:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "10228:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "10228:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1234,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10262:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1236,
																	"indexExpression": {
																		"id": 1235,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10268:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10262:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "10262:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "10262:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10296:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1241,
																	"indexExpression": {
																		"id": 1240,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10302:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10296:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "10296:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1243,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "10296:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"baseExpression": {
																		"id": 1244,
																		"name": "users",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "10322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
																			"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
																		}
																	},
																	"id": 1246,
																	"indexExpression": {
																		"id": 1245,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "10328:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10322:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage",
																		"typeString": "struct Breed.UserInfo storage ref"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "10322:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "10322:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1249,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10227:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(address,address,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1208,
												"id": 1250,
												"nodeType": "Return",
												"src": "10220:127:0"
											}
										]
									},
									"functionSelector": "5c39331c",
									"id": 1252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserMatingNft",
									"nameLocation": "10011:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "10036:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10028:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10027:14:0"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10072:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10072:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10081:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "10090:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10062:36:0"
									},
									"scope": 1850,
									"src": "10002:353:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "10469:1689:0",
										"statements": [
											{
												"assignments": [
													1265
												],
												"declarations": [
													{
														"constant": false,
														"id": 1265,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10497:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "10480:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1264,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1263,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "10480:8:0"
															},
															"referencedDeclaration": 881,
															"src": "10480:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"baseExpression": {
														"id": 1266,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10504:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1269,
													"indexExpression": {
														"expression": {
															"id": 1267,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10510:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10510:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10504:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10480:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1272,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "10540:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "10540:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10563:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10540:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206272656564206f6e636520617420612074696d65",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10566:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26",
																"typeString": "literal_string \"Only breed once at a time\""
															},
															"value": "Only breed once at a time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66c474292747850bed1f1158b35c0c522d862a96a310265382a23f7bd43d9a26",
																"typeString": "literal_string \"Only breed once at a time\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10532:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "10532:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1280,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "10613:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftBreedTimes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "10613:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1283,
																	"indexExpression": {
																		"id": 1282,
																		"name": "nftContractA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "10632:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10613:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1285,
																"indexExpression": {
																	"id": 1284,
																	"name": "tokenIdA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "10646:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10613:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1286,
																	"name": "breedTimeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10658:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1288,
																"indexExpression": {
																	"id": 1287,
																	"name": "nftContractA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10673:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10658:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10613:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d65206c696d6974",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10688:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															},
															"value": "Time limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10605:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "10605:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1294,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1265,
																			"src": "10720:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftBreedTimes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 880,
																		"src": "10720:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1297,
																	"indexExpression": {
																		"id": 1296,
																		"name": "nftContractB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "10739:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10720:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1299,
																"indexExpression": {
																	"id": 1298,
																	"name": "tokenIdB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1260,
																	"src": "10753:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10720:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"baseExpression": {
																	"id": 1300,
																	"name": "breedTimeLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "10765:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1302,
																"indexExpression": {
																	"id": 1301,
																	"name": "nftContractB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "10780:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10765:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10720:73:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54696d65206c696d6974",
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10795:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															},
															"value": "Time limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fedc7ff2da9982c61bc80798ea4f6339fbbb5182e5e5314ec6bfec3c2391bee",
																"typeString": "literal_string \"Time limit\""
															}
														],
														"id": 1293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10712:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1306,
												"nodeType": "ExpressionStatement",
												"src": "10712:96:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10861:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10861:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "feeAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "10886:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "feeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "10911:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1307,
															"name": "feeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "10821:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2338,
														"src": "10821:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$2281_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10821:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "10821:110:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1320,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10982:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10982:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1324,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11002:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10994:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10994:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10994:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "tokenIdA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "11009:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11019:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11022:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1317,
																	"name": "nftContractA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "10951:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1316,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "10942:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10942:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "10942:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10942:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "10942:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1335,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11076:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11076:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1339,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11096:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11088:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1337,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11088:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11088:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1341,
															"name": "tokenIdB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "11103:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11113:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11116:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1332,
																	"name": "nftContractB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "11045:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1331,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "11036:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11036:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "11036:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11036:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1345,
												"nodeType": "ExpressionStatement",
												"src": "11036:83:0"
											},
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1346,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "11140:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "11140:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1349,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11162:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11140:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "11140:37:0"
											},
											{
												"expression": {
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1353,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11188:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 867,
															"src": "11188:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "11188:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1358,
														"name": "nftContractA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "11216:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11188:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1360,
												"nodeType": "ExpressionStatement",
												"src": "11188:40:0"
											},
											{
												"expression": {
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1361,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11239:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftA",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 867,
															"src": "11239:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "11239:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1366,
														"name": "tokenIdA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1258,
														"src": "11259:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11239:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "11239:28:0"
											},
											{
												"expression": {
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1369,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11278:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftB",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "11278:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "contractAddress",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "11278:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1374,
														"name": "nftContractB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "11306:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11278:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1376,
												"nodeType": "ExpressionStatement",
												"src": "11278:40:0"
											},
											{
												"expression": {
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"expression": {
																"id": 1377,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1265,
																"src": "11329:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																	"typeString": "struct Breed.UserInfo storage pointer"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "nftB",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 870,
															"src": "11329:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																"typeString": "struct Breed.NftInfo storage ref"
															}
														},
														"id": 1381,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "tokenId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "11329:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1382,
														"name": "tokenIdB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1260,
														"src": "11349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11329:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1384,
												"nodeType": "ExpressionStatement",
												"src": "11329:28:0"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "random",
														"nameLocation": "11375:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "11370:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1385,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "11370:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1402,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1392,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11416:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11416:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1394,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "11433:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "11433:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1396,
																				"name": "randNonce",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "11445:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1390,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "11399:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "11399:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11399:56:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1389,
																	"name": "keccak256",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967288,
																	"src": "11389:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																		"typeString": "function (bytes memory) pure returns (bytes32)"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11389:67:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11384:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1387,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "11384:4:0",
																"typeDescriptions": {}
															}
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11384:73:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11460:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "11384:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11370:93:0"
											},
											{
												"expression": {
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "11474:11:0",
													"subExpression": {
														"id": 1403,
														"name": "randNonce",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "11474:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "11474:11:0"
											},
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "nftMint",
														"nameLocation": "11506:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "11498:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1406,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11498:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1408,
												"nodeType": "VariableDeclarationStatement",
												"src": "11498:15:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1409,
														"name": "random",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "11545:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1410,
														"name": "JPDA1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "11554:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11545:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1417,
																"name": "random",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "11627:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1418,
																"name": "JPDA1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 905,
																"src": "11637:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11627:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1420,
																"name": "random",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1386,
																"src": "11646:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1421,
																"name": "JPDA2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "11655:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11646:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "11627:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1429,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "11728:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1430,
																	"name": "JPDA2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "11738:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11728:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1432,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "11747:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1433,
																	"name": "JPDA3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "11756:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11747:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "11728:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1445,
															"nodeType": "Block",
															"src": "11826:56:0",
															"statements": [
																{
																	"expression": {
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1441,
																			"name": "nftMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "11841:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1442,
																			"name": "queenbeeMintAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 902,
																			"src": "11851:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11841:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1444,
																	"nodeType": "ExpressionStatement",
																	"src": "11841:29:0"
																}
															]
														},
														"id": 1446,
														"nodeType": "IfStatement",
														"src": "11724:158:0",
														"trueBody": {
															"id": 1440,
															"nodeType": "Block",
															"src": "11763:57:0",
															"statements": [
																{
																	"expression": {
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "nftMint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1407,
																			"src": "11778:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1437,
																			"name": "knightbeeMintAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "11788:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "11778:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1439,
																	"nodeType": "ExpressionStatement",
																	"src": "11778:30:0"
																}
															]
														}
													},
													"id": 1447,
													"nodeType": "IfStatement",
													"src": "11623:259:0",
													"trueBody": {
														"id": 1428,
														"nodeType": "Block",
														"src": "11663:55:0",
														"statements": [
															{
																"expression": {
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1424,
																		"name": "nftMint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "11678:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 1425,
																		"name": "hashbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "11688:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "11678:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1427,
																"nodeType": "ExpressionStatement",
																"src": "11678:28:0"
															}
														]
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "11542:340:0",
												"trueBody": {
													"id": 1416,
													"nodeType": "Block",
													"src": "11561:56:0",
													"statements": [
														{
															"expression": {
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1412,
																	"name": "nftMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "11576:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1413,
																	"name": "luckybeeMintAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "11586:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "11576:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1415,
															"nodeType": "ExpressionStatement",
															"src": "11576:29:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1449,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "11892:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "t",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 872,
														"src": "11892:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1452,
														"name": "nftMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "11901:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11892:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "11892:16:0"
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1455,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "11919:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftBreedTimes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "11919:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1460,
															"indexExpression": {
																"id": 1457,
																"name": "nftContractA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1254,
																"src": "11938:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11919:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1461,
														"indexExpression": {
															"id": 1458,
															"name": "tokenIdA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "11952:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11919:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11965:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11919:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "11919:47:0"
											},
											{
												"expression": {
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1465,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "11977:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftBreedTimes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 880,
																"src": "11977:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1470,
															"indexExpression": {
																"id": 1467,
																"name": "nftContractB",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "11996:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11977:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1471,
														"indexExpression": {
															"id": 1468,
															"name": "tokenIdB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "12010:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11977:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12023:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "11977:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "11977:47:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12047:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12047:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1478,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12059:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12059:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12059:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1481,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12086:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12086:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12086:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1484,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12113:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12113:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12113:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1487,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "12132:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1488,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12132:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12132:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1475,
														"name": "Mating",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "12040:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "12035:115:0"
											}
										]
									},
									"functionSelector": "bf90fc1e",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mating",
									"nameLocation": "10372:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "nftContractA",
												"nameLocation": "10388:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "10380:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "nftContractB",
												"nameLocation": "10410:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "10402:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "tokenIdA",
												"nameLocation": "10432:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "10424:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "tokenIdB",
												"nameLocation": "10450:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "10442:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10378:81:0"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10469:0:0"
									},
									"scope": 1850,
									"src": "10363:1795:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "12191:518:0",
										"statements": [
											{
												"assignments": [
													1498
												],
												"declarations": [
													{
														"constant": false,
														"id": 1498,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12219:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "12202:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1497,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1496,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "12202:8:0"
															},
															"referencedDeclaration": 881,
															"src": "12202:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1503,
												"initialValue": {
													"baseExpression": {
														"id": 1499,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "12226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1502,
													"indexExpression": {
														"expression": {
															"id": 1500,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12232:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12232:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12226:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12202:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1508,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1505,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12262:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1506,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "12262:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12262:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207374617274206d6174696e67",
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12288:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															},
															"value": "not start mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															}
														],
														"id": 1504,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12254:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12254:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "12254:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12381:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12373:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12373:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12373:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12388:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12388:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1524,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12400:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12400:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1526,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12400:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12419:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12422:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1513,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "12329:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftA",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 867,
																		"src": "12329:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																			"typeString": "struct Breed.NftInfo storage ref"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "12329:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1512,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "12320:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12320:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "12320:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12320:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1530,
												"nodeType": "ExpressionStatement",
												"src": "12320:105:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1539,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12497:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12489:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1537,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12489:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12489:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1541,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12504:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12504:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1543,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12516:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12516:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1545,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12516:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12535:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12538:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1532,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "12445:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																				"typeString": "struct Breed.UserInfo storage pointer"
																			}
																		},
																		"id": 1533,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "nftB",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 870,
																		"src": "12445:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																			"typeString": "struct Breed.NftInfo storage ref"
																		}
																	},
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 861,
																	"src": "12445:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1531,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "12436:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12436:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "12436:52:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12436:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "12436:105:0"
											},
											{
												"expression": {
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1550,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "12552:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "12552:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12574:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12552:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "12552:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1557,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12598:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12598:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1559,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12610:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12610:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12610:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1562,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12637:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12637:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "12637:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1565,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftA",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 867,
																"src": "12664:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12664:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1568,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "12683:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "nftB",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 870,
																"src": "12683:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_NftInfo_$864_storage",
																	"typeString": "struct Breed.NftInfo storage ref"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 863,
															"src": "12683:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1556,
														"name": "Cancel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "12591:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12591:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1572,
												"nodeType": "EmitStatement",
												"src": "12586:115:0"
											}
										]
									},
									"functionSelector": "ea8a1af0",
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "12175:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12181:2:0"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12191:0:0"
									},
									"scope": 1850,
									"src": "12166:543:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1655,
										"nodeType": "Block",
										"src": "12741:614:0",
										"statements": [
											{
												"assignments": [
													1578
												],
												"declarations": [
													{
														"constant": false,
														"id": 1578,
														"mutability": "mutable",
														"name": "nowTimestamp",
														"nameLocation": "12760:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "12752:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12752:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1581,
												"initialValue": {
													"expression": {
														"id": 1579,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "12775:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "12775:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12752:38:0"
											},
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "12818:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "12801:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1583,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1582,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "12801:8:0"
															},
															"referencedDeclaration": 881,
															"src": "12801:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"baseExpression": {
														"id": 1585,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "12825:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1588,
													"indexExpression": {
														"expression": {
															"id": 1586,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12831:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12831:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12825:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12801:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1591,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "12861:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																		"typeString": "struct Breed.UserInfo storage pointer"
																	}
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startTimestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 874,
																"src": "12861:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12884:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12861:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74207374617274206d6174696e67",
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12887:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															},
															"value": "not start mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d370642d1a4643ac78be2b6910ef4caa3b8a9931034fd2d4efb2016219a73ef4",
																"typeString": "literal_string \"not start mating\""
															}
														],
														"id": 1590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12853:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12853:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "12853:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1599,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1584,
																		"src": "12925:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																			"typeString": "struct Breed.UserInfo storage pointer"
																		}
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 874,
																	"src": "12925:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1601,
																	"name": "breedInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 884,
																	"src": "12947:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12925:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1603,
																"name": "nowTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1578,
																"src": "12964:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12925:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742066696e697368206d6174696e67",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12978:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5",
																"typeString": "literal_string \"not finish mating\""
															},
															"value": "not finish mating"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f2120006d80e35714d3d694113060d1ff28bd5f3cc911f25fab8be62cbd84f5",
																"typeString": "literal_string \"not finish mating\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12917:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "12917:81:0"
											},
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "nftMint",
														"nameLocation": "13019:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "13011:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1608,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13011:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"expression": {
														"id": 1610,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "13029:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo storage pointer"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "t",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 872,
													"src": "13029:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13011:24:0"
											},
											{
												"assignments": [
													1614,
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1614,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "13055:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "13047:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1613,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13047:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "13075:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1655,
														"src": "13067:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1619,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13112:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1621,
															"indexExpression": {
																"id": 1620,
																"name": "nftMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "13119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13112:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1617,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "13084:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "13084:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13084:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13046:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1627,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13177:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1629,
															"indexExpression": {
																"id": 1628,
																"name": "nftMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1609,
																"src": "13184:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13177:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1630,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1616,
															"src": "13194:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1624,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "13139:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeByIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "13139:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13139:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "13139:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13256:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13248:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13248:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13248:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1641,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13263:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13263:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1643,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "13275:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13290:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1634,
																	"name": "nftMint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "13222:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1633,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "13213:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13213:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2060,
														"src": "13213:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13213:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "ExpressionStatement",
												"src": "13213:80:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1649,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13315:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13315:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1651,
															"name": "nftMint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "13327:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1652,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "13336:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1648,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "13309:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13309:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1654,
												"nodeType": "EmitStatement",
												"src": "13304:43:0"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "12726:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12731:2:0"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12741:0:0"
									},
									"scope": 1850,
									"src": "12717:638:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "13428:44:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1663,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1665,
														"indexExpression": {
															"id": 1664,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1658,
															"src": "13453:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13446:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13446:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1662,
												"id": 1667,
												"nodeType": "Return",
												"src": "13439:25:0"
											}
										]
									},
									"functionSelector": "c971ebb3",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nftCount",
									"nameLocation": "13376:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "13393:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "13385:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13385:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13384:13:0"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "13419:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13418:9:0"
									},
									"scope": 1850,
									"src": "13367:105:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "13549:390:0",
										"statements": [
											{
												"assignments": [
													1677
												],
												"declarations": [
													{
														"constant": false,
														"id": 1677,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "13568:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "13560:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1676,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13560:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1682,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1678,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13577:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1680,
														"indexExpression": {
															"id": 1679,
															"name": "nftContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "13584:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13577:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "13577:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13560:50:0"
											},
											{
												"assignments": [
													1687
												],
												"declarations": [
													{
														"constant": false,
														"id": 1687,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "13638:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1734,
														"src": "13621:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1685,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13621:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1686,
															"nodeType": "ArrayTypeName",
															"src": "13621:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"arguments": [
														{
															"id": 1691,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1677,
															"src": "13662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "13648:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1688,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13652:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1689,
															"nodeType": "ArrayTypeName",
															"src": "13652:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13648:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13621:48:0"
											},
											{
												"body": {
													"id": 1710,
													"nodeType": "Block",
													"src": "13717:41:0",
													"statements": [
														{
															"expression": {
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1704,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1687,
																		"src": "13732:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1706,
																	"indexExpression": {
																		"id": 1705,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "13740:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13732:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13745:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13732:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1709,
															"nodeType": "ExpressionStatement",
															"src": "13732:14:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1698,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "13700:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1699,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "13704:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13700:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"initializationExpression": {
													"assignments": [
														1695
													],
													"declarations": [
														{
															"constant": false,
															"id": 1695,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "13693:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1711,
															"src": "13685:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1694,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13685:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1697,
													"initialValue": {
														"hexValue": "30",
														"id": 1696,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "13685:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "13712:3:0",
														"subExpression": {
															"id": 1701,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "13712:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1703,
													"nodeType": "ExpressionStatement",
													"src": "13712:3:0"
												},
												"nodeType": "ForStatement",
												"src": "13680:78:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13828:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Breed_$1850",
																		"typeString": "contract Breed"
																	}
																],
																"id": 1717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13820:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13820:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1720,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13835:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13835:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1722,
																"name": "nftIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "13847:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 1724,
															"indexExpression": {
																"id": 1723,
																"name": "nftContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1671,
																"src": "13854:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13847:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1725,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "13875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13884:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1713,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1671,
																	"src": "13777:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1712,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2077,
																"src": "13768:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$2077_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1714,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13768:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$2077",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2076,
														"src": "13768:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13768:119:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "13768:119:0"
											},
											{
												"expression": {
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "13898:33:0",
													"subExpression": {
														"baseExpression": {
															"id": 1729,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																"typeString": "mapping(address => uint256[] storage ref)"
															}
														},
														"id": 1731,
														"indexExpression": {
															"id": 1730,
															"name": "nftContractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1671,
															"src": "13912:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13905:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "13898:33:0"
											}
										]
									},
									"functionSelector": "c4091443",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1673,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "13539:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13539:9:0"
										}
									],
									"name": "urgentWithdraw",
									"nameLocation": "13489:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "13512:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "13504:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13504:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13503:28:0"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13549:0:0"
									},
									"scope": 1850,
									"src": "13480:459:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1787,
										"nodeType": "Block",
										"src": "14005:355:0",
										"statements": [
											{
												"assignments": [
													1746
												],
												"declarations": [
													{
														"constant": false,
														"id": 1746,
														"mutability": "mutable",
														"name": "nftStore",
														"nameLocation": "14033:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1787,
														"src": "14016:25:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
															"typeString": "struct Breed.UserInfo"
														},
														"typeName": {
															"id": 1745,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1744,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 881,
																"src": "14016:8:0"
															},
															"referencedDeclaration": 881,
															"src": "14016:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1747,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "14044:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$881_storage_$",
															"typeString": "mapping(address => struct Breed.UserInfo storage ref)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"id": 1748,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "14050:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14044:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$881_storage",
														"typeString": "struct Breed.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14016:37:0"
											},
											{
												"expression": {
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1751,
															"name": "nftStore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "14064:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "t",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 872,
														"src": "14064:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1754,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "14077:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14064:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1756,
												"nodeType": "ExpressionStatement",
												"src": "14064:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1757,
															"name": "nftStore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "14095:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$881_storage_ptr",
																"typeString": "struct Breed.UserInfo storage pointer"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 874,
														"src": "14095:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14122:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14095:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1786,
												"nodeType": "IfStatement",
												"src": "14091:262:0",
												"trueBody": {
													"id": 1785,
													"nodeType": "Block",
													"src": "14125:228:0",
													"statements": [
														{
															"expression": {
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1761,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14140:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1763,
																	"indexExpression": {
																		"id": 1762,
																		"name": "luckybeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 896,
																		"src": "14155:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14140:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14178:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14140:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1766,
															"nodeType": "ExpressionStatement",
															"src": "14140:39:0"
														},
														{
															"expression": {
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1767,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14194:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1769,
																	"indexExpression": {
																		"id": 1768,
																		"name": "hashbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 898,
																		"src": "14209:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14194:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14194:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1772,
															"nodeType": "ExpressionStatement",
															"src": "14194:38:0"
														},
														{
															"expression": {
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1773,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14247:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1775,
																	"indexExpression": {
																		"id": 1774,
																		"name": "knightbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 900,
																		"src": "14262:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14247:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14286:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14247:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1778,
															"nodeType": "ExpressionStatement",
															"src": "14247:40:0"
														},
														{
															"expression": {
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1779,
																		"name": "breedTimeLimit",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "14302:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1781,
																	"indexExpression": {
																		"id": 1780,
																		"name": "queenbeeMintAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 902,
																		"src": "14317:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14302:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "14302:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1784,
															"nodeType": "ExpressionStatement",
															"src": "14302:39:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "9fdd3a3f",
									"id": 1788,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1741,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "13995:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13995:9:0"
										}
									],
									"name": "setNFT",
									"nameLocation": "13956:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "nft",
												"nameLocation": "13971:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "13963:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13984:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "13976:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13976:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13962:25:0"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14005:0:0"
									},
									"scope": 1850,
									"src": "13947:413:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1799,
										"nodeType": "Block",
										"src": "14421:35:0",
										"statements": [
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1795,
														"name": "feeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "14432:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1796,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "14445:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14432:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "14432:16:0"
											}
										]
									},
									"functionSelector": "8705fcd4",
									"id": 1800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1792,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "14411:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14411:9:0"
										}
									],
									"name": "setFeeAddress",
									"nameLocation": "14377:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "14399:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "14391:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1789,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14390:13:0"
									},
									"returnParameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14421:0:0"
									},
									"scope": 1850,
									"src": "14368:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "14519:37:0",
										"statements": [
											{
												"expression": {
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1807,
														"name": "feeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "14530:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1808,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "14542:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14530:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "14530:18:0"
											}
										]
									},
									"functionSelector": "6b392680",
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "14509:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14509:9:0"
										}
									],
									"name": "setFeeAmount",
									"nameLocation": "14473:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "14486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14486:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14485:16:0"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14519:0:0"
									},
									"scope": 1850,
									"src": "14464:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "14622:42:0",
										"statements": [
											{
												"expression": {
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1819,
														"name": "feeToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "14633:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2281",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1821,
																"name": "mint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1814,
																"src": "14651:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1820,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2281,
															"src": "14644:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$2281_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14644:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$2281",
															"typeString": "contract IERC20"
														}
													},
													"src": "14633:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "14633:23:0"
											}
										]
									},
									"functionSelector": "5dada3bb",
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1817,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1816,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "14612:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14612:9:0"
										}
									],
									"name": "setFeeMintAddress",
									"nameLocation": "14573:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "mint",
												"nameLocation": "14599:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "14591:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14591:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14590:14:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14622:0:0"
									},
									"scope": 1850,
									"src": "14564:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "14731:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1833,
															"name": "feeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "14757:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														],
														"id": 1832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14749:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14749:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1835,
												"nodeType": "Return",
												"src": "14742:24:0"
											}
										]
									},
									"functionSelector": "19b8094b",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeMintAddress",
									"nameLocation": "14681:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14698:2:0"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "14722:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14721:9:0"
									},
									"scope": 1850,
									"src": "14672:102:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "14843:43:0",
										"statements": [
											{
												"expression": {
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1844,
														"name": "breedInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "14854:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1845,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "14870:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14854:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1847,
												"nodeType": "ExpressionStatement",
												"src": "14854:24:0"
											}
										]
									},
									"functionSelector": "79c5e977",
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "14833:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "14833:9:0"
										}
									],
									"name": "setBreedInterval",
									"nameLocation": "14791:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "interval",
												"nameLocation": "14816:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "14808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14807:18:0"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14843:0:0"
									},
									"scope": 1850,
									"src": "14782:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1851,
							"src": "6648:8241:0",
							"usedErrors": []
						}
					],
					"src": "59:14830:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2824
						],
						"Ownable": [
							1955
						]
					},
					"id": 1956,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1956,
							"sourceUnit": 2825,
							"src": "112:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1855,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2824,
										"src": "668:7:1"
									},
									"id": 1856,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1854,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1955,
							"linearizedBaseContracts": [
								1955,
								2824
							],
							"name": "Ownable",
							"nameLocation": "657:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1858,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1955,
									"src": "682:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1857,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1864,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "738:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "769:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:1"
									},
									"src": "711:84:1"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "911:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1869,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2814,
																"src": "940:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1868,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "921:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "921:32:1"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1874,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:1"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:1"
									},
									"scope": 1955,
									"src": "897:63:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "1091:30:1",
										"statements": [
											{
												"expression": {
													"id": 1880,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1858,
													"src": "1108:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1879,
												"id": 1881,
												"nodeType": "Return",
												"src": "1101:13:1"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:1"
									},
									"returnParameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "1082:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:1"
									},
									"scope": 1955,
									"src": "1036:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1896,
										"nodeType": "Block",
										"src": "1230:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1887,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1883,
																	"src": "1248:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1889,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2814,
																	"src": "1259:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1894,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:1"
											},
											{
												"id": 1895,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:1"
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1897,
									"name": "onlyOwner",
									"nameLocation": "1218:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:1"
									},
									"src": "1209:117:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "1722:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1904,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1903,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "1732:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:1"
											}
										]
									},
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1901,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1900,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "1712:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:1"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:1"
									},
									"scope": 1955,
									"src": "1668:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "1988:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1920,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1914,
																"src": "2006:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1928,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1930,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "2100:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1929,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "2081:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:1"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1916,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1897,
												"src": "1978:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1945:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:1"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:1"
									},
									"scope": 1955,
									"src": "1918:198:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1953,
										"nodeType": "Block",
										"src": "2333:124:1",
										"statements": [
											{
												"assignments": [
													1941
												],
												"declarations": [
													{
														"constant": false,
														"id": 1941,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1953,
														"src": "2343:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1940,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1943,
												"initialValue": {
													"id": 1942,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1858,
													"src": "2362:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:1"
											},
											{
												"expression": {
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1944,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "2378:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1945,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1937,
														"src": "2387:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1947,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1949,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1941,
															"src": "2431:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1950,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1937,
															"src": "2441:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1948,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "2410:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1952,
												"nodeType": "EmitStatement",
												"src": "2405:45:1"
											}
										]
									},
									"documentation": {
										"id": 1935,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1954,
												"src": "2298:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:1"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:1"
									},
									"scope": 1955,
									"src": "2270:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1956,
							"src": "639:1820:1",
							"usedErrors": []
						}
					],
					"src": "87:2373:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							2077
						],
						"IERC165": [
							2860
						]
					},
					"id": 2078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1957,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2078,
							"sourceUnit": 2861,
							"src": "120:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1960,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2860,
										"src": "357:7:2"
									},
									"id": 1961,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1959,
								"nodeType": "StructuredDocumentation",
								"src": "169:165:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2077,
							"linearizedBaseContracts": [
								2077,
								2860
							],
							"name": "IERC1155",
							"nameLocation": "345:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "371:121:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1974,
									"name": "TransferSingle",
									"nameLocation": "503:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "534:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "518:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "560:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "544:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "582:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "566:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "594:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "586:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "586:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "606:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "598:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "598:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "517:95:2"
									},
									"src": "497:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "619:144:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1989,
									"name": "TransferBatch",
									"nameLocation": "774:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "813:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "797:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "831:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "877:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "861:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "899:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "889:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1982,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "889:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1983,
													"nodeType": "ArrayTypeName",
													"src": "889:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "922:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "912:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1985,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "912:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1986,
													"nodeType": "ArrayTypeName",
													"src": "912:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:147:2"
									},
									"src": "768:167:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "941:147:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1998,
									"name": "ApprovalForAll",
									"nameLocation": "1099:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1130:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "1114:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "1139:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1170:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "1165:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1165:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:66:2"
									},
									"src": "1093:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "1186:343:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 2005,
									"name": "URI",
									"nameLocation": "1540:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1544:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2000,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1544:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1574:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2005,
												"src": "1558:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1558:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:34:2"
									},
									"src": "1534:44:2"
								},
								{
									"documentation": {
										"id": 2006,
										"nodeType": "StructuredDocumentation",
										"src": "1584:173:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 2015,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1771:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1789:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1781:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1806:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1798:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:29:2"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "1833:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1833:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:9:2"
									},
									"scope": 2077,
									"src": "1762:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "1848:188:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2050:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2084:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2065:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2017,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2065:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2018,
													"nodeType": "ArrayTypeName",
													"src": "2065:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2113:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2094:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2020,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2094:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2021,
													"nodeType": "ArrayTypeName",
													"src": "2094:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2064:53:2"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "2165:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2024,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2165:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2025,
													"nodeType": "ArrayTypeName",
													"src": "2165:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2164:18:2"
									},
									"scope": 2077,
									"src": "2041:142:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "2189:248:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 2036,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2451:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2477:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2469:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2492:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "2487:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2487:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:33:2"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2510:0:2"
									},
									"scope": 2077,
									"src": "2442:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2037,
										"nodeType": "StructuredDocumentation",
										"src": "2517:135:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2691:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2683:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2682:35:2"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "2741:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2741:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:6:2"
									},
									"scope": 2077,
									"src": "2657:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "2753:559:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 2060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3326:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3360:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3352:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3382:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3374:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3402:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3394:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3394:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3422:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3414:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2057,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3453:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2060,
												"src": "3438:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3438:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3342:121:2"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3472:0:2"
									},
									"scope": 2077,
									"src": "3317:156:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2061,
										"nodeType": "StructuredDocumentation",
										"src": "3479:390:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3883:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3944:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3936:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3936:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3975:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3956:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2066,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3956:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2067,
													"nodeType": "ArrayTypeName",
													"src": "3956:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "3988:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2069,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3988:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2070,
													"nodeType": "ArrayTypeName",
													"src": "3988:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2073,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "4024:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2072,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4024:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3904:145:2"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4058:0:2"
									},
									"scope": 2077,
									"src": "3874:185:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2078,
							"src": "335:3726:2",
							"usedErrors": []
						}
					],
					"src": "95:3967:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							2118
						],
						"IERC165": [
							2860
						]
					},
					"id": 2119,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 2080,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2119,
							"sourceUnit": 2861,
							"src": "128:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2082,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2860,
										"src": "247:7:3"
									},
									"id": 2083,
									"nodeType": "InheritanceSpecifier",
									"src": "247:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2081,
								"nodeType": "StructuredDocumentation",
								"src": "177:39:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2118,
							"linearizedBaseContracts": [
								2118,
								2860
							],
							"name": "IERC1155Receiver",
							"nameLocation": "227:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2084,
										"nodeType": "StructuredDocumentation",
										"src": "261:816:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 2099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1091:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1126:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1118:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1152:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1144:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1144:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2090,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1174:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1166:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1166:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2092,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1194:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1186:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1186:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1224:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1209:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1209:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1108:126:3"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "1253:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2096,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1253:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1252:8:3"
									},
									"scope": 2118,
									"src": "1082:179:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2100,
										"nodeType": "StructuredDocumentation",
										"src": "1267:977:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 2117,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2258:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2298:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2290:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2316:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2357:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2338:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2105,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2338:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2106,
													"nodeType": "ArrayTypeName",
													"src": "2338:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2389:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2370:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2108,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2370:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2109,
													"nodeType": "ArrayTypeName",
													"src": "2370:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2405:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2111,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2405:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:150:3"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2117,
												"src": "2449:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2449:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:8:3"
									},
									"scope": 2118,
									"src": "2249:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2119,
							"src": "217:2242:3",
							"usedErrors": []
						}
					],
					"src": "103:2357:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							2169
						],
						"ERC1155Receiver": [
							2203
						],
						"ERC165": [
							2848
						],
						"IERC1155Receiver": [
							2118
						],
						"IERC165": [
							2860
						]
					},
					"id": 2170,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2120,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 2121,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2170,
							"sourceUnit": 2204,
							"src": "131:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2123,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2203,
										"src": "230:15:4"
									},
									"id": 2124,
									"nodeType": "InheritanceSpecifier",
									"src": "230:15:4"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2122,
								"nodeType": "StructuredDocumentation",
								"src": "164:39:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 2169,
							"linearizedBaseContracts": [
								2169,
								2203,
								2118,
								2848,
								2860
							],
							"name": "ERC1155Holder",
							"nameLocation": "213:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2099
									],
									"body": {
										"id": 2144,
										"nodeType": "Block",
										"src": "416:55:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2140,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "433:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$2169",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2145,
														"src": "433:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "433:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2139,
												"id": 2143,
												"nodeType": "Return",
												"src": "426:38:4"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 2145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "261:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "390:8:4"
									},
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "288:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "305:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "305:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "322:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "339:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "356:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2133,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "356:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "278:96:4"
									},
									"returnParameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2145,
												"src": "408:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "408:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "407:8:4"
									},
									"scope": 2169,
									"src": "252:219:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2117
									],
									"body": {
										"id": 2167,
										"nodeType": "Block",
										"src": "664:60:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 2163,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "681:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$2169",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2168,
														"src": "681:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 2165,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "681:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2166,
												"nodeType": "Return",
												"src": "674:43:4"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 2168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "486:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2159,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "638:8:4"
									},
									"parameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "518:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "518:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "535:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "552:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2150,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "552:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2151,
													"nodeType": "ArrayTypeName",
													"src": "552:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "578:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2153,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "578:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2154,
													"nodeType": "ArrayTypeName",
													"src": "578:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "604:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "604:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "508:114:4"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2168,
												"src": "656:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2160,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "656:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "655:8:4"
									},
									"scope": 2169,
									"src": "477:247:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2170,
							"src": "204:522:4",
							"usedErrors": []
						}
					],
					"src": "106:621:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							2203
						],
						"ERC165": [
							2848
						],
						"IERC1155Receiver": [
							2118
						],
						"IERC165": [
							2860
						]
					},
					"id": 2204,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2171,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 2172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2119,
							"src": "133:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 2173,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2204,
							"sourceUnit": 2849,
							"src": "167:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2175,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2848,
										"src": "295:6:5"
									},
									"id": 2176,
									"nodeType": "InheritanceSpecifier",
									"src": "295:6:5"
								},
								{
									"baseName": {
										"id": 2177,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2118,
										"src": "303:16:5"
									},
									"id": 2178,
									"nodeType": "InheritanceSpecifier",
									"src": "303:16:5"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2174,
								"nodeType": "StructuredDocumentation",
								"src": "218:39:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2203,
							"linearizedBaseContracts": [
								2203,
								2118,
								2848,
								2860
							],
							"name": "ERC1155Receiver",
							"nameLocation": "276:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2847,
										2859
									],
									"body": {
										"id": 2201,
										"nodeType": "Block",
										"src": "495:113:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2189,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "512:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2191,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2118,
																		"src": "532:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2118_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$2118_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 2190,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "527:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "527:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$2118",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 2193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "527:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "512:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2197,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2181,
																"src": "589:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2195,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "565:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$2203_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2847,
															"src": "565:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "565:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "512:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2188,
												"id": 2200,
												"nodeType": "Return",
												"src": "505:96:5"
											}
										]
									},
									"documentation": {
										"id": 2179,
										"nodeType": "StructuredDocumentation",
										"src": "326:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "396:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2185,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2183,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2848,
												"src": "463:6:5"
											},
											{
												"id": 2184,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2860,
												"src": "471:7:5"
											}
										],
										"src": "454:25:5"
									},
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2181,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "421:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "414:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2180,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:20:5"
									},
									"returnParameters": {
										"id": 2188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "489:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "489:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "488:6:5"
									},
									"scope": 2203,
									"src": "387:221:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2204,
							"src": "258:352:5",
							"usedErrors": []
						}
					],
					"src": "108:503:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2281
						]
					},
					"id": 2282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2205,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2206,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2281,
							"linearizedBaseContracts": [
								2281
							],
							"name": "IERC20",
							"nameLocation": "197:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2207,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:6"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "327:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:6"
									},
									"scope": 2281,
									"src": "281:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "438:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:6"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "478:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:6"
									},
									"scope": 2281,
									"src": "419:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2221,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2230,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2223,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "725:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2225,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:6"
									},
									"returnParameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "778:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2227,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:6"
									},
									"scope": 2281,
									"src": "707:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1078:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1093:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:6"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "1133:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:6"
									},
									"scope": 2281,
									"src": "1059:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1812:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1829:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:6"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2250,
												"src": "1863:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2247,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:6"
									},
									"scope": 2281,
									"src": "1795:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2251,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "2207:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "2231:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "2258:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:6"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2262,
												"src": "2297:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:6"
									},
									"scope": 2281,
									"src": "2176:127:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2263,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2271,
									"name": "Transfer",
									"nameLocation": "2478:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2265,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "2487:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2267,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "2509:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2269,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "2529:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:6"
									},
									"src": "2472:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2280,
									"name": "Approval",
									"nameLocation": "2709:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2718:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2276,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2741:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2278,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2280,
												"src": "2766:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:6"
									},
									"src": "2703:78:6"
								}
							],
							"scope": 2282,
							"src": "187:2596:6",
							"usedErrors": []
						}
					],
					"src": "91:2693:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2802
						],
						"IERC20": [
							2281
						],
						"SafeERC20": [
							2505
						]
					},
					"id": 2506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 2284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2506,
							"sourceUnit": 2282,
							"src": "125:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 2285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2506,
							"sourceUnit": 2803,
							"src": "149:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2286,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2505,
							"linearizedBaseContracts": [
								2505
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2289,
									"libraryName": {
										"id": 2287,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2802,
										"src": "675:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:7",
									"typeName": {
										"id": 2288,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 2311,
										"nodeType": "Block",
										"src": "803:103:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2300,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2292,
															"src": "833:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2303,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2292,
																			"src": "863:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2281",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2230,
																		"src": "863:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2306,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2294,
																	"src": "888:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2296,
																	"src": "892:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2301,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2299,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "813:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "813:86:7"
											}
										]
									},
									"id": 2312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "732:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2291,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2290,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "732:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "732:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "754:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "774:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:7"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:7"
									},
									"scope": 2505,
									"src": "701:205:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "1040:113:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "1070:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2328,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2315,
																			"src": "1100:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2281",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2262,
																		"src": "1100:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2331,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2317,
																	"src": "1129:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2319,
																	"src": "1135:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2333,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2321,
																	"src": "1139:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "1050:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:7"
											}
										]
									},
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "947:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2313,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "947:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "947:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "969:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "991:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "1011:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:7"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:7"
									},
									"scope": 2505,
									"src": "912:241:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2381,
										"nodeType": "Block",
										"src": "1519:497:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2350,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "1768:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2353,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 2358,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2505",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2505",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 2357,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 2356,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 2359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2360,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2344,
																					"src": "1815:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 2354,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2342,
																					"src": "1784:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2281",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2240,
																				"src": "1784:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 2349,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2370,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "1939:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2373,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2342,
																			"src": "1969:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2281",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2250,
																		"src": "1969:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2376,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "1993:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "2002:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2371,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2369,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "1919:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2380,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:7"
											}
										]
									},
									"documentation": {
										"id": 2339,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 2382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "1443:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2340,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "1443:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "1443:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "1465:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2382,
												"src": "1490:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:7"
									},
									"returnParameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:7"
									},
									"scope": 2505,
									"src": "1413:603:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "2138:194:7",
										"statements": [
											{
												"assignments": [
													2393
												],
												"declarations": [
													{
														"constant": false,
														"id": 2393,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "2148:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2392,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2404,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2398,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2505",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2505",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2400,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2387,
																"src": "2202:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2394,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "2171:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2281",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2240,
															"src": "2171:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2402,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "2213:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2406,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "2248:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 2409,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2385,
																			"src": "2278:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2281",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2250,
																		"src": "2278:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 2412,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2387,
																	"src": "2302:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2413,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "2311:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2407,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2408,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$2281",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2405,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "2228:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2416,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:7"
											}
										]
									},
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "2062:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2383,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "2062:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "2062:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "2084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "2109:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:7"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:7"
									},
									"scope": 2505,
									"src": "2022:310:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2465,
										"nodeType": "Block",
										"src": "2454:370:7",
										"statements": [
											{
												"id": 2464,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:7",
												"statements": [
													{
														"assignments": [
															2429
														],
														"declarations": [
															{
																"constant": false,
																"id": 2429,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2464,
																"src": "2488:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2438,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2434,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2505",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2505",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2432,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2436,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2423,
																	"src": "2542:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2430,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "2511:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2281",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2240,
																"src": "2511:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 2437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2440,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2429,
																		"src": "2572:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 2441,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2425,
																		"src": "2588:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 2443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 2439,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2445,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:7"
													},
													{
														"assignments": [
															2447
														],
														"declarations": [
															{
																"constant": false,
																"id": 2447,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 2464,
																"src": "2653:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2446,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2451,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2448,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "2676:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2449,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2425,
																"src": "2691:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2453,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "2730:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2281",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 2456,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2421,
																					"src": "2760:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$2281",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2457,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2250,
																				"src": "2760:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 2459,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2423,
																			"src": "2784:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2460,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2447,
																			"src": "2793:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2454,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2281",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2452,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2504,
																"src": "2710:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$2281_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2463,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:7"
													}
												]
											}
										]
									},
									"id": 2466,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "2378:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2419,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "2378:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "2378:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "2400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2466,
												"src": "2425:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:7"
									},
									"returnParameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:7"
									},
									"scope": 2505,
									"src": "2338:486:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "3277:636:7",
										"statements": [
											{
												"assignments": [
													2476
												],
												"declarations": [
													{
														"constant": false,
														"id": 2476,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2503,
														"src": "3626:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2475,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2485,
												"initialValue": {
													"arguments": [
														{
															"id": 2482,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "3680:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2479,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2470,
																	"src": "3660:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$2281",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$2281",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2477,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2596,
														"src": "3652:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2486,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "3735:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2502,
												"nodeType": "IfStatement",
												"src": "3731:176:7",
												"trueBody": {
													"id": 2501,
													"nodeType": "Block",
													"src": "3758:149:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2493,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2476,
																				"src": "3830:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2495,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2494,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2496,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2491,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2490,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2500,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2467,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "3236:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$2281",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2469,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2468,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2281,
														"src": "3236:6:7"
													},
													"referencedDeclaration": 2281,
													"src": "3236:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$2281",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "3250:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:7"
									},
									"returnParameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:7"
									},
									"scope": 2505,
									"src": "3207:706:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2506,
							"src": "645:3270:7",
							"usedErrors": []
						}
					],
					"src": "100:3816:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2802
						]
					},
					"id": 2803,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2507,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2508,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2802,
							"linearizedBaseContracts": [
								2802
							],
							"name": "Address",
							"nameLocation": "187:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2524,
										"nodeType": "Block",
										"src": "837:311:8",
										"statements": [
											{
												"assignments": [
													2517
												],
												"declarations": [
													{
														"constant": false,
														"id": 2517,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2524,
														"src": "1034:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2516,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2518,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2511,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:8",
														"valueSize": 1
													},
													{
														"declaration": 2517,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:8",
														"valueSize": 1
													}
												],
												"id": 2519,
												"nodeType": "InlineAssembly",
												"src": "1056:61:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2520,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "1133:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2515,
												"id": 2523,
												"nodeType": "Return",
												"src": "1126:15:8"
											}
										]
									},
									"documentation": {
										"id": 2509,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "791:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:8"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2525,
												"src": "831:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2513,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:8"
									},
									"scope": 2802,
									"src": "771:377:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2558,
										"nodeType": "Block",
										"src": "2136:241:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2536,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2802",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2802",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2534,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2539,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2530,
																"src": "2179:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2533,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:8"
											},
											{
												"assignments": [
													2545,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2545,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2558,
														"src": "2231:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2544,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2552,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2546,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "2249:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2548,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2530,
																"src": "2271:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2554,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "2300:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2557,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:8"
											}
										]
									},
									"documentation": {
										"id": 2526,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2084:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2559,
												"src": "2111:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:8"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:8"
									},
									"scope": 2802,
									"src": "2065:312:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2575,
										"nodeType": "Block",
										"src": "3208:84:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2570,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2562,
															"src": "3238:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2564,
															"src": "3246:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2569,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2576,
															2596
														],
														"referencedDeclaration": 2596,
														"src": "3225:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2568,
												"id": 2574,
												"nodeType": "Return",
												"src": "3218:67:8"
											}
										]
									},
									"documentation": {
										"id": 2560,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "3141:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2564,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "3157:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2563,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:8"
									},
									"returnParameters": {
										"id": 2568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2576,
												"src": "3194:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:8"
									},
									"scope": 2802,
									"src": "3119:173:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "3661:76:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2589,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2579,
															"src": "3700:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2590,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2581,
															"src": "3708:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2592,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "3717:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2588,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2616,
															2666
														],
														"referencedDeclaration": 2666,
														"src": "3678:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2587,
												"id": 2594,
												"nodeType": "Return",
												"src": "3671:59:8"
											}
										]
									},
									"documentation": {
										"id": 2577,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "3545:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "3569:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2580,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "3596:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:8"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2596,
												"src": "3647:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:8"
									},
									"scope": 2802,
									"src": "3514:223:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "4242:111:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2609,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2599,
															"src": "4281:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2610,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2601,
															"src": "4289:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2611,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2603,
															"src": "4295:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2608,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2616,
															2666
														],
														"referencedDeclaration": 2666,
														"src": "4259:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2607,
												"id": 2614,
												"nodeType": "Return",
												"src": "4252:94:8"
											}
										]
									},
									"documentation": {
										"id": 2597,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2599,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4139:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4163:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4190:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:8"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "4228:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:8"
									},
									"scope": 2802,
									"src": "4099:254:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2665,
										"nodeType": "Block",
										"src": "4780:320:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2633,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2802",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2802",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2631,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2636,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "4823:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2630,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2640,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2643,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2619,
																	"src": "4900:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2642,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "4889:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2641,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:8"
											},
											{
												"assignments": [
													2649,
													2651
												],
												"declarations": [
													{
														"constant": false,
														"id": 2649,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "4953:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2648,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2651,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2665,
														"src": "4967:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2650,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2658,
												"initialValue": {
													"arguments": [
														{
															"id": 2656,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "5020:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2652,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "4994:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2623,
																"src": "5013:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2660,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "5059:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2661,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2651,
															"src": "5068:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2662,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2625,
															"src": "5080:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2659,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "5042:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2629,
												"id": 2664,
												"nodeType": "Return",
												"src": "5035:58:8"
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "4641:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "4665:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "4692:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "4715:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2624,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:8"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2666,
												"src": "4766:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:8"
									},
									"scope": 2802,
									"src": "4601:499:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "5377:97:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2677,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2669,
															"src": "5413:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2678,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "5421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2676,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2683,
															2718
														],
														"referencedDeclaration": 2718,
														"src": "5394:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2675,
												"id": 2681,
												"nodeType": "Return",
												"src": "5387:80:8"
											}
										]
									},
									"documentation": {
										"id": 2667,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "5305:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "5321:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2670,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:8"
									},
									"returnParameters": {
										"id": 2675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "5363:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:8"
									},
									"scope": 2802,
									"src": "5277:197:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2717,
										"nodeType": "Block",
										"src": "5816:228:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2697,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2686,
																	"src": "5845:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2696,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "5834:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:8"
											},
											{
												"assignments": [
													2703,
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2703,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "5905:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2717,
														"src": "5919:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2704,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2710,
												"initialValue": {
													"arguments": [
														{
															"id": 2708,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2688,
															"src": "5964:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2706,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "5946:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2712,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "6003:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2713,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2705,
															"src": "6012:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2714,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "6024:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2711,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "5986:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2694,
												"id": 2716,
												"nodeType": "Return",
												"src": "5979:58:8"
											}
										]
									},
									"documentation": {
										"id": 2684,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "5695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "5719:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "5746:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:8"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2718,
												"src": "5802:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:8"
									},
									"scope": 2802,
									"src": "5658:386:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2734,
										"nodeType": "Block",
										"src": "6320:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2729,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "6358:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2730,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "6366:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2728,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2735,
															2770
														],
														"referencedDeclaration": 2770,
														"src": "6337:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2727,
												"id": 2733,
												"nodeType": "Return",
												"src": "6330:84:8"
											}
										]
									},
									"documentation": {
										"id": 2719,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "6253:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "6269:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:8"
									},
									"returnParameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2735,
												"src": "6306:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2725,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:8"
									},
									"scope": 2802,
									"src": "6223:198:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2769,
										"nodeType": "Block",
										"src": "6762:232:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2749,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2738,
																	"src": "6791:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2748,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2525,
																"src": "6780:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2753,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:8"
											},
											{
												"assignments": [
													2755,
													2757
												],
												"declarations": [
													{
														"constant": false,
														"id": 2755,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2769,
														"src": "6853:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2754,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2757,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2769,
														"src": "6867:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2756,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2762,
												"initialValue": {
													"arguments": [
														{
															"id": 2760,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "6914:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2758,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2738,
															"src": "6894:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2764,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2755,
															"src": "6953:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2757,
															"src": "6962:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2766,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "6974:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2763,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "6936:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2746,
												"id": 2768,
												"nodeType": "Return",
												"src": "6929:58:8"
											}
										]
									},
									"documentation": {
										"id": 2736,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2738,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "6646:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "6670:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "6697:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:8"
									},
									"returnParameters": {
										"id": 2746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2770,
												"src": "6748:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2744,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:8"
									},
									"scope": 2802,
									"src": "6607:387:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2800,
										"nodeType": "Block",
										"src": "7374:532:8",
										"statements": [
											{
												"condition": {
													"id": 2782,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2773,
													"src": "7388:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2798,
													"nodeType": "Block",
													"src": "7445:455:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2786,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2775,
																		"src": "7529:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2796,
																"nodeType": "Block",
																"src": "7837:53:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2793,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2777,
																					"src": "7862:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2792,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2795,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:8"
																	}
																]
															},
															"id": 2797,
															"nodeType": "IfStatement",
															"src": "7525:365:8",
															"trueBody": {
																"id": 2791,
																"nodeType": "Block",
																"src": "7552:279:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:8"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2775,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2775,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 2790,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:8"
																	}
																]
															}
														}
													]
												},
												"id": 2799,
												"nodeType": "IfStatement",
												"src": "7384:516:8",
												"trueBody": {
													"id": 2785,
													"nodeType": "Block",
													"src": "7397:42:8",
													"statements": [
														{
															"expression": {
																"id": 2783,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "7418:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2781,
															"id": 2784,
															"nodeType": "Return",
															"src": "7411:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2771,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:8",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "7249:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "7271:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2774,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "7304:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:8"
									},
									"returnParameters": {
										"id": 2781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2801,
												"src": "7360:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2779,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:8"
									},
									"scope": 2802,
									"src": "7214:692:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2803,
							"src": "179:7729:8",
							"usedErrors": []
						}
					],
					"src": "86:7823:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2824
						]
					},
					"id": 2825,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2804,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2805,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2824,
							"linearizedBaseContracts": [
								2824
							],
							"name": "Context",
							"nameLocation": "626:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2813,
										"nodeType": "Block",
										"src": "702:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2809,
												"id": 2812,
												"nodeType": "Return",
												"src": "712:17:9"
											}
										]
									},
									"id": 2814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:9"
									},
									"returnParameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2814,
												"src": "693:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:9"
									},
									"scope": 2824,
									"src": "640:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2822,
										"nodeType": "Block",
										"src": "809:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2819,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2818,
												"id": 2821,
												"nodeType": "Return",
												"src": "819:15:9"
											}
										]
									},
									"id": 2823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:9"
									},
									"returnParameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2823,
												"src": "793:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:9"
									},
									"scope": 2824,
									"src": "742:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2825,
							"src": "608:235:9",
							"usedErrors": []
						}
					],
					"src": "86:758:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2848
						],
						"IERC165": [
							2860
						]
					},
					"id": 2849,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2826,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:10"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2827,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2849,
							"sourceUnit": 2861,
							"src": "124:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2829,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2860,
										"src": "754:7:10"
									},
									"id": 2830,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2828,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2848,
							"linearizedBaseContracts": [
								2848,
								2860
							],
							"name": "ERC165",
							"nameLocation": "744:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2859
									],
									"body": {
										"id": 2846,
										"nodeType": "Block",
										"src": "920:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2839,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2833,
														"src": "937:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2841,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2860,
																	"src": "957:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2860_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2860_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2840,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2860",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2843,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2838,
												"id": 2845,
												"nodeType": "Return",
												"src": "930:47:10"
											}
										]
									},
									"documentation": {
										"id": 2831,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2835,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:10"
									},
									"parameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "856:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2832,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:10"
									},
									"returnParameters": {
										"id": 2838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2847,
												"src": "914:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:10"
									},
									"scope": 2848,
									"src": "829:155:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2849,
							"src": "726:260:10",
							"usedErrors": []
						}
					],
					"src": "99:888:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2860
						]
					},
					"id": 2861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2850,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2851,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2860,
							"linearizedBaseContracts": [
								2860
							],
							"name": "IERC165",
							"nameLocation": "415:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2852,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2859,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2854,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "801:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2853,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:11"
									},
									"returnParameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2859,
												"src": "844:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:11"
									},
									"scope": 2860,
									"src": "774:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2861,
							"src": "405:447:11",
							"usedErrors": []
						}
					],
					"src": "100:753:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							3172
						]
					},
					"id": 3173,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2863,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 3172,
							"linearizedBaseContracts": [
								3172
							],
							"name": "SafeMath",
							"nameLocation": "475:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2894,
										"nodeType": "Block",
										"src": "702:140:12",
										"statements": [
											{
												"id": 2893,
												"nodeType": "UncheckedBlock",
												"src": "712:124:12",
												"statements": [
													{
														"assignments": [
															2876
														],
														"declarations": [
															{
																"constant": false,
																"id": 2876,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2893,
																"src": "736:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2875,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2880,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2877,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2866,
																"src": "748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2868,
																"src": "752:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2881,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2876,
																"src": "771:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2882,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2866,
																"src": "775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2888,
														"nodeType": "IfStatement",
														"src": "767:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2886,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2874,
															"id": 2887,
															"nodeType": "Return",
															"src": "778:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2890,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2876,
																	"src": "823:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2891,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2874,
														"id": 2892,
														"nodeType": "Return",
														"src": "809:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2864,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2866,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "642:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "653:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:12"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "687:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2895,
												"src": "693:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:12"
									},
									"scope": 3172,
									"src": "626:216:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2922,
										"nodeType": "Block",
										"src": "1064:113:12",
										"statements": [
											{
												"id": 2921,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2907,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2900,
																"src": "1102:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2898,
																"src": "1106:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2914,
														"nodeType": "IfStatement",
														"src": "1098:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2912,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2906,
															"id": 2913,
															"nodeType": "Return",
															"src": "1109:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2916,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2898,
																		"src": "1154:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2917,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2900,
																		"src": "1158:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2919,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2906,
														"id": 2920,
														"nodeType": "Return",
														"src": "1140:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2896,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2898,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "1004:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2900,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "1015:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:12"
									},
									"returnParameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2903,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "1049:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2902,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2905,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2923,
												"src": "1055:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:12"
									},
									"scope": 3172,
									"src": "988:189:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2964,
										"nodeType": "Block",
										"src": "1401:417:12",
										"statements": [
											{
												"id": 2963,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2935,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2926,
																"src": "1669:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2942,
														"nodeType": "IfStatement",
														"src": "1665:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2940,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2934,
															"id": 2941,
															"nodeType": "Return",
															"src": "1677:16:12"
														}
													},
													{
														"assignments": [
															2944
														],
														"declarations": [
															{
																"constant": false,
																"id": 2944,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2963,
																"src": "1707:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2943,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2948,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2945,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2926,
																"src": "1719:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2946,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2928,
																"src": "1723:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2949,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2944,
																	"src": "1742:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2950,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2926,
																	"src": "1746:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2952,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2928,
																"src": "1751:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2958,
														"nodeType": "IfStatement",
														"src": "1738:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2956,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2934,
															"id": 2957,
															"nodeType": "Return",
															"src": "1754:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2960,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2944,
																	"src": "1799:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2961,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2934,
														"id": 2962,
														"nodeType": "Return",
														"src": "1785:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2924,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "1341:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2928,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "1352:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:12"
									},
									"returnParameters": {
										"id": 2934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "1386:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2965,
												"src": "1392:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:12"
									},
									"scope": 3172,
									"src": "1325:493:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2992,
										"nodeType": "Block",
										"src": "2043:114:12",
										"statements": [
											{
												"id": 2991,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2977,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2970,
																"src": "2081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2984,
														"nodeType": "IfStatement",
														"src": "2077:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2982,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2976,
															"id": 2983,
															"nodeType": "Return",
															"src": "2089:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2986,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2968,
																		"src": "2134:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2987,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2970,
																		"src": "2138:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2989,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2976,
														"id": 2990,
														"nodeType": "Return",
														"src": "2120:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2966,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2968,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "1983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "1994:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:12"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "2028:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2993,
												"src": "2034:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:12"
									},
									"scope": 3172,
									"src": "1967:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3020,
										"nodeType": "Block",
										"src": "2392:114:12",
										"statements": [
											{
												"id": 3019,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3005,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "2430:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 3006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3012,
														"nodeType": "IfStatement",
														"src": "2426:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 3008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 3009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 3010,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 3004,
															"id": 3011,
															"nodeType": "Return",
															"src": "2438:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 3013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3014,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2996,
																		"src": "2483:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 3015,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "2487:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 3017,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 3004,
														"id": 3018,
														"nodeType": "Return",
														"src": "2469:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2994,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 3021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "2332:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "2343:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:12"
									},
									"returnParameters": {
										"id": 3004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "2377:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3000,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3021,
												"src": "2383:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:12"
									},
									"scope": 3172,
									"src": "2316:190:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3035,
										"nodeType": "Block",
										"src": "2808:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "2825:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3026,
														"src": "2829:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3030,
												"id": 3034,
												"nodeType": "Return",
												"src": "2818:12:12"
											}
										]
									},
									"documentation": {
										"id": 3022,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 3036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "2754:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "2765:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:12"
									},
									"returnParameters": {
										"id": 3030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3036,
												"src": "2799:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:12"
									},
									"scope": 3172,
									"src": "2741:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3050,
										"nodeType": "Block",
										"src": "3175:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3039,
														"src": "3192:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3041,
														"src": "3196:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3045,
												"id": 3049,
												"nodeType": "Return",
												"src": "3185:12:12"
											}
										]
									},
									"documentation": {
										"id": 3037,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "3121:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "3132:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:12"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3051,
												"src": "3166:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:12"
									},
									"scope": 3172,
									"src": "3108:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3065,
										"nodeType": "Block",
										"src": "3518:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3061,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3054,
														"src": "3535:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 3062,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3056,
														"src": "3539:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3060,
												"id": 3064,
												"nodeType": "Return",
												"src": "3528:12:12"
											}
										]
									},
									"documentation": {
										"id": 3052,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 3066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "3464:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "3475:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:12"
									},
									"returnParameters": {
										"id": 3060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3066,
												"src": "3509:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:12"
									},
									"scope": 3172,
									"src": "3451:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3080,
										"nodeType": "Block",
										"src": "3903:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3076,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3069,
														"src": "3920:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 3077,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3071,
														"src": "3924:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3075,
												"id": 3079,
												"nodeType": "Return",
												"src": "3913:12:12"
											}
										]
									},
									"documentation": {
										"id": 3067,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3069,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3849:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3860:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:12"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3081,
												"src": "3894:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:12"
									},
									"scope": 3172,
									"src": "3836:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "4452:29:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3091,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3084,
														"src": "4469:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 3092,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3086,
														"src": "4473:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3090,
												"id": 3094,
												"nodeType": "Return",
												"src": "4462:12:12"
											}
										]
									},
									"documentation": {
										"id": 3082,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3084,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "4398:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "4409:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:12"
									},
									"returnParameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "4443:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:12"
									},
									"scope": 3172,
									"src": "4385:96:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "5070:106:12",
										"statements": [
											{
												"id": 3119,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3109,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3101,
																		"src": "5112:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 3110,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3099,
																		"src": "5117:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3112,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3103,
																	"src": "5120:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3108,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3114,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3115,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "5154:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3116,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3101,
																"src": "5158:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3107,
														"id": 3118,
														"nodeType": "Return",
														"src": "5147:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3097,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "4967:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3101,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "4986:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "5005:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3102,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:12"
									},
									"returnParameters": {
										"id": 3107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "5061:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:12"
									},
									"scope": 3172,
									"src": "4945:231:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3145,
										"nodeType": "Block",
										"src": "5785:105:12",
										"statements": [
											{
												"id": 3144,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3126,
																		"src": "5827:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3137,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3128,
																	"src": "5834:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3133,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3139,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3140,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3124,
																"src": "5868:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 3141,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3126,
																"src": "5872:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3132,
														"id": 3143,
														"nodeType": "Return",
														"src": "5861:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5682:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5701:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5720:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3127,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:12"
									},
									"returnParameters": {
										"id": 3132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3146,
												"src": "5776:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:12"
									},
									"scope": 3172,
									"src": "5660:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3170,
										"nodeType": "Block",
										"src": "6661:105:12",
										"statements": [
											{
												"id": 3169,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 3159,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3151,
																		"src": "6703:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 3160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 3162,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "6710:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 3158,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 3163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 3164,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3165,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3149,
																"src": "6744:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 3166,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "6748:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3157,
														"id": 3168,
														"nodeType": "Return",
														"src": "6737:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3147,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 3171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "6558:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "6577:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3153,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "6596:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:12"
									},
									"returnParameters": {
										"id": 3157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3171,
												"src": "6652:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:12"
									},
									"scope": 3172,
									"src": "6536:230:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3173,
							"src": "467:6301:12",
							"usedErrors": []
						}
					],
					"src": "92:6677:12"
				},
				"id": 12
			}
		}
	}
}
{
	"id": "d4e5d8611eea784c908cddeaec61bf34",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft/LPStakeWithdrawNft.sol": {
				"content": "// contracts/Farming.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\n\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\r\n\r\n\r\nlibrary LibSafeMathForUint256Utils {\r\n\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMathForUint256: addition overflow\");\r\n        return c;\r\n    }\r\n\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b <= a, \"SafeMathForUint256: subtraction overflow\");\r\n        uint256 c = a - b;\r\n        return c;\r\n    }\r\n\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (a == 0 || b == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMathForUint256: multiplication overflow\");\r\n        return c;\r\n    }\r\n\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b > 0, \"SafeMathForUint256: division by zero\");\r\n        uint256 c = a / b;\r\n        return c;\r\n    }\r\n\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        require(b != 0, \"SafeMathForUint256: modulo by zero\");\r\n        return a % b;\r\n    }\r\n\r\n    function power(uint256 a, uint256 b) internal pure returns (uint256){\r\n\r\n        if(a == 0) return 0;\r\n        if(b == 0) return 1;\r\n\r\n        uint256 c = 1;\r\n        for(uint256 i = 0; i < b; i++){\r\n            c = mul(c, a);\r\n        }\r\n    }\r\n\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a >= b ? a : b;\r\n    }\r\n\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return (a / 2) + (b / 2) + ((a % 2 + b % 2) / 2);\r\n    }\r\n}\r\n\r\nlibrary LibArrayForUint256Utils {\r\n\r\n\t/**\r\n\t * @dev Searches a sortd uint256 array and returns the first element index that \r\n\t * match the key value, Time complexity O(log n)\r\n\t *\r\n\t * @param array is expected to be sorted in ascending order\r\n\t * @param key is element \r\n\t *\r\n\t * @return if matches key in the array return true,else return false \r\n\t * @return the first element index that match the key value,if not exist,return 0\r\n\t */\r\n\tfunction binarySearch(uint256[] storage array, uint256 key) internal view returns (bool, uint) {\r\n        if(array.length == 0){\r\n        \treturn (false, 0);\r\n        }\r\n\r\n        uint256 low = 0;\r\n        uint256 high = array.length-1;\r\n\r\n        while(low <= high){\r\n        \tuint256 mid = LibSafeMathForUint256Utils.average(low, high);\r\n        \tif(array[mid] == key){\r\n        \t\treturn (true, mid);\r\n        \t}else if (array[mid] > key) {\r\n                high = mid - 1;\r\n            } else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n\r\n        return (false, 0);\r\n    }\r\n\r\n    function firstIndexOf(uint256[] storage array, uint256 key) internal view returns (bool, uint256) {\r\n\r\n    \tif(array.length == 0){\r\n    \t\treturn (false, 0);\r\n    \t}\r\n\r\n    \tfor(uint256 i = 0; i < array.length; i++){\r\n    \t\tif(array[i] == key){\r\n    \t\t\treturn (true, i);\r\n    \t\t}\r\n    \t}\r\n    \treturn (false, 0);\r\n    }\r\n\r\n    function reverse(uint256[] storage array) internal {\r\n        uint256 temp;\r\n        for (uint i = 0; i < array.length / 2; i++) {\r\n            temp = array[i];\r\n            array[i] = array[array.length - 1 - i];\r\n            array[array.length - 1 - i] = temp;\r\n        }\r\n    }\r\n\r\n    function equals(uint256[] storage a, uint256[] storage b) internal view returns (bool){\r\n    \tif(a.length != b.length){\r\n    \t\treturn false;\r\n    \t}\r\n    \tfor(uint256 i = 0; i < a.length; i++){\r\n    \t\tif(a[i] != b[i]){\r\n    \t\t\treturn false;\r\n    \t\t}\r\n    \t}\r\n    \treturn true;\r\n    }\r\n\r\n    function removeByIndex(uint256[] storage array, uint index) internal{\r\n    \trequire(index < array.length, \"ArrayForUint256: index out of bounds\");\r\n\r\n        while (index < array.length - 1) {\r\n            array[index] = array[index + 1];\r\n            index++;\r\n        }\r\n        array.pop();\r\n    }\r\n    \r\n    function removeByValue(uint256[] storage array, uint256 value) internal{\r\n        uint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(isIn){\r\n          removeByIndex(array, index);\r\n        }\r\n    }\r\n\r\n    function addValue(uint256[] storage array, uint256 value) internal{\r\n    \tuint index;\r\n        bool isIn;\r\n        (isIn, index) = firstIndexOf(array, value);\r\n        if(!isIn){\r\n        \tarray.push(value);\r\n        }\r\n    }\r\n\r\n    function extend(uint256[] storage a, uint256[] memory b) internal {\r\n    \tif(b.length != 0){\r\n    \t\tfor(uint i = 0; i < b.length; i++){\r\n    \t\t\ta.push(b[i]);\r\n    \t\t}\r\n    \t}\r\n    }\r\n\r\n    function distinct(uint256[] storage array) internal returns (uint256 length) {\r\n        bool contains;\r\n        uint index;\r\n        for (uint i = 0; i < array.length; i++) {\r\n            contains = false;\r\n            index = 0;\r\n            uint j = i+1;\r\n            for(;j < array.length; j++){\r\n                if(array[j] == array[i]){\r\n                    contains =true;\r\n                    index = i;\r\n                    break;\r\n                }\r\n            }\r\n            if (contains) {\r\n                for (j = index; j < array.length - 1; j++){\r\n                    array[j] = array[j + 1];\r\n                }\r\n                array.pop();\r\n                i--;\r\n            }\r\n        }\r\n        length = array.length;\r\n    }\r\n\r\n    function max(uint256[] storage array) internal view returns (uint256 maxValue, uint256 maxIndex) {\r\n        maxValue = array[0];\r\n        maxIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] > maxValue){\r\n                maxValue = array[i];\r\n                maxIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n    function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {\r\n        minValue = array[0];\r\n        minIndex = 0;\r\n        for(uint256 i = 0;i < array.length;i++){\r\n            if(array[i] < minValue){\r\n                minValue = array[i];\r\n                minIndex = i;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\ncontract Farming is Ownable , ERC1155Holder{\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n    \r\n    struct UserInfo {\r\n        uint256 amount;           // current staked LP\r\n        uint256 lastUpdateTime;   // unix timestamp for last details update (when pointsDebt calculated)\r\n        uint256 pointsDebt;       // total points collected before latest deposit 结算数量\r\n    }\r\n    \r\n    struct NFTInfo {\r\n        address contractAddress;\r\n        uint256 id;             // NFT id\r\n        uint256 remaining;      // NFTs remaining to farm\r\n        uint256 price;          // points required to claim NFT\r\n    }\r\n    \r\n    IERC20 public lpToken;             // token being staked\r\n    \r\n    uint256[] public nftIds;\r\n    mapping(address => UserInfo) public users;\r\n\r\n    uint256 private lpUnitValue = 1065;\r\n    uint256 private timeUnitValue = 864000;\r\n    uint256 private threshold = lpUnitValue * timeUnitValue * 10 ** 18;\r\n\r\n    event NFTAdded(address indexed contractAddress, uint256 id, uint256 total, uint256 price);\r\n    event Staked(address indexed user, uint256 amount);\r\n    event Claim(address indexed user, uint256 nftId, uint256 quantity);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    \r\n    constructor() public {\r\n    }\r\n\r\n    function addNFTBatch(\r\n        address nftContractAddress,\r\n        uint256[] memory ids,\r\n        uint256[] memory amounts\r\n    ) external  onlyOwner{\r\n        LibArrayForUint256Utils.extend(nftIds ,ids);\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function addNftBatchWithNumber(\r\n        address nftContractAddress,\r\n        uint256 start,\r\n        uint256 idsNumber\r\n    ) public onlyOwner {\r\n        uint256[] memory ids = new uint256[](idsNumber);\r\n        uint256[] memory amounts = new uint256[](idsNumber);\r\n        for (uint256 i = start; i < (idsNumber + start); i++) {\r\n            ids[i-start] = i;\r\n            amounts[i-start] = 1;\r\n        }\r\n\r\n        LibArrayForUint256Utils.extend(nftIds ,ids);\r\n\r\n        IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\");\r\n    }\r\n\r\n    function stake(uint256 amount) external {\r\n        lpToken.safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            amount\r\n        );\r\n        \r\n        UserInfo storage user = users[msg.sender];\r\n        \r\n        // already deposited before\r\n        if(user.amount != 0) {\r\n            user.pointsDebt = pointsBalance(msg.sender);\r\n        }\r\n        user.amount = user.amount.add(amount);\r\n        user.lastUpdateTime = block.timestamp;\r\n\r\n        emit Staked(msg.sender, amount);\r\n    }\r\n    \r\n    // claim nft if points threshold reached\r\n    function claim(address nftContractAddress) public {\r\n        require(nftIds.length > 0, \"All NFTs farmed\");\r\n        require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\");\r\n        UserInfo storage user = users[msg.sender];\r\n        \r\n        // deduct points\r\n        user.pointsDebt = pointsBalance(msg.sender).sub(threshold);\r\n        user.lastUpdateTime = block.timestamp;\r\n        \r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\r\n        LibArrayForUint256Utils.removeByIndex(nftIds, index);\r\n\r\n        // transfer nft\r\n        IERC1155(nftContractAddress).safeTransferFrom(\r\n            address(this),\r\n            msg.sender,\r\n            minTokenId,\r\n            1,\r\n            \"\"\r\n        );\r\n\r\n        emit Claim(msg.sender, minTokenId, 1);\r\n    }\r\n    \r\n    \r\n    function withdraw(uint256 amount) public {\r\n        UserInfo storage user = users[msg.sender];\r\n        require(user.amount >= amount, \"Insufficient staked\");\r\n        \r\n        // update users\r\n        user.pointsDebt = pointsBalance(msg.sender);\r\n        user.amount = user.amount.sub(amount);\r\n        user.lastUpdateTime = block.timestamp;\r\n        \r\n        lpToken.safeTransfer(\r\n            msg.sender,\r\n            amount\r\n        );\r\n\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n    \r\n    function exit() external {\r\n        withdraw(users[msg.sender].amount);\r\n    }\r\n    \r\n    function pointsBalance(address account) public view returns (uint256) {\r\n        UserInfo memory user = users[account];\r\n        return user.pointsDebt.add(_unDebitedPoints(user));\r\n    }\r\n    \r\n    function _unDebitedPoints(UserInfo memory user) internal view returns (uint256) {\r\n        uint256 blockTime = block.timestamp;\r\n        return blockTime.sub(user.lastUpdateTime).mul(user.amount);\r\n    }\r\n    \r\n    function nftCount() public view returns (uint256) {\r\n        return nftIds.length;\r\n    }\r\n\r\n    function getNextNftTokenId() public view returns (uint256) {\r\n        (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\r\n        return minTokenId;\r\n    }\r\n\r\n    function getThreshold() public view returns (uint256) {\r\n        return threshold;\r\n    }\r\n    \r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Holder.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./ERC1155Receiver.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ncontract ERC1155Holder is ERC1155Receiver {\r\n    function onERC1155Received(\r\n        address,\r\n        address,\r\n        uint256,\r\n        uint256,\r\n        bytes memory\r\n    ) public virtual override returns (bytes4) {\r\n        return this.onERC1155Received.selector;\r\n    }\r\n\r\n    function onERC1155BatchReceived(\r\n        address,\r\n        address,\r\n        uint256[] memory,\r\n        uint256[] memory,\r\n        bytes memory\r\n    ) public virtual override returns (bytes4) {\r\n        return this.onERC1155BatchReceived.selector;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\r\n *\r\n * _Available since v3.1._\r\n */\r\ninterface IERC1155 is IERC165 {\r\n    /**\r\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\r\n     */\r\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\r\n\r\n    /**\r\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\r\n     * transfers.\r\n     */\r\n    event TransferBatch(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256[] ids,\r\n        uint256[] values\r\n    );\r\n\r\n    /**\r\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\r\n     * `approved`.\r\n     */\r\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\r\n\r\n    /**\r\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\r\n     *\r\n     * If an {URI} event was emitted for `id`, the standard\r\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\r\n     * returned by {IERC1155MetadataURI-uri}.\r\n     */\r\n    event URI(string value, uint256 indexed id);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function balanceOf(address account, uint256 id) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `accounts` and `ids` must have the same length.\r\n     */\r\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\r\n        external\r\n        view\r\n        returns (uint256[] memory);\r\n\r\n    /**\r\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\r\n     *\r\n     * Emits an {ApprovalForAll} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `operator` cannot be the caller.\r\n     */\r\n    function setApprovalForAll(address operator, bool approved) external;\r\n\r\n    /**\r\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\r\n     *\r\n     * See {setApprovalForAll}.\r\n     */\r\n    function isApprovedForAll(address account, address operator) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\r\n     *\r\n     * Emits a {TransferSingle} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\r\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 id,\r\n        uint256 amount,\r\n        bytes calldata data\r\n    ) external;\r\n\r\n    /**\r\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\r\n     *\r\n     * Emits a {TransferBatch} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `ids` and `amounts` must have the same length.\r\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\r\n     * acceptance magic value.\r\n     */\r\n    function safeBatchTransferFrom(\r\n        address from,\r\n        address to,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata amounts,\r\n        bytes calldata data\r\n    ) external;\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC1155Receiver.sol\";\r\nimport \"../../../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\r\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155Receiver.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../utils/introspection/IERC165.sol\";\r\n\r\n/**\r\n * @dev _Available since v3.1._\r\n */\r\ninterface IERC1155Receiver is IERC165 {\r\n    /**\r\n        @dev Handles the receipt of a single ERC1155 token type. This function is\r\n        called at the end of a `safeTransferFrom` after the balance has been updated.\r\n        To accept the transfer, this must return\r\n        `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n        (i.e. 0xf23a6e61, or its own function selector).\r\n        @param operator The address which initiated the transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param id The ID of the token being transferred\r\n        @param value The amount of tokens being transferred\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155Received(\r\n        address operator,\r\n        address from,\r\n        uint256 id,\r\n        uint256 value,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n\r\n    /**\r\n        @dev Handles the receipt of a multiple ERC1155 token types. This function\r\n        is called at the end of a `safeBatchTransferFrom` after the balances have\r\n        been updated. To accept the transfer(s), this must return\r\n        `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n        (i.e. 0xbc197c81, or its own function selector).\r\n        @param operator The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param from The address which previously owned the token\r\n        @param ids An array containing ids of each token being transferred (order and length must match values array)\r\n        @param values An array containing amounts of each token being transferred (order and length must match ids array)\r\n        @param data Additional data with no specified format\r\n        @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\r\n    */\r\n    function onERC1155BatchReceived(\r\n        address operator,\r\n        address from,\r\n        uint256[] calldata ids,\r\n        uint256[] calldata values,\r\n        bytes calldata data\r\n    ) external returns (bytes4);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"nft/LPStakeWithdrawNft.sol": {
				"Farming": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "nftId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "NFTAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "addNFTBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "idsNumber",
									"type": "uint256"
								}
							],
							"name": "addNftBatchWithNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContractAddress",
									"type": "address"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "exit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextNftTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getThreshold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lpToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "nftIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "pointsBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "users",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastUpdateTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pointsDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":6648:11649  contract Farming is Ownable , ERC1155Holder{... */\n  mstore(0x40, 0x80)\n    /* \"nft/LPStakeWithdrawNft.sol\":7478:7482  1065 */\n  0x0429\n    /* \"nft/LPStakeWithdrawNft.sol\":7448:7482  uint256 private lpUnitValue = 1065 */\n  0x04\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7521:7527  864000 */\n  0x0d2f00\n    /* \"nft/LPStakeWithdrawNft.sol\":7489:7527  uint256 private timeUnitValue = 864000 */\n  0x05\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7592:7600  10 ** 18 */\n  0x0de0b6b3a7640000\n    /* \"nft/LPStakeWithdrawNft.sol\":7576:7589  timeUnitValue */\n  sload(0x05)\n    /* \"nft/LPStakeWithdrawNft.sol\":7562:7573  lpUnitValue */\n  sload(0x04)\n    /* \"nft/LPStakeWithdrawNft.sol\":7562:7589  lpUnitValue * timeUnitValue */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"nft/LPStakeWithdrawNft.sol\":7562:7600  lpUnitValue * timeUnitValue * 10 ** 18 */\n  tag_3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_3:\n    /* \"nft/LPStakeWithdrawNft.sol\":7534:7600  uint256 private threshold = lpUnitValue * timeUnitValue * 10 ** 18 */\n  0x06\n  sstore\n    /* \"nft/LPStakeWithdrawNft.sol\":7901:7930  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":968:980  _msgSender() */\n  tag_9\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":968:978  _msgSender */\n  shl(0x20, tag_10)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":968:980  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:967  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":949:981  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"nft/LPStakeWithdrawNft.sol\":6648:11649  contract Farming is Ownable , ERC1155Holder{... */\n  jump(tag_13)\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n  caller\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":729:746  return msg.sender */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n  0x00\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2439  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2459:2467  newOwner */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2456  _owner */\n  0x00\n  dup1\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2514:2522  newOwner */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2504:2512  oldOwner */\n  dup2\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n  pop\n    /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:84   */\ntag_16:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":73:78   */\n  dup2\n    /* \"#utility.yul\":62:78   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:84   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":90:270   */\ntag_17:\n    /* \"#utility.yul\":138:215   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":128:216   */\n  mstore\n    /* \"#utility.yul\":235:239   */\n  0x11\n    /* \"#utility.yul\":232:233   */\n  0x04\n    /* \"#utility.yul\":225:240   */\n  mstore\n    /* \"#utility.yul\":259:263   */\n  0x24\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":249:264   */\n  revert\n    /* \"#utility.yul\":276:624   */\ntag_2:\n    /* \"#utility.yul\":316:323   */\n  0x00\n    /* \"#utility.yul\":339:359   */\n  tag_22\n    /* \"#utility.yul\":357:358   */\n  dup3\n    /* \"#utility.yul\":339:359   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":334:359   */\n  swap2\n  pop\n    /* \"#utility.yul\":373:393   */\n  tag_23\n    /* \"#utility.yul\":391:392   */\n  dup4\n    /* \"#utility.yul\":373:393   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":368:393   */\n  swap3\n  pop\n    /* \"#utility.yul\":561:562   */\n  dup2\n    /* \"#utility.yul\":493:559   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":489:563   */\n  div\n    /* \"#utility.yul\":486:487   */\n  dup4\n    /* \"#utility.yul\":483:564   */\n  gt\n    /* \"#utility.yul\":478:479   */\n  dup3\n    /* \"#utility.yul\":471:480   */\n  iszero\n    /* \"#utility.yul\":464:481   */\n  iszero\n    /* \"#utility.yul\":460:565   */\n  and\n    /* \"#utility.yul\":457:588   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":568:586   */\n  tag_25\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":457:588   */\ntag_24:\n    /* \"#utility.yul\":616:617   */\n  dup3\n    /* \"#utility.yul\":613:614   */\n  dup3\n    /* \"#utility.yul\":609:618   */\n  mul\n    /* \"#utility.yul\":598:618   */\n  swap1\n  pop\n    /* \"#utility.yul\":276:624   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"nft/LPStakeWithdrawNft.sol\":6648:11649  contract Farming is Ownable , ERC1155Holder{... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":6648:11649  contract Farming is Ownable , ERC1155Holder{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xc6c9bd47\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xc6c9bd47\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe75235b8\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe9fad8ee\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa87430ba\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4b02218f\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x55ac2fd3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5fcbd285\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x63c66891\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0af2c6ca\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1e83409a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x25ca4cff\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":11267:11356  function nftCount() public view returns (uint256) {... */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":9426:10238  function claim(address nftContractAddress) public {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"nft/LPStakeWithdrawNft.sol\":10853:11040  function pointsBalance(address account) public view returns (uint256) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":10256:10751  function withdraw(uint256 amount) public {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"nft/LPStakeWithdrawNft.sol\":8264:8842  function addNftBatchWithNumber(... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"nft/LPStakeWithdrawNft.sol\":11364:11543  function getNextNftTokenId() public view returns (uint256) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":7300:7321  IERC20 public lpToken */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":7938:8256  function addNFTBatch(... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":8850:9368  function stake(uint256 amount) external {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"nft/LPStakeWithdrawNft.sol\":7398:7439  mapping(address => UserInfo) public users */\n    tag_15:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":7368:7391  uint256[] public nftIds */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":11551:11640  function getThreshold() public view returns (uint256) {... */\n    tag_18:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft/LPStakeWithdrawNft.sol\":10763:10841  function exit() external {... */\n    tag_19:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n    tag_20:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":504:508  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":543:577  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:577  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:539  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:577  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:617  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:617  super.supportsInterface(interfaceId) */\n      tag_101\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":605:616  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:604  super.supportsInterface */\n      tag_102\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:617  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_101:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:617  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_100:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":521:617  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11267:11356  function nftCount() public view returns (uint256) {... */\n    tag_32:\n        /* \"nft/LPStakeWithdrawNft.sol\":11308:11315  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11335:11341  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":11335:11348  nftIds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11328:11348  return nftIds.length */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11267:11356  function nftCount() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":9426:10238  function claim(address nftContractAddress) public {... */\n    tag_38:\n        /* \"nft/LPStakeWithdrawNft.sol\":9511:9512  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9495:9501  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":9495:9508  nftIds.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9495:9512  nftIds.length > 0 */\n      gt\n        /* \"nft/LPStakeWithdrawNft.sol\":9487:9532  require(nftIds.length > 0, \"All NFTs farmed\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"nft/LPStakeWithdrawNft.sol\":9580:9589  threshold */\n      sload(0x06)\n        /* \"nft/LPStakeWithdrawNft.sol\":9551:9576  pointsBalance(msg.sender) */\n      tag_108\n        /* \"nft/LPStakeWithdrawNft.sol\":9565:9575  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9551:9564  pointsBalance */\n      tag_41\n        /* \"nft/LPStakeWithdrawNft.sol\":9551:9576  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_108:\n        /* \"nft/LPStakeWithdrawNft.sol\":9551:9589  pointsBalance(msg.sender) >= threshold */\n      lt\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":9543:9613  require(pointsBalance(msg.sender) >= threshold, \"Insufficient Points\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"nft/LPStakeWithdrawNft.sol\":9624:9645  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9648:9653  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":9648:9665  users[msg.sender] */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9654:9664  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9648:9665  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":9624:9665  UserInfo storage user = users[msg.sender] */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9770  pointsBalance(msg.sender).sub(threshold) */\n      tag_112\n        /* \"nft/LPStakeWithdrawNft.sol\":9760:9769  threshold */\n      sload(0x06)\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9755  pointsBalance(msg.sender) */\n      tag_113\n        /* \"nft/LPStakeWithdrawNft.sol\":9744:9754  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9743  pointsBalance */\n      tag_41\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9755  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_113:\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9759  pointsBalance(msg.sender).sub */\n      tag_114\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9730:9770  pointsBalance(msg.sender).sub(threshold) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"nft/LPStakeWithdrawNft.sol\":9712:9716  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9712:9727  user.pointsDebt */\n      0x02\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9712:9770  user.pointsDebt = pointsBalance(msg.sender).sub(threshold) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9803:9818  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":9781:9785  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9781:9800  user.lastUpdateTime */\n      0x01\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9781:9818  user.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9840:9858  uint256 minTokenId */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9860:9873  uint256 index */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":9877:9912  LibArrayForUint256Utils.min(nftIds) */\n      tag_115\n        /* \"nft/LPStakeWithdrawNft.sol\":9905:9911  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":9877:9904  LibArrayForUint256Utils.min */\n      tag_116\n        /* \"nft/LPStakeWithdrawNft.sol\":9877:9912  LibArrayForUint256Utils.min(nftIds) */\n      jump\t// in\n    tag_115:\n        /* \"nft/LPStakeWithdrawNft.sol\":9839:9912  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9923:9975  LibArrayForUint256Utils.removeByIndex(nftIds, index) */\n      tag_117\n        /* \"nft/LPStakeWithdrawNft.sol\":9961:9967  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":9969:9974  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":9923:9960  LibArrayForUint256Utils.removeByIndex */\n      tag_118\n        /* \"nft/LPStakeWithdrawNft.sol\":9923:9975  LibArrayForUint256Utils.removeByIndex(nftIds, index) */\n      jump\t// in\n    tag_117:\n        /* \"nft/LPStakeWithdrawNft.sol\":10022:10040  nftContractAddress */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10013:10058  IERC1155(nftContractAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"nft/LPStakeWithdrawNft.sol\":10081:10085  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":10101:10111  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10126:10136  minTokenId */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":10151:10152  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":10013:10180  IERC1155(nftContractAddress).safeTransferFrom(... */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10204:10214  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10198:10230  Claim(msg.sender, minTokenId, 1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"nft/LPStakeWithdrawNft.sol\":10216:10226  minTokenId */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10228:10229  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":10198:10230  Claim(msg.sender, minTokenId, 1) */\n      mload(0x40)\n      tag_124\n      swap3\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft/LPStakeWithdrawNft.sol\":9476:10238  {... */\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9426:10238  function claim(address nftContractAddress) public {... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":10853:11040  function pointsBalance(address account) public view returns (uint256) {... */\n    tag_41:\n        /* \"nft/LPStakeWithdrawNft.sol\":10914:10921  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10934:10954  UserInfo memory user */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":10957:10962  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":10957:10971  users[account] */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10963:10970  account */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":10957:10971  users[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":10934:10971  UserInfo memory user = users[account] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10989:11032  user.pointsDebt.add(_unDebitedPoints(user)) */\n      tag_127\n        /* \"nft/LPStakeWithdrawNft.sol\":11009:11031  _unDebitedPoints(user) */\n      tag_128\n        /* \"nft/LPStakeWithdrawNft.sol\":11026:11030  user */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":11009:11025  _unDebitedPoints */\n      tag_129\n        /* \"nft/LPStakeWithdrawNft.sol\":11009:11031  _unDebitedPoints(user) */\n      jump\t// in\n    tag_128:\n        /* \"nft/LPStakeWithdrawNft.sol\":10989:10993  user */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":10989:11004  user.pointsDebt */\n      0x40\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":10989:11008  user.pointsDebt.add */\n      tag_130\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10989:11032  user.pointsDebt.add(_unDebitedPoints(user)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"nft/LPStakeWithdrawNft.sol\":10982:11032  return user.pointsDebt.add(_unDebitedPoints(user)) */\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10853:11040  function pointsBalance(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":10256:10751  function withdraw(uint256 amount) public {... */\n    tag_46:\n        /* \"nft/LPStakeWithdrawNft.sol\":10308:10329  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10332:10337  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":10332:10349  users[msg.sender] */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10338:10348  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10332:10349  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":10308:10349  UserInfo storage user = users[msg.sender] */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10383:10389  amount */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10368:10372  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10368:10379  user.amount */\n      0x00\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10368:10389  user.amount >= amount */\n      lt\n      iszero\n        /* \"nft/LPStakeWithdrawNft.sol\":10360:10413  require(user.amount >= amount, \"Insufficient staked\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"nft/LPStakeWithdrawNft.sol\":10477:10502  pointsBalance(msg.sender) */\n      tag_135\n        /* \"nft/LPStakeWithdrawNft.sol\":10491:10501  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10477:10490  pointsBalance */\n      tag_41\n        /* \"nft/LPStakeWithdrawNft.sol\":10477:10502  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_135:\n        /* \"nft/LPStakeWithdrawNft.sol\":10459:10463  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10459:10474  user.pointsDebt */\n      0x02\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10459:10502  user.pointsDebt = pointsBalance(msg.sender) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10527:10550  user.amount.sub(amount) */\n      tag_136\n        /* \"nft/LPStakeWithdrawNft.sol\":10543:10549  amount */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":10527:10531  user */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":10527:10538  user.amount */\n      0x00\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10527:10542  user.amount.sub */\n      tag_114\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10527:10550  user.amount.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"nft/LPStakeWithdrawNft.sol\":10513:10517  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10513:10524  user.amount */\n      0x00\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10513:10550  user.amount = user.amount.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10583:10598  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":10561:10565  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":10561:10580  user.lastUpdateTime */\n      0x01\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":10561:10598  user.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10619:10696  lpToken.safeTransfer(... */\n      tag_137\n        /* \"nft/LPStakeWithdrawNft.sol\":10654:10664  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10679:10685  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10619:10626  lpToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":10619:10639  lpToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_138\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":10619:10696  lpToken.safeTransfer(... */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"nft/LPStakeWithdrawNft.sol\":10724:10734  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10714:10743  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"nft/LPStakeWithdrawNft.sol\":10736:10742  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":10714:10743  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft/LPStakeWithdrawNft.sol\":10297:10751  {... */\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":10256:10751  function withdraw(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":8264:8842  function addNftBatchWithNumber(... */\n    tag_50:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      tag_141\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1311  _msgSender */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      tag_143\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1295  owner */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_143:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"nft/LPStakeWithdrawNft.sol\":8419:8439  uint256[] memory ids */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":8456:8465  idsNumber */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":8442:8466  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_148\n      jumpi\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n    tag_148:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_151:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8419:8466  uint256[] memory ids = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8477:8501  uint256[] memory amounts */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":8518:8527  idsNumber */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":8504:8528  new uint256[](idsNumber) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_152\n      jumpi\n      tag_153\n      tag_150\n      jump\t// in\n    tag_153:\n    tag_152:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_154\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_154:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8477:8528  uint256[] memory amounts = new uint256[](idsNumber) */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8544:8553  uint256 i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":8556:8561  start */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8544:8561  uint256 i = start */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8539:8671  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n    tag_155:\n        /* \"nft/LPStakeWithdrawNft.sol\":8580:8585  start */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8568:8577  idsNumber */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8568:8585  idsNumber + start */\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"nft/LPStakeWithdrawNft.sol\":8563:8564  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":8563:8586  i < (idsNumber + start) */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":8539:8671  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":8623:8624  i */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":8608:8611  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8614:8619  start */\n      dup7\n        /* \"nft/LPStakeWithdrawNft.sol\":8612:8613  i */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8612:8619  i-start */\n      tag_160\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"nft/LPStakeWithdrawNft.sol\":8608:8620  ids[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n    tag_162:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":8608:8624  ids[i-start] = i */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8658:8659  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":8639:8646  amounts */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":8649:8654  start */\n      dup7\n        /* \"nft/LPStakeWithdrawNft.sol\":8647:8648  i */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8647:8654  i-start */\n      tag_165\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_165:\n        /* \"nft/LPStakeWithdrawNft.sol\":8639:8655  amounts[i-start] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_167\n      tag_164\n      jump\t// in\n    tag_167:\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":8639:8659  amounts[i-start] = 1 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8588:8591  i++ */\n      dup1\n      dup1\n      tag_168\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8539:8671  for (uint256 i = start; i < (idsNumber + start); i++) {... */\n      jump(tag_155)\n    tag_156:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8683:8726  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      tag_170\n        /* \"nft/LPStakeWithdrawNft.sol\":8714:8720  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":8722:8725  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8683:8713  LibArrayForUint256Utils.extend */\n      tag_171\n        /* \"nft/LPStakeWithdrawNft.sol\":8683:8726  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      jump\t// in\n    tag_170:\n        /* \"nft/LPStakeWithdrawNft.sol\":8748:8766  nftContractAddress */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":8739:8789  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2eb2c2d6\n        /* \"nft/LPStakeWithdrawNft.sol\":8790:8800  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":8810:8814  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":8817:8820  ids */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8822:8829  amounts */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8739:8834  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8408:8842  {... */\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8264:8842  function addNftBatchWithNumber(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11364:11543  function getNextNftTokenId() public view returns (uint256) {... */\n    tag_52:\n        /* \"nft/LPStakeWithdrawNft.sol\":11414:11421  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11435:11453  uint256 minTokenId */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":11455:11468  uint256 index */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11472:11507  LibArrayForUint256Utils.min(nftIds) */\n      tag_178\n        /* \"nft/LPStakeWithdrawNft.sol\":11500:11506  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":11472:11499  LibArrayForUint256Utils.min */\n      tag_116\n        /* \"nft/LPStakeWithdrawNft.sol\":11472:11507  LibArrayForUint256Utils.min(nftIds) */\n      jump\t// in\n    tag_178:\n        /* \"nft/LPStakeWithdrawNft.sol\":11434:11507  (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11525:11535  minTokenId */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":11518:11535  return minTokenId */\n      swap3\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11364:11543  function getNextNftTokenId() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":7300:7321  IERC20 public lpToken */\n    tag_55:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":7938:8256  function addNFTBatch(... */\n    tag_61:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      tag_180\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1311  _msgSender */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      tag_181\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1295  owner */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_181:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_146\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"nft/LPStakeWithdrawNft.sol\":8099:8142  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      tag_185\n        /* \"nft/LPStakeWithdrawNft.sol\":8130:8136  nftIds */\n      0x02\n        /* \"nft/LPStakeWithdrawNft.sol\":8138:8141  ids */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8099:8129  LibArrayForUint256Utils.extend */\n      tag_171\n        /* \"nft/LPStakeWithdrawNft.sol\":8099:8142  LibArrayForUint256Utils.extend(nftIds ,ids) */\n      jump\t// in\n    tag_185:\n        /* \"nft/LPStakeWithdrawNft.sol\":8162:8180  nftContractAddress */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":8153:8203  IERC1155(nftContractAddress).safeBatchTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2eb2c2d6\n        /* \"nft/LPStakeWithdrawNft.sol\":8204:8214  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":8224:8228  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":8231:8234  ids */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8236:8243  amounts */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":8153:8248  IERC1155(nftContractAddress).safeBatchTransferFrom(msg.sender, address(this), ids, amounts, \"\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_173\n      jump\t// in\n    tag_186:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_187:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_189:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":7938:8256  function addNFTBatch(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n    tag_63:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      tag_191\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1311  _msgSender */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_191:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      tag_192\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1295  owner */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_146\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      tag_196\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1813:1814  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1804  _transferOwnership */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1786:1816  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_196:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1721:1824  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1116:1123  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1143:1149  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1136:1149  return _owner */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1070:1157  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":8850:9368  function stake(uint256 amount) external {... */\n    tag_70:\n        /* \"nft/LPStakeWithdrawNft.sol\":8901:9010  lpToken.safeTransferFrom(... */\n      tag_200\n        /* \"nft/LPStakeWithdrawNft.sol\":8940:8950  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":8973:8977  this */\n      address\n        /* \"nft/LPStakeWithdrawNft.sol\":8993:8999  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":8901:8908  lpToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"nft/LPStakeWithdrawNft.sol\":8901:8925  lpToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_201\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":8901:9010  lpToken.safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"nft/LPStakeWithdrawNft.sol\":9031:9052  UserInfo storage user */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9055:9060  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":9055:9072  users[msg.sender] */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9061:9071  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9055:9072  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":9031:9072  UserInfo storage user = users[msg.sender] */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9148:9149  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":9133:9137  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9133:9144  user.amount */\n      0x00\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":9133:9149  user.amount != 0 */\n      eq\n        /* \"nft/LPStakeWithdrawNft.sol\":9130:9221  if(user.amount != 0) {... */\n      tag_202\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":9184:9209  pointsBalance(msg.sender) */\n      tag_203\n        /* \"nft/LPStakeWithdrawNft.sol\":9198:9208  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9184:9197  pointsBalance */\n      tag_41\n        /* \"nft/LPStakeWithdrawNft.sol\":9184:9209  pointsBalance(msg.sender) */\n      jump\t// in\n    tag_203:\n        /* \"nft/LPStakeWithdrawNft.sol\":9166:9170  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9166:9181  user.pointsDebt */\n      0x02\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9166:9209  user.pointsDebt = pointsBalance(msg.sender) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9130:9221  if(user.amount != 0) {... */\n    tag_202:\n        /* \"nft/LPStakeWithdrawNft.sol\":9245:9268  user.amount.add(amount) */\n      tag_204\n        /* \"nft/LPStakeWithdrawNft.sol\":9261:9267  amount */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":9245:9249  user */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":9245:9256  user.amount */\n      0x00\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":9245:9260  user.amount.add */\n      tag_130\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":9245:9268  user.amount.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"nft/LPStakeWithdrawNft.sol\":9231:9235  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9231:9242  user.amount */\n      0x00\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9231:9268  user.amount = user.amount.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9301:9316  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":9279:9283  user */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":9279:9298  user.lastUpdateTime */\n      0x01\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":9279:9316  user.lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":9341:9351  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":9334:9360  Staked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"nft/LPStakeWithdrawNft.sol\":9353:9359  amount */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":9334:9360  Staked(msg.sender, amount) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"nft/LPStakeWithdrawNft.sol\":8890:9368  {... */\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":8850:9368  function stake(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":7398:7439  mapping(address => UserInfo) public users */\n    tag_73:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n    tag_79:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":683:689  bytes4 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":709:745  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":702:745  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":7368:7391  uint256[] public nftIds */\n    tag_84:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11551:11640  function getThreshold() public view returns (uint256) {... */\n    tag_87:\n        /* \"nft/LPStakeWithdrawNft.sol\":11596:11603  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11623:11632  threshold */\n      sload(0x06)\n        /* \"nft/LPStakeWithdrawNft.sol\":11616:11632  return threshold */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11551:11640  function getThreshold() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":10763:10841  function exit() external {... */\n    tag_90:\n        /* \"nft/LPStakeWithdrawNft.sol\":10799:10833  withdraw(users[msg.sender].amount) */\n      tag_211\n        /* \"nft/LPStakeWithdrawNft.sol\":10808:10813  users */\n      0x03\n        /* \"nft/LPStakeWithdrawNft.sol\":10808:10825  users[msg.sender] */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":10814:10824  msg.sender */\n      caller\n        /* \"nft/LPStakeWithdrawNft.sol\":10808:10825  users[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"nft/LPStakeWithdrawNft.sol\":10808:10832  users[msg.sender].amount */\n      0x00\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":10799:10807  withdraw */\n      tag_46\n        /* \"nft/LPStakeWithdrawNft.sol\":10799:10833  withdraw(users[msg.sender].amount) */\n      jump\t// in\n    tag_211:\n        /* \"nft/LPStakeWithdrawNft.sol\":10763:10841  function exit() external {... */\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n    tag_94:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":425:431  bytes4 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:482  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":444:482  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      tag_214\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1311  _msgSender */\n      tag_142\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1301:1313  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      tag_215\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1295  owner */\n      tag_65\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1297  owner() */\n      jump\t// in\n    tag_215:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1290:1313  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1282:1350  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap1\n      tag_146\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_216:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2088:2089  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2090  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2076  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2068:2090  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2060:2133  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      tag_222\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2163:2171  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2162  _transferOwnership */\n      tag_197\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2144:2172  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_222:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":1979:2180  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_102:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":939:943  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3279  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3303:3304  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3300  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_225\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_225:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3292:3304  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n    tag_116:\n        /* \"nft/LPStakeWithdrawNft.sol\":6359:6375  uint256 minValue */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6377:6393  uint256 minIndex */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":6417:6422  array */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6423:6424  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6417:6425  array[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_228\n      tag_164\n      jump\t// in\n    tag_228:\n    tag_227:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6406:6425  minValue = array[0] */\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6447:6448  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6436:6448  minIndex = 0 */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6463:6472  uint256 i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n    tag_230:\n        /* \"nft/LPStakeWithdrawNft.sol\":6481:6486  array */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":6481:6493  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6477:6478  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":6477:6493  i < array.length */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      iszero\n      tag_231\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":6527:6535  minValue */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6521  array */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":6522:6523  i */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6524  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_164\n      jump\t// in\n    tag_234:\n    tag_233:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6516:6535  array[i] < minValue */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":6513:6621  if(array[i] < minValue){... */\n      iszero\n      tag_236\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":6566:6571  array */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":6572:6573  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":6566:6574  array[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_237\n      jumpi\n      tag_238\n      tag_164\n      jump\t// in\n    tag_238:\n    tag_237:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":6555:6574  minValue = array[i] */\n      swap3\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6604:6605  i */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":6593:6605  minIndex = i */\n      swap2\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6513:6621  if(array[i] < minValue){... */\n    tag_236:\n        /* \"nft/LPStakeWithdrawNft.sol\":6494:6497  i++ */\n      dup1\n      dup1\n      tag_240\n      swap1\n      tag_169\n      jump\t// in\n    tag_240:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6459:6632  for(uint256 i = 0;i < array.length;i++){... */\n      jump(tag_230)\n    tag_231:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":6298:6639  function min(uint256[] storage array) internal view returns (uint256 minValue, uint256 minIndex) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n    tag_118:\n        /* \"nft/LPStakeWithdrawNft.sol\":4304:4309  array */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4304:4316  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":4296:4301  index */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4296:4316  index < array.length */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":4288:4357  require(index < array.length, \"ArrayForUint256: index out of bounds\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"nft/LPStakeWithdrawNft.sol\":4370:4483  while (index < array.length - 1) {... */\n    tag_245:\n        /* \"nft/LPStakeWithdrawNft.sol\":4400:4401  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4390  array */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4397  array.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":4385:4401  array.length - 1 */\n      tag_247\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n    tag_247:\n        /* \"nft/LPStakeWithdrawNft.sol\":4377:4382  index */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4377:4401  index < array.length - 1 */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":4370:4483  while (index < array.length - 1) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":4433:4438  array */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4447:4448  1 */\n      0x01\n        /* \"nft/LPStakeWithdrawNft.sol\":4439:4444  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4439:4448  index + 1 */\n      tag_248\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_248:\n        /* \"nft/LPStakeWithdrawNft.sol\":4433:4449  array[index + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_249\n      jumpi\n      tag_250\n      tag_164\n      jump\t// in\n    tag_250:\n    tag_249:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4423  array */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4424:4429  index */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4430  array[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_252\n      jumpi\n      tag_253\n      tag_164\n      jump\t// in\n    tag_253:\n    tag_252:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"nft/LPStakeWithdrawNft.sol\":4418:4449  array[index] = array[index + 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":4464:4471  index++ */\n      dup1\n      dup1\n      tag_255\n      swap1\n      tag_169\n      jump\t// in\n    tag_255:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":4370:4483  while (index < array.length - 1) {... */\n      jump(tag_245)\n    tag_246:\n        /* \"nft/LPStakeWithdrawNft.sol\":4493:4498  array */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":4493:4504  array.pop() */\n      dup1\n      sload\n      dup1\n      tag_256\n      jumpi\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n    tag_256:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":4212:4512  function removeByIndex(uint256[] storage array, uint index) internal{... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":11052:11255  function _unDebitedPoints(UserInfo memory user) internal view returns (uint256) {... */\n    tag_129:\n        /* \"nft/LPStakeWithdrawNft.sol\":11123:11130  uint256 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":11143:11160  uint256 blockTime */\n      dup1\n        /* \"nft/LPStakeWithdrawNft.sol\":11163:11178  block.timestamp */\n      timestamp\n        /* \"nft/LPStakeWithdrawNft.sol\":11143:11178  uint256 blockTime = block.timestamp */\n      swap1\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11247  blockTime.sub(user.lastUpdateTime).mul(user.amount) */\n      tag_261\n        /* \"nft/LPStakeWithdrawNft.sol\":11235:11239  user */\n      dup4\n        /* \"nft/LPStakeWithdrawNft.sol\":11235:11246  user.amount */\n      0x00\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11230  blockTime.sub(user.lastUpdateTime) */\n      tag_262\n        /* \"nft/LPStakeWithdrawNft.sol\":11210:11214  user */\n      dup6\n        /* \"nft/LPStakeWithdrawNft.sol\":11210:11229  user.lastUpdateTime */\n      0x20\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11205  blockTime */\n      dup5\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11209  blockTime.sub */\n      tag_114\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11230  blockTime.sub(user.lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11234  blockTime.sub(user.lastUpdateTime).mul */\n      tag_263\n      swap1\n        /* \"nft/LPStakeWithdrawNft.sol\":11196:11247  blockTime.sub(user.lastUpdateTime).mul(user.amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"nft/LPStakeWithdrawNft.sol\":11189:11247  return blockTime.sub(user.lastUpdateTime).mul(user.amount) */\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":11052:11255  function _unDebitedPoints(UserInfo memory user) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2891:2898  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2922:2923  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2919  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_265\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_265:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2911:2923  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":721:932  function safeTransfer(... */\n    tag_138:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":838:924  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_267\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":858:863  token */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":888:911  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":913:915  to */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":917:922  value */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":865:923  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_268\n      swap3\n      swap2\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":838:857  _callOptionalReturn */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":838:924  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_267:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":721:932  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":736:746  msg.sender */\n      caller\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":729:746  return msg.sender */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Context.sol\":656:754  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"nft/LPStakeWithdrawNft.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n    tag_171:\n        /* \"nft/LPStakeWithdrawNft.sol\":5097:5098  0 */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":5085:5086  b */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":5085:5093  b.length */\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5085:5098  b.length != 0 */\n      eq\n        /* \"nft/LPStakeWithdrawNft.sol\":5082:5182  if(b.length != 0){... */\n      tag_273\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":5112:5118  uint i */\n      0x00\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n    tag_274:\n        /* \"nft/LPStakeWithdrawNft.sol\":5128:5129  b */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":5128:5136  b.length */\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5124:5125  i */\n      dup2\n        /* \"nft/LPStakeWithdrawNft.sol\":5124:5136  i < b.length */\n      lt\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      iszero\n      tag_275\n      jumpi\n        /* \"nft/LPStakeWithdrawNft.sol\":5152:5153  a */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5159:5160  b */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5161:5162  i */\n      dup3\n        /* \"nft/LPStakeWithdrawNft.sol\":5159:5163  b[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_278\n      tag_164\n      jump\t// in\n    tag_278:\n    tag_277:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"nft/LPStakeWithdrawNft.sol\":5152:5164  a.push(b[i]) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"nft/LPStakeWithdrawNft.sol\":5138:5141  i++ */\n      dup1\n      dup1\n      tag_280\n      swap1\n      tag_169\n      jump\t// in\n    tag_280:\n      swap2\n      pop\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":5108:5174  for(uint i = 0; i < b.length; i++){... */\n      jump(tag_274)\n    tag_275:\n      pop\n        /* \"nft/LPStakeWithdrawNft.sol\":5082:5182  if(b.length != 0){... */\n    tag_273:\n        /* \"nft/LPStakeWithdrawNft.sol\":5008:5189  function extend(uint256[] storage a, uint256[] memory b) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_197:\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2430  address oldOwner */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2433:2439  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2414:2439  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2459:2467  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2456  _owner */\n      0x00\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2450:2467  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2514:2522  newOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2504:2512  oldOwner */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2483:2523  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2403:2531  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/access/Ownable.sol\":2340:2531  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":940:1188  function safeTransferFrom(... */\n    tag_201:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1084:1180  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_283\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1104:1109  token */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1134:1161  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1163:1167  from */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1169:1171  to */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1173:1178  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1111:1179  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_284\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_285\n      jump\t// in\n    tag_284:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1084:1103  _callOptionalReturn */\n      tag_270\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1084:1180  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_283:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":940:1188  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_263:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3629:3636  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3660:3661  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3657  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_287\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3649:3661  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3294:4010  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_270:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3718:3741  bytes memory returndata */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3813  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_290\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3772:3776  data */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3813  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3752:3757  token */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3771  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_291\n      swap1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3744:3813  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3718:3813  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3848:3849  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3828:3838  returndata */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3828:3845  returndata.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3828:3849  returndata.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3824:4003  if (returndata.length > 0) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3925:3935  returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3914:3944  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3906:3991  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3824:4003  if (returndata.length > 0) {... */\n    tag_292:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3364:4010  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3294:4010  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3603:3832  function functionCall(... */\n    tag_291:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3740:3752  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3772:3824  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_299\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3794:3800  target */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3802:3806  data */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3808:3809  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3811:3823  errorMessage */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3772:3793  functionCallWithValue */\n      tag_300\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3772:3824  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_299:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3765:3824  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":3603:3832  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4723:5233  function functionCallWithValue(... */\n    tag_300:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4893:4905  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4951:4956  value */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4926:4947  address(this).balance */\n      selfbalance\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4926:4956  address(this).balance >= value */\n      lt\n      iszero\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4918:4999  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_303\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5018:5036  isContract(target) */\n      tag_305\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5029:5035  target */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5018:5028  isContract */\n      tag_306\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5018:5036  isContract(target) */\n      jump\t// in\n    tag_305:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5010:5070  require(isContract(target), \"Address: call to non-contract\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5084:5096  bool success */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5098:5121  bytes memory returndata */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5125:5131  target */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5125:5136  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5144:5149  value */\n      dup6\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5151:5155  data */\n      dup8\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5125:5156  target.call{value: value}(data) */\n      mload(0x40)\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_314\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_313)\n    tag_314:\n      0x60\n      swap2\n      pop\n    tag_313:\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5083:5156  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5174:5225  verifyCallResult(success, returndata, errorMessage) */\n      tag_315\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5191:5198  success */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5200:5210  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5212:5224  errorMessage */\n      dup7\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5174:5190  verifyCallResult */\n      tag_316\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5174:5225  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_315:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":5167:5225  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":4723:5233  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":797:1184  function isContract(address account) internal view returns (bool) {... */\n    tag_306:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":857:861  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1065:1077  uint256 size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1132:1139  account */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1120:1140  extcodesize(account) */\n      extcodesize\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1112:1140  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1175:1176  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1172  size */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1168:1176  size > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":1161:1176  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":797:1184  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7409:8121  function verifyCallResult(... */\n    tag_316:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7559:7571  bytes memory */\n      0x60\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7588:7595  success */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7584:8114  if (success) {... */\n      iszero\n      tag_319\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7619:7629  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7612:7629  return returndata */\n      swap1\n      pop\n      jump(tag_318)\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7584:8114  if (success) {... */\n    tag_319:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7753:7754  0 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7733:7743  returndata */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7733:7750  returndata.length */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7733:7754  returndata.length > 0 */\n      gt\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7729:8103  if (returndata.length > 0) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7931:7941  returndata */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7925:7942  mload(returndata) */\n      mload\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7992:8007  returndata_size */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7979:7989  returndata */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7975:7977  32 */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7971:7990  add(32, returndata) */\n      add\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7964:8008  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7729:8103  if (returndata.length > 0) {... */\n    tag_321:\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":8074:8086  errorMessage */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":8067:8087  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_323\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":7409:8121  function verifyCallResult(... */\n    tag_318:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_325:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_326:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_327:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_328:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_329:\n        /* \"#utility.yul\":561:584   */\n      tag_408\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_328\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_409\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_409:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_330:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_411\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_329\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_414\n      tag_326\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":833:952   */\n    tag_413:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_415\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_330\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_331:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_332:\n        /* \"#utility.yul\":1268:1289   */\n      tag_418\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_331\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_420\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_333:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1719   */\n    tag_334:\n        /* \"#utility.yul\":1688:1712   */\n      tag_423\n        /* \"#utility.yul\":1706:1711   */\n      dup2\n        /* \"#utility.yul\":1688:1712   */\n      tag_333\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":1683:1686   */\n      dup3\n        /* \"#utility.yul\":1676:1713   */\n      mstore\n        /* \"#utility.yul\":1601:1719   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1725:1947   */\n    tag_34:\n        /* \"#utility.yul\":1818:1822   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x20\n        /* \"#utility.yul\":1845:1854   */\n      dup3\n        /* \"#utility.yul\":1841:1859   */\n      add\n        /* \"#utility.yul\":1833:1859   */\n      swap1\n      pop\n        /* \"#utility.yul\":1869:1940   */\n      tag_425\n        /* \"#utility.yul\":1937:1938   */\n      0x00\n        /* \"#utility.yul\":1926:1935   */\n      dup4\n        /* \"#utility.yul\":1922:1939   */\n      add\n        /* \"#utility.yul\":1913:1919   */\n      dup5\n        /* \"#utility.yul\":1869:1940   */\n      tag_334\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1725:1947   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1953:2079   */\n    tag_335:\n        /* \"#utility.yul\":1990:1997   */\n      0x00\n        /* \"#utility.yul\":2030:2072   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2023:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2073   */\n      and\n        /* \"#utility.yul\":2008:2073   */\n      swap1\n      pop\n        /* \"#utility.yul\":1953:2079   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2181   */\n    tag_336:\n        /* \"#utility.yul\":2122:2129   */\n      0x00\n        /* \"#utility.yul\":2151:2175   */\n      tag_428\n        /* \"#utility.yul\":2169:2174   */\n      dup3\n        /* \"#utility.yul\":2151:2175   */\n      tag_335\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2140:2175   */\n      swap1\n      pop\n        /* \"#utility.yul\":2085:2181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2309   */\n    tag_337:\n        /* \"#utility.yul\":2260:2284   */\n      tag_430\n        /* \"#utility.yul\":2278:2283   */\n      dup2\n        /* \"#utility.yul\":2260:2284   */\n      tag_336\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":2253:2258   */\n      dup2\n        /* \"#utility.yul\":2250:2285   */\n      eq\n        /* \"#utility.yul\":2240:2303   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2299:2300   */\n      0x00\n        /* \"#utility.yul\":2296:2297   */\n      dup1\n        /* \"#utility.yul\":2289:2301   */\n      revert\n        /* \"#utility.yul\":2240:2303   */\n    tag_431:\n        /* \"#utility.yul\":2187:2309   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2315:2454   */\n    tag_338:\n        /* \"#utility.yul\":2361:2366   */\n      0x00\n        /* \"#utility.yul\":2399:2405   */\n      dup2\n        /* \"#utility.yul\":2386:2406   */\n      calldataload\n        /* \"#utility.yul\":2377:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2415:2448   */\n      tag_433\n        /* \"#utility.yul\":2442:2447   */\n      dup2\n        /* \"#utility.yul\":2415:2448   */\n      tag_337\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2315:2454   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2460:2789   */\n    tag_37:\n        /* \"#utility.yul\":2519:2525   */\n      0x00\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2556:2565   */\n      dup3\n        /* \"#utility.yul\":2547:2554   */\n      dup5\n        /* \"#utility.yul\":2543:2566   */\n      sub\n        /* \"#utility.yul\":2539:2571   */\n      slt\n        /* \"#utility.yul\":2536:2655   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2574:2653   */\n      tag_436\n      tag_326\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":2536:2655   */\n    tag_435:\n        /* \"#utility.yul\":2694:2695   */\n      0x00\n        /* \"#utility.yul\":2719:2772   */\n      tag_437\n        /* \"#utility.yul\":2764:2771   */\n      dup5\n        /* \"#utility.yul\":2755:2761   */\n      dup3\n        /* \"#utility.yul\":2744:2753   */\n      dup6\n        /* \"#utility.yul\":2740:2762   */\n      add\n        /* \"#utility.yul\":2719:2772   */\n      tag_338\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2709:2772   */\n      swap2\n      pop\n        /* \"#utility.yul\":2665:2782   */\n      pop\n        /* \"#utility.yul\":2460:2789   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_339:\n        /* \"#utility.yul\":2868:2892   */\n      tag_439\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_333\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_440:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_340:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_442\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_339\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3397   */\n    tag_45:\n        /* \"#utility.yul\":3127:3133   */\n      0x00\n        /* \"#utility.yul\":3176:3178   */\n      0x20\n        /* \"#utility.yul\":3164:3173   */\n      dup3\n        /* \"#utility.yul\":3155:3162   */\n      dup5\n        /* \"#utility.yul\":3151:3174   */\n      sub\n        /* \"#utility.yul\":3147:3179   */\n      slt\n        /* \"#utility.yul\":3144:3263   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":3182:3261   */\n      tag_445\n      tag_326\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":3144:3263   */\n    tag_444:\n        /* \"#utility.yul\":3302:3303   */\n      0x00\n        /* \"#utility.yul\":3327:3380   */\n      tag_446\n        /* \"#utility.yul\":3372:3379   */\n      dup5\n        /* \"#utility.yul\":3363:3369   */\n      dup3\n        /* \"#utility.yul\":3352:3361   */\n      dup6\n        /* \"#utility.yul\":3348:3370   */\n      add\n        /* \"#utility.yul\":3327:3380   */\n      tag_340\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":3317:3380   */\n      swap2\n      pop\n        /* \"#utility.yul\":3273:3390   */\n      pop\n        /* \"#utility.yul\":3068:3397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3403:4022   */\n    tag_49:\n        /* \"#utility.yul\":3480:3486   */\n      0x00\n        /* \"#utility.yul\":3488:3494   */\n      dup1\n        /* \"#utility.yul\":3496:3502   */\n      0x00\n        /* \"#utility.yul\":3545:3547   */\n      0x60\n        /* \"#utility.yul\":3533:3542   */\n      dup5\n        /* \"#utility.yul\":3524:3531   */\n      dup7\n        /* \"#utility.yul\":3520:3543   */\n      sub\n        /* \"#utility.yul\":3516:3548   */\n      slt\n        /* \"#utility.yul\":3513:3632   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":3551:3630   */\n      tag_449\n      tag_326\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":3513:3632   */\n    tag_448:\n        /* \"#utility.yul\":3671:3672   */\n      0x00\n        /* \"#utility.yul\":3696:3749   */\n      tag_450\n        /* \"#utility.yul\":3741:3748   */\n      dup7\n        /* \"#utility.yul\":3732:3738   */\n      dup3\n        /* \"#utility.yul\":3721:3730   */\n      dup8\n        /* \"#utility.yul\":3717:3739   */\n      add\n        /* \"#utility.yul\":3696:3749   */\n      tag_338\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3686:3749   */\n      swap4\n      pop\n        /* \"#utility.yul\":3642:3759   */\n      pop\n        /* \"#utility.yul\":3798:3800   */\n      0x20\n        /* \"#utility.yul\":3824:3877   */\n      tag_451\n        /* \"#utility.yul\":3869:3876   */\n      dup7\n        /* \"#utility.yul\":3860:3866   */\n      dup3\n        /* \"#utility.yul\":3849:3858   */\n      dup8\n        /* \"#utility.yul\":3845:3867   */\n      add\n        /* \"#utility.yul\":3824:3877   */\n      tag_340\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3814:3877   */\n      swap3\n      pop\n        /* \"#utility.yul\":3769:3887   */\n      pop\n        /* \"#utility.yul\":3926:3928   */\n      0x40\n        /* \"#utility.yul\":3952:4005   */\n      tag_452\n        /* \"#utility.yul\":3997:4004   */\n      dup7\n        /* \"#utility.yul\":3988:3994   */\n      dup3\n        /* \"#utility.yul\":3977:3986   */\n      dup8\n        /* \"#utility.yul\":3973:3995   */\n      add\n        /* \"#utility.yul\":3952:4005   */\n      tag_340\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":3942:4005   */\n      swap2\n      pop\n        /* \"#utility.yul\":3897:4015   */\n      pop\n        /* \"#utility.yul\":3403:4022   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4028:4088   */\n    tag_341:\n        /* \"#utility.yul\":4056:4059   */\n      0x00\n        /* \"#utility.yul\":4077:4082   */\n      dup2\n        /* \"#utility.yul\":4070:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":4028:4088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4236   */\n    tag_342:\n        /* \"#utility.yul\":4144:4153   */\n      0x00\n        /* \"#utility.yul\":4177:4230   */\n      tag_455\n        /* \"#utility.yul\":4195:4229   */\n      tag_456\n        /* \"#utility.yul\":4204:4228   */\n      tag_457\n        /* \"#utility.yul\":4222:4227   */\n      dup5\n        /* \"#utility.yul\":4204:4228   */\n      tag_335\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":4195:4229   */\n      tag_341\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":4177:4230   */\n      tag_335\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":4164:4230   */\n      swap1\n      pop\n        /* \"#utility.yul\":4094:4236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4242:4368   */\n    tag_343:\n        /* \"#utility.yul\":4292:4301   */\n      0x00\n        /* \"#utility.yul\":4325:4362   */\n      tag_459\n        /* \"#utility.yul\":4356:4361   */\n      dup3\n        /* \"#utility.yul\":4325:4362   */\n      tag_342\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":4312:4362   */\n      swap1\n      pop\n        /* \"#utility.yul\":4242:4368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4374:4515   */\n    tag_344:\n        /* \"#utility.yul\":4439:4448   */\n      0x00\n        /* \"#utility.yul\":4472:4509   */\n      tag_461\n        /* \"#utility.yul\":4503:4508   */\n      dup3\n        /* \"#utility.yul\":4472:4509   */\n      tag_343\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":4459:4509   */\n      swap1\n      pop\n        /* \"#utility.yul\":4374:4515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4521:4682   */\n    tag_345:\n        /* \"#utility.yul\":4623:4675   */\n      tag_463\n        /* \"#utility.yul\":4669:4674   */\n      dup2\n        /* \"#utility.yul\":4623:4675   */\n      tag_344\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4618:4621   */\n      dup3\n        /* \"#utility.yul\":4611:4676   */\n      mstore\n        /* \"#utility.yul\":4521:4682   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4688:4940   */\n    tag_57:\n        /* \"#utility.yul\":4796:4800   */\n      0x00\n        /* \"#utility.yul\":4834:4836   */\n      0x20\n        /* \"#utility.yul\":4823:4832   */\n      dup3\n        /* \"#utility.yul\":4819:4837   */\n      add\n        /* \"#utility.yul\":4811:4837   */\n      swap1\n      pop\n        /* \"#utility.yul\":4847:4933   */\n      tag_465\n        /* \"#utility.yul\":4930:4931   */\n      0x00\n        /* \"#utility.yul\":4919:4928   */\n      dup4\n        /* \"#utility.yul\":4915:4932   */\n      add\n        /* \"#utility.yul\":4906:4912   */\n      dup5\n        /* \"#utility.yul\":4847:4933   */\n      tag_345\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4688:4940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4946:5063   */\n    tag_346:\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5069:5171   */\n    tag_347:\n        /* \"#utility.yul\":5110:5116   */\n      0x00\n        /* \"#utility.yul\":5161:5163   */\n      0x1f\n        /* \"#utility.yul\":5157:5164   */\n      not\n        /* \"#utility.yul\":5152:5154   */\n      0x1f\n        /* \"#utility.yul\":5145:5150   */\n      dup4\n        /* \"#utility.yul\":5141:5155   */\n      add\n        /* \"#utility.yul\":5137:5165   */\n      and\n        /* \"#utility.yul\":5127:5165   */\n      swap1\n      pop\n        /* \"#utility.yul\":5069:5171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5177:5357   */\n    tag_150:\n        /* \"#utility.yul\":5225:5302   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5222:5223   */\n      0x00\n        /* \"#utility.yul\":5215:5303   */\n      mstore\n        /* \"#utility.yul\":5322:5326   */\n      0x41\n        /* \"#utility.yul\":5319:5320   */\n      0x04\n        /* \"#utility.yul\":5312:5327   */\n      mstore\n        /* \"#utility.yul\":5346:5350   */\n      0x24\n        /* \"#utility.yul\":5343:5344   */\n      0x00\n        /* \"#utility.yul\":5336:5351   */\n      revert\n        /* \"#utility.yul\":5363:5644   */\n    tag_348:\n        /* \"#utility.yul\":5446:5473   */\n      tag_470\n        /* \"#utility.yul\":5468:5472   */\n      dup3\n        /* \"#utility.yul\":5446:5473   */\n      tag_347\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":5438:5444   */\n      dup2\n        /* \"#utility.yul\":5434:5474   */\n      add\n        /* \"#utility.yul\":5576:5582   */\n      dup2\n        /* \"#utility.yul\":5564:5574   */\n      dup2\n        /* \"#utility.yul\":5561:5583   */\n      lt\n        /* \"#utility.yul\":5540:5558   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5528:5538   */\n      dup3\n        /* \"#utility.yul\":5525:5559   */\n      gt\n        /* \"#utility.yul\":5522:5584   */\n      or\n        /* \"#utility.yul\":5519:5607   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":5587:5605   */\n      tag_472\n      tag_150\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":5519:5607   */\n    tag_471:\n        /* \"#utility.yul\":5627:5637   */\n      dup1\n        /* \"#utility.yul\":5623:5625   */\n      0x40\n        /* \"#utility.yul\":5616:5638   */\n      mstore\n        /* \"#utility.yul\":5406:5644   */\n      pop\n        /* \"#utility.yul\":5363:5644   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5650:5779   */\n    tag_349:\n        /* \"#utility.yul\":5684:5690   */\n      0x00\n        /* \"#utility.yul\":5711:5731   */\n      tag_474\n      tag_325\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":5701:5731   */\n      swap1\n      pop\n        /* \"#utility.yul\":5740:5773   */\n      tag_475\n        /* \"#utility.yul\":5768:5772   */\n      dup3\n        /* \"#utility.yul\":5760:5766   */\n      dup3\n        /* \"#utility.yul\":5740:5773   */\n      tag_348\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":5650:5779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5785:6096   */\n    tag_350:\n        /* \"#utility.yul\":5862:5866   */\n      0x00\n        /* \"#utility.yul\":5952:5970   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5941:5971   */\n      gt\n        /* \"#utility.yul\":5938:5994   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":5974:5992   */\n      tag_478\n      tag_150\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5938:5994   */\n    tag_477:\n        /* \"#utility.yul\":6024:6028   */\n      0x20\n        /* \"#utility.yul\":6016:6022   */\n      dup3\n        /* \"#utility.yul\":6012:6029   */\n      mul\n        /* \"#utility.yul\":6004:6029   */\n      swap1\n      pop\n        /* \"#utility.yul\":6084:6088   */\n      0x20\n        /* \"#utility.yul\":6078:6082   */\n      dup2\n        /* \"#utility.yul\":6074:6089   */\n      add\n        /* \"#utility.yul\":6066:6089   */\n      swap1\n      pop\n        /* \"#utility.yul\":5785:6096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6102:6219   */\n    tag_351:\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6208:6209   */\n      dup1\n        /* \"#utility.yul\":6201:6213   */\n      revert\n        /* \"#utility.yul\":6242:6952   */\n    tag_352:\n        /* \"#utility.yul\":6338:6343   */\n      0x00\n        /* \"#utility.yul\":6363:6444   */\n      tag_481\n        /* \"#utility.yul\":6379:6443   */\n      tag_482\n        /* \"#utility.yul\":6436:6442   */\n      dup5\n        /* \"#utility.yul\":6379:6443   */\n      tag_350\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6363:6444   */\n      tag_349\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6354:6444   */\n      swap1\n      pop\n        /* \"#utility.yul\":6464:6469   */\n      dup1\n        /* \"#utility.yul\":6493:6499   */\n      dup4\n        /* \"#utility.yul\":6486:6491   */\n      dup3\n        /* \"#utility.yul\":6479:6500   */\n      mstore\n        /* \"#utility.yul\":6527:6531   */\n      0x20\n        /* \"#utility.yul\":6520:6525   */\n      dup3\n        /* \"#utility.yul\":6516:6532   */\n      add\n        /* \"#utility.yul\":6509:6532   */\n      swap1\n      pop\n        /* \"#utility.yul\":6580:6584   */\n      0x20\n        /* \"#utility.yul\":6572:6578   */\n      dup5\n        /* \"#utility.yul\":6568:6585   */\n      mul\n        /* \"#utility.yul\":6560:6566   */\n      dup4\n        /* \"#utility.yul\":6556:6586   */\n      add\n        /* \"#utility.yul\":6609:6612   */\n      dup6\n        /* \"#utility.yul\":6601:6607   */\n      dup2\n        /* \"#utility.yul\":6598:6613   */\n      gt\n        /* \"#utility.yul\":6595:6717   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":6628:6707   */\n      tag_484\n      tag_351\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":6595:6717   */\n    tag_483:\n        /* \"#utility.yul\":6743:6749   */\n      dup4\n        /* \"#utility.yul\":6726:6946   */\n    tag_485:\n        /* \"#utility.yul\":6760:6766   */\n      dup2\n        /* \"#utility.yul\":6755:6758   */\n      dup2\n        /* \"#utility.yul\":6752:6767   */\n      lt\n        /* \"#utility.yul\":6726:6946   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":6835:6838   */\n      dup1\n        /* \"#utility.yul\":6864:6901   */\n      tag_488\n        /* \"#utility.yul\":6897:6900   */\n      dup9\n        /* \"#utility.yul\":6885:6895   */\n      dup3\n        /* \"#utility.yul\":6864:6901   */\n      tag_340\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6859:6862   */\n      dup5\n        /* \"#utility.yul\":6852:6902   */\n      mstore\n        /* \"#utility.yul\":6931:6935   */\n      0x20\n        /* \"#utility.yul\":6926:6929   */\n      dup5\n        /* \"#utility.yul\":6922:6936   */\n      add\n        /* \"#utility.yul\":6915:6936   */\n      swap4\n      pop\n        /* \"#utility.yul\":6802:6946   */\n      pop\n        /* \"#utility.yul\":6786:6790   */\n      0x20\n        /* \"#utility.yul\":6781:6784   */\n      dup2\n        /* \"#utility.yul\":6777:6791   */\n      add\n        /* \"#utility.yul\":6770:6791   */\n      swap1\n      pop\n        /* \"#utility.yul\":6726:6946   */\n      jump(tag_485)\n    tag_487:\n        /* \"#utility.yul\":6730:6751   */\n      pop\n        /* \"#utility.yul\":6344:6952   */\n      pop\n      pop\n        /* \"#utility.yul\":6242:6952   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6975:7345   */\n    tag_353:\n        /* \"#utility.yul\":7046:7051   */\n      0x00\n        /* \"#utility.yul\":7095:7098   */\n      dup3\n        /* \"#utility.yul\":7088:7092   */\n      0x1f\n        /* \"#utility.yul\":7080:7086   */\n      dup4\n        /* \"#utility.yul\":7076:7093   */\n      add\n        /* \"#utility.yul\":7072:7099   */\n      slt\n        /* \"#utility.yul\":7062:7184   */\n      tag_490\n      jumpi\n        /* \"#utility.yul\":7103:7182   */\n      tag_491\n      tag_346\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7062:7184   */\n    tag_490:\n        /* \"#utility.yul\":7220:7226   */\n      dup2\n        /* \"#utility.yul\":7207:7227   */\n      calldataload\n        /* \"#utility.yul\":7245:7339   */\n      tag_492\n        /* \"#utility.yul\":7335:7338   */\n      dup5\n        /* \"#utility.yul\":7327:7333   */\n      dup3\n        /* \"#utility.yul\":7320:7324   */\n      0x20\n        /* \"#utility.yul\":7312:7318   */\n      dup7\n        /* \"#utility.yul\":7308:7325   */\n      add\n        /* \"#utility.yul\":7245:7339   */\n      tag_352\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7236:7339   */\n      swap2\n      pop\n        /* \"#utility.yul\":7052:7345   */\n      pop\n        /* \"#utility.yul\":6975:7345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7351:8390   */\n    tag_60:\n        /* \"#utility.yul\":7478:7484   */\n      0x00\n        /* \"#utility.yul\":7486:7492   */\n      dup1\n        /* \"#utility.yul\":7494:7500   */\n      0x00\n        /* \"#utility.yul\":7543:7545   */\n      0x60\n        /* \"#utility.yul\":7531:7540   */\n      dup5\n        /* \"#utility.yul\":7522:7529   */\n      dup7\n        /* \"#utility.yul\":7518:7541   */\n      sub\n        /* \"#utility.yul\":7514:7546   */\n      slt\n        /* \"#utility.yul\":7511:7630   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":7549:7628   */\n      tag_495\n      tag_326\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":7511:7630   */\n    tag_494:\n        /* \"#utility.yul\":7669:7670   */\n      0x00\n        /* \"#utility.yul\":7694:7747   */\n      tag_496\n        /* \"#utility.yul\":7739:7746   */\n      dup7\n        /* \"#utility.yul\":7730:7736   */\n      dup3\n        /* \"#utility.yul\":7719:7728   */\n      dup8\n        /* \"#utility.yul\":7715:7737   */\n      add\n        /* \"#utility.yul\":7694:7747   */\n      tag_338\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":7684:7747   */\n      swap4\n      pop\n        /* \"#utility.yul\":7640:7757   */\n      pop\n        /* \"#utility.yul\":7824:7826   */\n      0x20\n        /* \"#utility.yul\":7813:7822   */\n      dup5\n        /* \"#utility.yul\":7809:7827   */\n      add\n        /* \"#utility.yul\":7796:7828   */\n      calldataload\n        /* \"#utility.yul\":7855:7873   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7847:7853   */\n      dup2\n        /* \"#utility.yul\":7844:7874   */\n      gt\n        /* \"#utility.yul\":7841:7958   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":7877:7956   */\n      tag_498\n      tag_327\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":7841:7958   */\n    tag_497:\n        /* \"#utility.yul\":7982:8060   */\n      tag_499\n        /* \"#utility.yul\":8052:8059   */\n      dup7\n        /* \"#utility.yul\":8043:8049   */\n      dup3\n        /* \"#utility.yul\":8032:8041   */\n      dup8\n        /* \"#utility.yul\":8028:8050   */\n      add\n        /* \"#utility.yul\":7982:8060   */\n      tag_353\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":7972:8060   */\n      swap3\n      pop\n        /* \"#utility.yul\":7767:8070   */\n      pop\n        /* \"#utility.yul\":8137:8139   */\n      0x40\n        /* \"#utility.yul\":8126:8135   */\n      dup5\n        /* \"#utility.yul\":8122:8140   */\n      add\n        /* \"#utility.yul\":8109:8141   */\n      calldataload\n        /* \"#utility.yul\":8168:8186   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8160:8166   */\n      dup2\n        /* \"#utility.yul\":8157:8187   */\n      gt\n        /* \"#utility.yul\":8154:8271   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":8190:8269   */\n      tag_501\n      tag_327\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8154:8271   */\n    tag_500:\n        /* \"#utility.yul\":8295:8373   */\n      tag_502\n        /* \"#utility.yul\":8365:8372   */\n      dup7\n        /* \"#utility.yul\":8356:8362   */\n      dup3\n        /* \"#utility.yul\":8345:8354   */\n      dup8\n        /* \"#utility.yul\":8341:8363   */\n      add\n        /* \"#utility.yul\":8295:8373   */\n      tag_353\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8285:8373   */\n      swap2\n      pop\n        /* \"#utility.yul\":8080:8383   */\n      pop\n        /* \"#utility.yul\":7351:8390   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8396:8514   */\n    tag_354:\n        /* \"#utility.yul\":8483:8507   */\n      tag_504\n        /* \"#utility.yul\":8501:8506   */\n      dup2\n        /* \"#utility.yul\":8483:8507   */\n      tag_336\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8478:8481   */\n      dup3\n        /* \"#utility.yul\":8471:8508   */\n      mstore\n        /* \"#utility.yul\":8396:8514   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8742   */\n    tag_67:\n        /* \"#utility.yul\":8613:8617   */\n      0x00\n        /* \"#utility.yul\":8651:8653   */\n      0x20\n        /* \"#utility.yul\":8640:8649   */\n      dup3\n        /* \"#utility.yul\":8636:8654   */\n      add\n        /* \"#utility.yul\":8628:8654   */\n      swap1\n      pop\n        /* \"#utility.yul\":8664:8735   */\n      tag_506\n        /* \"#utility.yul\":8732:8733   */\n      0x00\n        /* \"#utility.yul\":8721:8730   */\n      dup4\n        /* \"#utility.yul\":8717:8734   */\n      add\n        /* \"#utility.yul\":8708:8714   */\n      dup5\n        /* \"#utility.yul\":8664:8735   */\n      tag_354\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8520:8742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8748:9190   */\n    tag_75:\n        /* \"#utility.yul\":8897:8901   */\n      0x00\n        /* \"#utility.yul\":8935:8937   */\n      0x60\n        /* \"#utility.yul\":8924:8933   */\n      dup3\n        /* \"#utility.yul\":8920:8938   */\n      add\n        /* \"#utility.yul\":8912:8938   */\n      swap1\n      pop\n        /* \"#utility.yul\":8948:9019   */\n      tag_508\n        /* \"#utility.yul\":9016:9017   */\n      0x00\n        /* \"#utility.yul\":9005:9014   */\n      dup4\n        /* \"#utility.yul\":9001:9018   */\n      add\n        /* \"#utility.yul\":8992:8998   */\n      dup7\n        /* \"#utility.yul\":8948:9019   */\n      tag_334\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9029:9101   */\n      tag_509\n        /* \"#utility.yul\":9097:9099   */\n      0x20\n        /* \"#utility.yul\":9086:9095   */\n      dup4\n        /* \"#utility.yul\":9082:9100   */\n      add\n        /* \"#utility.yul\":9073:9079   */\n      dup6\n        /* \"#utility.yul\":9029:9101   */\n      tag_334\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9111:9183   */\n      tag_510\n        /* \"#utility.yul\":9179:9181   */\n      0x40\n        /* \"#utility.yul\":9168:9177   */\n      dup4\n        /* \"#utility.yul\":9164:9182   */\n      add\n        /* \"#utility.yul\":9155:9161   */\n      dup5\n        /* \"#utility.yul\":9111:9183   */\n      tag_334\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8748:9190   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9196:9313   */\n    tag_355:\n        /* \"#utility.yul\":9305:9306   */\n      0x00\n        /* \"#utility.yul\":9302:9303   */\n      dup1\n        /* \"#utility.yul\":9295:9307   */\n      revert\n        /* \"#utility.yul\":9319:9626   */\n    tag_356:\n        /* \"#utility.yul\":9380:9384   */\n      0x00\n        /* \"#utility.yul\":9470:9488   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9462:9468   */\n      dup3\n        /* \"#utility.yul\":9459:9489   */\n      gt\n        /* \"#utility.yul\":9456:9512   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":9492:9510   */\n      tag_514\n      tag_150\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9456:9512   */\n    tag_513:\n        /* \"#utility.yul\":9530:9559   */\n      tag_515\n        /* \"#utility.yul\":9552:9558   */\n      dup3\n        /* \"#utility.yul\":9530:9559   */\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9522:9559   */\n      swap1\n      pop\n        /* \"#utility.yul\":9614:9618   */\n      0x20\n        /* \"#utility.yul\":9608:9612   */\n      dup2\n        /* \"#utility.yul\":9604:9619   */\n      add\n        /* \"#utility.yul\":9596:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9319:9626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9632:9786   */\n    tag_357:\n        /* \"#utility.yul\":9716:9722   */\n      dup3\n        /* \"#utility.yul\":9711:9714   */\n      dup2\n        /* \"#utility.yul\":9706:9709   */\n      dup4\n        /* \"#utility.yul\":9693:9723   */\n      calldatacopy\n        /* \"#utility.yul\":9778:9779   */\n      0x00\n        /* \"#utility.yul\":9769:9775   */\n      dup4\n        /* \"#utility.yul\":9764:9767   */\n      dup4\n        /* \"#utility.yul\":9760:9776   */\n      add\n        /* \"#utility.yul\":9753:9780   */\n      mstore\n        /* \"#utility.yul\":9632:9786   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9792:10202   */\n    tag_358:\n        /* \"#utility.yul\":9869:9874   */\n      0x00\n        /* \"#utility.yul\":9894:9959   */\n      tag_518\n        /* \"#utility.yul\":9910:9958   */\n      tag_519\n        /* \"#utility.yul\":9951:9957   */\n      dup5\n        /* \"#utility.yul\":9910:9958   */\n      tag_356\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9894:9959   */\n      tag_349\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":9885:9959   */\n      swap1\n      pop\n        /* \"#utility.yul\":9982:9988   */\n      dup3\n        /* \"#utility.yul\":9975:9980   */\n      dup2\n        /* \"#utility.yul\":9968:9989   */\n      mstore\n        /* \"#utility.yul\":10020:10024   */\n      0x20\n        /* \"#utility.yul\":10013:10018   */\n      dup2\n        /* \"#utility.yul\":10009:10025   */\n      add\n        /* \"#utility.yul\":10058:10061   */\n      dup5\n        /* \"#utility.yul\":10049:10055   */\n      dup5\n        /* \"#utility.yul\":10044:10047   */\n      dup5\n        /* \"#utility.yul\":10040:10056   */\n      add\n        /* \"#utility.yul\":10037:10062   */\n      gt\n        /* \"#utility.yul\":10034:10146   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10065:10144   */\n      tag_521\n      tag_355\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10034:10146   */\n    tag_520:\n        /* \"#utility.yul\":10155:10196   */\n      tag_522\n        /* \"#utility.yul\":10189:10195   */\n      dup5\n        /* \"#utility.yul\":10184:10187   */\n      dup3\n        /* \"#utility.yul\":10179:10182   */\n      dup6\n        /* \"#utility.yul\":10155:10196   */\n      tag_357\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":9875:10202   */\n      pop\n        /* \"#utility.yul\":9792:10202   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10221:10559   */\n    tag_359:\n        /* \"#utility.yul\":10276:10281   */\n      0x00\n        /* \"#utility.yul\":10325:10328   */\n      dup3\n        /* \"#utility.yul\":10318:10322   */\n      0x1f\n        /* \"#utility.yul\":10310:10316   */\n      dup4\n        /* \"#utility.yul\":10306:10323   */\n      add\n        /* \"#utility.yul\":10302:10329   */\n      slt\n        /* \"#utility.yul\":10292:10414   */\n      tag_524\n      jumpi\n        /* \"#utility.yul\":10333:10412   */\n      tag_525\n      tag_346\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10292:10414   */\n    tag_524:\n        /* \"#utility.yul\":10450:10456   */\n      dup2\n        /* \"#utility.yul\":10437:10457   */\n      calldataload\n        /* \"#utility.yul\":10475:10553   */\n      tag_526\n        /* \"#utility.yul\":10549:10552   */\n      dup5\n        /* \"#utility.yul\":10541:10547   */\n      dup3\n        /* \"#utility.yul\":10534:10538   */\n      0x20\n        /* \"#utility.yul\":10526:10532   */\n      dup7\n        /* \"#utility.yul\":10522:10539   */\n      add\n        /* \"#utility.yul\":10475:10553   */\n      tag_358\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10466:10553   */\n      swap2\n      pop\n        /* \"#utility.yul\":10282:10559   */\n      pop\n        /* \"#utility.yul\":10221:10559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10565:12074   */\n    tag_78:\n        /* \"#utility.yul\":10719:10725   */\n      0x00\n        /* \"#utility.yul\":10727:10733   */\n      dup1\n        /* \"#utility.yul\":10735:10741   */\n      0x00\n        /* \"#utility.yul\":10743:10749   */\n      dup1\n        /* \"#utility.yul\":10751:10757   */\n      0x00\n        /* \"#utility.yul\":10800:10803   */\n      0xa0\n        /* \"#utility.yul\":10788:10797   */\n      dup7\n        /* \"#utility.yul\":10779:10786   */\n      dup9\n        /* \"#utility.yul\":10775:10798   */\n      sub\n        /* \"#utility.yul\":10771:10804   */\n      slt\n        /* \"#utility.yul\":10768:10888   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":10807:10886   */\n      tag_529\n      tag_326\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10768:10888   */\n    tag_528:\n        /* \"#utility.yul\":10927:10928   */\n      0x00\n        /* \"#utility.yul\":10952:11005   */\n      tag_530\n        /* \"#utility.yul\":10997:11004   */\n      dup9\n        /* \"#utility.yul\":10988:10994   */\n      dup3\n        /* \"#utility.yul\":10977:10986   */\n      dup10\n        /* \"#utility.yul\":10973:10995   */\n      add\n        /* \"#utility.yul\":10952:11005   */\n      tag_338\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10942:11005   */\n      swap6\n      pop\n        /* \"#utility.yul\":10898:11015   */\n      pop\n        /* \"#utility.yul\":11054:11056   */\n      0x20\n        /* \"#utility.yul\":11080:11133   */\n      tag_531\n        /* \"#utility.yul\":11125:11132   */\n      dup9\n        /* \"#utility.yul\":11116:11122   */\n      dup3\n        /* \"#utility.yul\":11105:11114   */\n      dup10\n        /* \"#utility.yul\":11101:11123   */\n      add\n        /* \"#utility.yul\":11080:11133   */\n      tag_338\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11070:11133   */\n      swap5\n      pop\n        /* \"#utility.yul\":11025:11143   */\n      pop\n        /* \"#utility.yul\":11210:11212   */\n      0x40\n        /* \"#utility.yul\":11199:11208   */\n      dup7\n        /* \"#utility.yul\":11195:11213   */\n      add\n        /* \"#utility.yul\":11182:11214   */\n      calldataload\n        /* \"#utility.yul\":11241:11259   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11233:11239   */\n      dup2\n        /* \"#utility.yul\":11230:11260   */\n      gt\n        /* \"#utility.yul\":11227:11344   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":11263:11342   */\n      tag_533\n      tag_327\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11227:11344   */\n    tag_532:\n        /* \"#utility.yul\":11368:11446   */\n      tag_534\n        /* \"#utility.yul\":11438:11445   */\n      dup9\n        /* \"#utility.yul\":11429:11435   */\n      dup3\n        /* \"#utility.yul\":11418:11427   */\n      dup10\n        /* \"#utility.yul\":11414:11436   */\n      add\n        /* \"#utility.yul\":11368:11446   */\n      tag_353\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11358:11446   */\n      swap4\n      pop\n        /* \"#utility.yul\":11153:11456   */\n      pop\n        /* \"#utility.yul\":11523:11525   */\n      0x60\n        /* \"#utility.yul\":11512:11521   */\n      dup7\n        /* \"#utility.yul\":11508:11526   */\n      add\n        /* \"#utility.yul\":11495:11527   */\n      calldataload\n        /* \"#utility.yul\":11554:11572   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11546:11552   */\n      dup2\n        /* \"#utility.yul\":11543:11573   */\n      gt\n        /* \"#utility.yul\":11540:11657   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11576:11655   */\n      tag_536\n      tag_327\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11540:11657   */\n    tag_535:\n        /* \"#utility.yul\":11681:11759   */\n      tag_537\n        /* \"#utility.yul\":11751:11758   */\n      dup9\n        /* \"#utility.yul\":11742:11748   */\n      dup3\n        /* \"#utility.yul\":11731:11740   */\n      dup10\n        /* \"#utility.yul\":11727:11749   */\n      add\n        /* \"#utility.yul\":11681:11759   */\n      tag_353\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11671:11759   */\n      swap3\n      pop\n        /* \"#utility.yul\":11466:11769   */\n      pop\n        /* \"#utility.yul\":11836:11839   */\n      0x80\n        /* \"#utility.yul\":11825:11834   */\n      dup7\n        /* \"#utility.yul\":11821:11840   */\n      add\n        /* \"#utility.yul\":11808:11841   */\n      calldataload\n        /* \"#utility.yul\":11868:11886   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11860:11866   */\n      dup2\n        /* \"#utility.yul\":11857:11887   */\n      gt\n        /* \"#utility.yul\":11854:11971   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":11890:11969   */\n      tag_539\n      tag_327\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11854:11971   */\n    tag_538:\n        /* \"#utility.yul\":11995:12057   */\n      tag_540\n        /* \"#utility.yul\":12049:12056   */\n      dup9\n        /* \"#utility.yul\":12040:12046   */\n      dup3\n        /* \"#utility.yul\":12029:12038   */\n      dup10\n        /* \"#utility.yul\":12025:12047   */\n      add\n        /* \"#utility.yul\":11995:12057   */\n      tag_359\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":11985:12057   */\n      swap2\n      pop\n        /* \"#utility.yul\":11779:12067   */\n      pop\n        /* \"#utility.yul\":10565:12074   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12080:12195   */\n    tag_360:\n        /* \"#utility.yul\":12165:12188   */\n      tag_542\n        /* \"#utility.yul\":12182:12187   */\n      dup2\n        /* \"#utility.yul\":12165:12188   */\n      tag_328\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12160:12163   */\n      dup3\n        /* \"#utility.yul\":12153:12189   */\n      mstore\n        /* \"#utility.yul\":12080:12195   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12201:12419   */\n    tag_81:\n        /* \"#utility.yul\":12292:12296   */\n      0x00\n        /* \"#utility.yul\":12330:12332   */\n      0x20\n        /* \"#utility.yul\":12319:12328   */\n      dup3\n        /* \"#utility.yul\":12315:12333   */\n      add\n        /* \"#utility.yul\":12307:12333   */\n      swap1\n      pop\n        /* \"#utility.yul\":12343:12412   */\n      tag_544\n        /* \"#utility.yul\":12409:12410   */\n      0x00\n        /* \"#utility.yul\":12398:12407   */\n      dup4\n        /* \"#utility.yul\":12394:12411   */\n      add\n        /* \"#utility.yul\":12385:12391   */\n      dup5\n        /* \"#utility.yul\":12343:12412   */\n      tag_360\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12201:12419   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12425:13514   */\n    tag_93:\n        /* \"#utility.yul\":12529:12535   */\n      0x00\n        /* \"#utility.yul\":12537:12543   */\n      dup1\n        /* \"#utility.yul\":12545:12551   */\n      0x00\n        /* \"#utility.yul\":12553:12559   */\n      dup1\n        /* \"#utility.yul\":12561:12567   */\n      0x00\n        /* \"#utility.yul\":12610:12613   */\n      0xa0\n        /* \"#utility.yul\":12598:12607   */\n      dup7\n        /* \"#utility.yul\":12589:12596   */\n      dup9\n        /* \"#utility.yul\":12585:12608   */\n      sub\n        /* \"#utility.yul\":12581:12614   */\n      slt\n        /* \"#utility.yul\":12578:12698   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":12617:12696   */\n      tag_547\n      tag_326\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12578:12698   */\n    tag_546:\n        /* \"#utility.yul\":12737:12738   */\n      0x00\n        /* \"#utility.yul\":12762:12815   */\n      tag_548\n        /* \"#utility.yul\":12807:12814   */\n      dup9\n        /* \"#utility.yul\":12798:12804   */\n      dup3\n        /* \"#utility.yul\":12787:12796   */\n      dup10\n        /* \"#utility.yul\":12783:12805   */\n      add\n        /* \"#utility.yul\":12762:12815   */\n      tag_338\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":12752:12815   */\n      swap6\n      pop\n        /* \"#utility.yul\":12708:12825   */\n      pop\n        /* \"#utility.yul\":12864:12866   */\n      0x20\n        /* \"#utility.yul\":12890:12943   */\n      tag_549\n        /* \"#utility.yul\":12935:12942   */\n      dup9\n        /* \"#utility.yul\":12926:12932   */\n      dup3\n        /* \"#utility.yul\":12915:12924   */\n      dup10\n        /* \"#utility.yul\":12911:12933   */\n      add\n        /* \"#utility.yul\":12890:12943   */\n      tag_338\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":12880:12943   */\n      swap5\n      pop\n        /* \"#utility.yul\":12835:12953   */\n      pop\n        /* \"#utility.yul\":12992:12994   */\n      0x40\n        /* \"#utility.yul\":13018:13071   */\n      tag_550\n        /* \"#utility.yul\":13063:13070   */\n      dup9\n        /* \"#utility.yul\":13054:13060   */\n      dup3\n        /* \"#utility.yul\":13043:13052   */\n      dup10\n        /* \"#utility.yul\":13039:13061   */\n      add\n        /* \"#utility.yul\":13018:13071   */\n      tag_340\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13008:13071   */\n      swap4\n      pop\n        /* \"#utility.yul\":12963:13081   */\n      pop\n        /* \"#utility.yul\":13120:13122   */\n      0x60\n        /* \"#utility.yul\":13146:13199   */\n      tag_551\n        /* \"#utility.yul\":13191:13198   */\n      dup9\n        /* \"#utility.yul\":13182:13188   */\n      dup3\n        /* \"#utility.yul\":13171:13180   */\n      dup10\n        /* \"#utility.yul\":13167:13189   */\n      add\n        /* \"#utility.yul\":13146:13199   */\n      tag_340\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13136:13199   */\n      swap3\n      pop\n        /* \"#utility.yul\":13091:13209   */\n      pop\n        /* \"#utility.yul\":13276:13279   */\n      0x80\n        /* \"#utility.yul\":13265:13274   */\n      dup7\n        /* \"#utility.yul\":13261:13280   */\n      add\n        /* \"#utility.yul\":13248:13281   */\n      calldataload\n        /* \"#utility.yul\":13308:13326   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13300:13306   */\n      dup2\n        /* \"#utility.yul\":13297:13327   */\n      gt\n        /* \"#utility.yul\":13294:13411   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":13330:13409   */\n      tag_553\n      tag_327\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13294:13411   */\n    tag_552:\n        /* \"#utility.yul\":13435:13497   */\n      tag_554\n        /* \"#utility.yul\":13489:13496   */\n      dup9\n        /* \"#utility.yul\":13480:13486   */\n      dup3\n        /* \"#utility.yul\":13469:13478   */\n      dup10\n        /* \"#utility.yul\":13465:13487   */\n      add\n        /* \"#utility.yul\":13435:13497   */\n      tag_359\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13425:13497   */\n      swap2\n      pop\n        /* \"#utility.yul\":13219:13507   */\n      pop\n        /* \"#utility.yul\":12425:13514   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13520:13689   */\n    tag_361:\n        /* \"#utility.yul\":13604:13615   */\n      0x00\n        /* \"#utility.yul\":13638:13644   */\n      dup3\n        /* \"#utility.yul\":13633:13636   */\n      dup3\n        /* \"#utility.yul\":13626:13645   */\n      mstore\n        /* \"#utility.yul\":13678:13682   */\n      0x20\n        /* \"#utility.yul\":13673:13676   */\n      dup3\n        /* \"#utility.yul\":13669:13683   */\n      add\n        /* \"#utility.yul\":13654:13683   */\n      swap1\n      pop\n        /* \"#utility.yul\":13520:13689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13695:13860   */\n    tag_362:\n        /* \"#utility.yul\":13835:13852   */\n      0x416c6c204e465473206661726d65640000000000000000000000000000000000\n        /* \"#utility.yul\":13831:13832   */\n      0x00\n        /* \"#utility.yul\":13823:13829   */\n      dup3\n        /* \"#utility.yul\":13819:13833   */\n      add\n        /* \"#utility.yul\":13812:13853   */\n      mstore\n        /* \"#utility.yul\":13695:13860   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13866:14232   */\n    tag_363:\n        /* \"#utility.yul\":14008:14011   */\n      0x00\n        /* \"#utility.yul\":14029:14096   */\n      tag_558\n        /* \"#utility.yul\":14093:14095   */\n      0x0f\n        /* \"#utility.yul\":14088:14091   */\n      dup4\n        /* \"#utility.yul\":14029:14096   */\n      tag_361\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":14022:14096   */\n      swap2\n      pop\n        /* \"#utility.yul\":14105:14198   */\n      tag_559\n        /* \"#utility.yul\":14194:14197   */\n      dup3\n        /* \"#utility.yul\":14105:14198   */\n      tag_362\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14223:14225   */\n      0x20\n        /* \"#utility.yul\":14218:14221   */\n      dup3\n        /* \"#utility.yul\":14214:14226   */\n      add\n        /* \"#utility.yul\":14207:14226   */\n      swap1\n      pop\n        /* \"#utility.yul\":13866:14232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14238:14657   */\n    tag_107:\n        /* \"#utility.yul\":14404:14408   */\n      0x00\n        /* \"#utility.yul\":14442:14444   */\n      0x20\n        /* \"#utility.yul\":14431:14440   */\n      dup3\n        /* \"#utility.yul\":14427:14445   */\n      add\n        /* \"#utility.yul\":14419:14445   */\n      swap1\n      pop\n        /* \"#utility.yul\":14491:14500   */\n      dup2\n        /* \"#utility.yul\":14485:14489   */\n      dup2\n        /* \"#utility.yul\":14481:14501   */\n      sub\n        /* \"#utility.yul\":14477:14478   */\n      0x00\n        /* \"#utility.yul\":14466:14475   */\n      dup4\n        /* \"#utility.yul\":14462:14479   */\n      add\n        /* \"#utility.yul\":14455:14502   */\n      mstore\n        /* \"#utility.yul\":14519:14650   */\n      tag_561\n        /* \"#utility.yul\":14645:14649   */\n      dup2\n        /* \"#utility.yul\":14519:14650   */\n      tag_363\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14511:14650   */\n      swap1\n      pop\n        /* \"#utility.yul\":14238:14657   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14663:14832   */\n    tag_364:\n        /* \"#utility.yul\":14803:14824   */\n      0x496e73756666696369656e7420506f696e747300000000000000000000000000\n        /* \"#utility.yul\":14799:14800   */\n      0x00\n        /* \"#utility.yul\":14791:14797   */\n      dup3\n        /* \"#utility.yul\":14787:14801   */\n      add\n        /* \"#utility.yul\":14780:14825   */\n      mstore\n        /* \"#utility.yul\":14663:14832   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14838:15204   */\n    tag_365:\n        /* \"#utility.yul\":14980:14983   */\n      0x00\n        /* \"#utility.yul\":15001:15068   */\n      tag_564\n        /* \"#utility.yul\":15065:15067   */\n      0x13\n        /* \"#utility.yul\":15060:15063   */\n      dup4\n        /* \"#utility.yul\":15001:15068   */\n      tag_361\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14994:15068   */\n      swap2\n      pop\n        /* \"#utility.yul\":15077:15170   */\n      tag_565\n        /* \"#utility.yul\":15166:15169   */\n      dup3\n        /* \"#utility.yul\":15077:15170   */\n      tag_364\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":15195:15197   */\n      0x20\n        /* \"#utility.yul\":15190:15193   */\n      dup3\n        /* \"#utility.yul\":15186:15198   */\n      add\n        /* \"#utility.yul\":15179:15198   */\n      swap1\n      pop\n        /* \"#utility.yul\":14838:15204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15210:15629   */\n    tag_111:\n        /* \"#utility.yul\":15376:15380   */\n      0x00\n        /* \"#utility.yul\":15414:15416   */\n      0x20\n        /* \"#utility.yul\":15403:15412   */\n      dup3\n        /* \"#utility.yul\":15399:15417   */\n      add\n        /* \"#utility.yul\":15391:15417   */\n      swap1\n      pop\n        /* \"#utility.yul\":15463:15472   */\n      dup2\n        /* \"#utility.yul\":15457:15461   */\n      dup2\n        /* \"#utility.yul\":15453:15473   */\n      sub\n        /* \"#utility.yul\":15449:15450   */\n      0x00\n        /* \"#utility.yul\":15438:15447   */\n      dup4\n        /* \"#utility.yul\":15434:15451   */\n      add\n        /* \"#utility.yul\":15427:15474   */\n      mstore\n        /* \"#utility.yul\":15491:15622   */\n      tag_567\n        /* \"#utility.yul\":15617:15621   */\n      dup2\n        /* \"#utility.yul\":15491:15622   */\n      tag_365\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":15483:15622   */\n      swap1\n      pop\n        /* \"#utility.yul\":15210:15629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15635:15720   */\n    tag_366:\n        /* \"#utility.yul\":15680:15687   */\n      0x00\n        /* \"#utility.yul\":15709:15714   */\n      dup2\n        /* \"#utility.yul\":15698:15714   */\n      swap1\n      pop\n        /* \"#utility.yul\":15635:15720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15726:15884   */\n    tag_367:\n        /* \"#utility.yul\":15784:15793   */\n      0x00\n        /* \"#utility.yul\":15817:15878   */\n      tag_570\n        /* \"#utility.yul\":15835:15877   */\n      tag_571\n        /* \"#utility.yul\":15844:15876   */\n      tag_572\n        /* \"#utility.yul\":15870:15875   */\n      dup5\n        /* \"#utility.yul\":15844:15876   */\n      tag_366\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":15835:15877   */\n      tag_341\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":15817:15878   */\n      tag_333\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15804:15878   */\n      swap1\n      pop\n        /* \"#utility.yul\":15726:15884   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15890:16037   */\n    tag_368:\n        /* \"#utility.yul\":15985:16030   */\n      tag_574\n        /* \"#utility.yul\":16024:16029   */\n      dup2\n        /* \"#utility.yul\":15985:16030   */\n      tag_367\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15980:15983   */\n      dup3\n        /* \"#utility.yul\":15973:16031   */\n      mstore\n        /* \"#utility.yul\":15890:16037   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16043:16211   */\n    tag_369:\n        /* \"#utility.yul\":16126:16137   */\n      0x00\n        /* \"#utility.yul\":16160:16166   */\n      dup3\n        /* \"#utility.yul\":16155:16158   */\n      dup3\n        /* \"#utility.yul\":16148:16167   */\n      mstore\n        /* \"#utility.yul\":16200:16204   */\n      0x20\n        /* \"#utility.yul\":16195:16198   */\n      dup3\n        /* \"#utility.yul\":16191:16205   */\n      add\n        /* \"#utility.yul\":16176:16205   */\n      swap1\n      pop\n        /* \"#utility.yul\":16043:16211   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16217:16331   */\n    tag_370:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16337:16699   */\n    tag_371:\n        /* \"#utility.yul\":16478:16481   */\n      0x00\n        /* \"#utility.yul\":16499:16564   */\n      tag_578\n        /* \"#utility.yul\":16562:16563   */\n      0x00\n        /* \"#utility.yul\":16557:16560   */\n      dup4\n        /* \"#utility.yul\":16499:16564   */\n      tag_369\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":16492:16564   */\n      swap2\n      pop\n        /* \"#utility.yul\":16573:16666   */\n      tag_579\n        /* \"#utility.yul\":16662:16665   */\n      dup3\n        /* \"#utility.yul\":16573:16666   */\n      tag_370\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":16691:16692   */\n      0x00\n        /* \"#utility.yul\":16686:16689   */\n      dup3\n        /* \"#utility.yul\":16682:16693   */\n      add\n        /* \"#utility.yul\":16675:16693   */\n      swap1\n      pop\n        /* \"#utility.yul\":16337:16699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16705:17580   */\n    tag_120:\n        /* \"#utility.yul\":16990:16994   */\n      0x00\n        /* \"#utility.yul\":17028:17031   */\n      0xa0\n        /* \"#utility.yul\":17017:17026   */\n      dup3\n        /* \"#utility.yul\":17013:17032   */\n      add\n        /* \"#utility.yul\":17005:17032   */\n      swap1\n      pop\n        /* \"#utility.yul\":17042:17113   */\n      tag_581\n        /* \"#utility.yul\":17110:17111   */\n      0x00\n        /* \"#utility.yul\":17099:17108   */\n      dup4\n        /* \"#utility.yul\":17095:17112   */\n      add\n        /* \"#utility.yul\":17086:17092   */\n      dup8\n        /* \"#utility.yul\":17042:17113   */\n      tag_354\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":17123:17195   */\n      tag_582\n        /* \"#utility.yul\":17191:17193   */\n      0x20\n        /* \"#utility.yul\":17180:17189   */\n      dup4\n        /* \"#utility.yul\":17176:17194   */\n      add\n        /* \"#utility.yul\":17167:17173   */\n      dup7\n        /* \"#utility.yul\":17123:17195   */\n      tag_354\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":17205:17277   */\n      tag_583\n        /* \"#utility.yul\":17273:17275   */\n      0x40\n        /* \"#utility.yul\":17262:17271   */\n      dup4\n        /* \"#utility.yul\":17258:17276   */\n      add\n        /* \"#utility.yul\":17249:17255   */\n      dup6\n        /* \"#utility.yul\":17205:17277   */\n      tag_334\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":17287:17367   */\n      tag_584\n        /* \"#utility.yul\":17363:17365   */\n      0x60\n        /* \"#utility.yul\":17352:17361   */\n      dup4\n        /* \"#utility.yul\":17348:17366   */\n      add\n        /* \"#utility.yul\":17339:17345   */\n      dup5\n        /* \"#utility.yul\":17287:17367   */\n      tag_368\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":17415:17424   */\n      dup2\n        /* \"#utility.yul\":17409:17413   */\n      dup2\n        /* \"#utility.yul\":17405:17425   */\n      sub\n        /* \"#utility.yul\":17399:17402   */\n      0x80\n        /* \"#utility.yul\":17388:17397   */\n      dup4\n        /* \"#utility.yul\":17384:17403   */\n      add\n        /* \"#utility.yul\":17377:17426   */\n      mstore\n        /* \"#utility.yul\":17443:17573   */\n      tag_585\n        /* \"#utility.yul\":17568:17572   */\n      dup2\n        /* \"#utility.yul\":17443:17573   */\n      tag_371\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":17435:17573   */\n      swap1\n      pop\n        /* \"#utility.yul\":16705:17580   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17586:17934   */\n    tag_125:\n        /* \"#utility.yul\":17715:17719   */\n      0x00\n        /* \"#utility.yul\":17753:17755   */\n      0x40\n        /* \"#utility.yul\":17742:17751   */\n      dup3\n        /* \"#utility.yul\":17738:17756   */\n      add\n        /* \"#utility.yul\":17730:17756   */\n      swap1\n      pop\n        /* \"#utility.yul\":17766:17837   */\n      tag_587\n        /* \"#utility.yul\":17834:17835   */\n      0x00\n        /* \"#utility.yul\":17823:17832   */\n      dup4\n        /* \"#utility.yul\":17819:17836   */\n      add\n        /* \"#utility.yul\":17810:17816   */\n      dup6\n        /* \"#utility.yul\":17766:17837   */\n      tag_334\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":17847:17927   */\n      tag_588\n        /* \"#utility.yul\":17923:17925   */\n      0x20\n        /* \"#utility.yul\":17912:17921   */\n      dup4\n        /* \"#utility.yul\":17908:17926   */\n      add\n        /* \"#utility.yul\":17899:17905   */\n      dup5\n        /* \"#utility.yul\":17847:17927   */\n      tag_368\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":17586:17934   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17940:18109   */\n    tag_372:\n        /* \"#utility.yul\":18080:18101   */\n      0x496e73756666696369656e74207374616b656400000000000000000000000000\n        /* \"#utility.yul\":18076:18077   */\n      0x00\n        /* \"#utility.yul\":18068:18074   */\n      dup3\n        /* \"#utility.yul\":18064:18078   */\n      add\n        /* \"#utility.yul\":18057:18102   */\n      mstore\n        /* \"#utility.yul\":17940:18109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18115:18481   */\n    tag_373:\n        /* \"#utility.yul\":18257:18260   */\n      0x00\n        /* \"#utility.yul\":18278:18345   */\n      tag_591\n        /* \"#utility.yul\":18342:18344   */\n      0x13\n        /* \"#utility.yul\":18337:18340   */\n      dup4\n        /* \"#utility.yul\":18278:18345   */\n      tag_361\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":18271:18345   */\n      swap2\n      pop\n        /* \"#utility.yul\":18354:18447   */\n      tag_592\n        /* \"#utility.yul\":18443:18446   */\n      dup3\n        /* \"#utility.yul\":18354:18447   */\n      tag_372\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":18472:18474   */\n      0x20\n        /* \"#utility.yul\":18467:18470   */\n      dup3\n        /* \"#utility.yul\":18463:18475   */\n      add\n        /* \"#utility.yul\":18456:18475   */\n      swap1\n      pop\n        /* \"#utility.yul\":18115:18481   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18487:18906   */\n    tag_134:\n        /* \"#utility.yul\":18653:18657   */\n      0x00\n        /* \"#utility.yul\":18691:18693   */\n      0x20\n        /* \"#utility.yul\":18680:18689   */\n      dup3\n        /* \"#utility.yul\":18676:18694   */\n      add\n        /* \"#utility.yul\":18668:18694   */\n      swap1\n      pop\n        /* \"#utility.yul\":18740:18749   */\n      dup2\n        /* \"#utility.yul\":18734:18738   */\n      dup2\n        /* \"#utility.yul\":18730:18750   */\n      sub\n        /* \"#utility.yul\":18726:18727   */\n      0x00\n        /* \"#utility.yul\":18715:18724   */\n      dup4\n        /* \"#utility.yul\":18711:18728   */\n      add\n        /* \"#utility.yul\":18704:18751   */\n      mstore\n        /* \"#utility.yul\":18768:18899   */\n      tag_594\n        /* \"#utility.yul\":18894:18898   */\n      dup2\n        /* \"#utility.yul\":18768:18899   */\n      tag_373\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":18760:18899   */\n      swap1\n      pop\n        /* \"#utility.yul\":18487:18906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18912:19094   */\n    tag_374:\n        /* \"#utility.yul\":19052:19086   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":19048:19049   */\n      0x00\n        /* \"#utility.yul\":19040:19046   */\n      dup3\n        /* \"#utility.yul\":19036:19050   */\n      add\n        /* \"#utility.yul\":19029:19087   */\n      mstore\n        /* \"#utility.yul\":18912:19094   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19100:19466   */\n    tag_375:\n        /* \"#utility.yul\":19242:19245   */\n      0x00\n        /* \"#utility.yul\":19263:19330   */\n      tag_597\n        /* \"#utility.yul\":19327:19329   */\n      0x20\n        /* \"#utility.yul\":19322:19325   */\n      dup4\n        /* \"#utility.yul\":19263:19330   */\n      tag_361\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":19256:19330   */\n      swap2\n      pop\n        /* \"#utility.yul\":19339:19432   */\n      tag_598\n        /* \"#utility.yul\":19428:19431   */\n      dup3\n        /* \"#utility.yul\":19339:19432   */\n      tag_374\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":19457:19459   */\n      0x20\n        /* \"#utility.yul\":19452:19455   */\n      dup3\n        /* \"#utility.yul\":19448:19460   */\n      add\n        /* \"#utility.yul\":19441:19460   */\n      swap1\n      pop\n        /* \"#utility.yul\":19100:19466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19472:19891   */\n    tag_146:\n        /* \"#utility.yul\":19638:19642   */\n      0x00\n        /* \"#utility.yul\":19676:19678   */\n      0x20\n        /* \"#utility.yul\":19665:19674   */\n      dup3\n        /* \"#utility.yul\":19661:19679   */\n      add\n        /* \"#utility.yul\":19653:19679   */\n      swap1\n      pop\n        /* \"#utility.yul\":19725:19734   */\n      dup2\n        /* \"#utility.yul\":19719:19723   */\n      dup2\n        /* \"#utility.yul\":19715:19735   */\n      sub\n        /* \"#utility.yul\":19711:19712   */\n      0x00\n        /* \"#utility.yul\":19700:19709   */\n      dup4\n        /* \"#utility.yul\":19696:19713   */\n      add\n        /* \"#utility.yul\":19689:19736   */\n      mstore\n        /* \"#utility.yul\":19753:19884   */\n      tag_600\n        /* \"#utility.yul\":19879:19883   */\n      dup2\n        /* \"#utility.yul\":19753:19884   */\n      tag_375\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":19745:19884   */\n      swap1\n      pop\n        /* \"#utility.yul\":19472:19891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19897:20077   */\n    tag_376:\n        /* \"#utility.yul\":19945:20022   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19942:19943   */\n      0x00\n        /* \"#utility.yul\":19935:20023   */\n      mstore\n        /* \"#utility.yul\":20042:20046   */\n      0x11\n        /* \"#utility.yul\":20039:20040   */\n      0x04\n        /* \"#utility.yul\":20032:20047   */\n      mstore\n        /* \"#utility.yul\":20066:20070   */\n      0x24\n        /* \"#utility.yul\":20063:20064   */\n      0x00\n        /* \"#utility.yul\":20056:20071   */\n      revert\n        /* \"#utility.yul\":20083:20388   */\n    tag_159:\n        /* \"#utility.yul\":20123:20126   */\n      0x00\n        /* \"#utility.yul\":20142:20162   */\n      tag_603\n        /* \"#utility.yul\":20160:20161   */\n      dup3\n        /* \"#utility.yul\":20142:20162   */\n      tag_333\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":20137:20162   */\n      swap2\n      pop\n        /* \"#utility.yul\":20176:20196   */\n      tag_604\n        /* \"#utility.yul\":20194:20195   */\n      dup4\n        /* \"#utility.yul\":20176:20196   */\n      tag_333\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":20171:20196   */\n      swap3\n      pop\n        /* \"#utility.yul\":20330:20331   */\n      dup3\n        /* \"#utility.yul\":20262:20328   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20258:20332   */\n      sub\n        /* \"#utility.yul\":20255:20256   */\n      dup3\n        /* \"#utility.yul\":20252:20333   */\n      gt\n        /* \"#utility.yul\":20249:20356   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":20336:20354   */\n      tag_606\n      tag_376\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":20249:20356   */\n    tag_605:\n        /* \"#utility.yul\":20380:20381   */\n      dup3\n        /* \"#utility.yul\":20377:20378   */\n      dup3\n        /* \"#utility.yul\":20373:20382   */\n      add\n        /* \"#utility.yul\":20366:20382   */\n      swap1\n      pop\n        /* \"#utility.yul\":20083:20388   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20394:20585   */\n    tag_161:\n        /* \"#utility.yul\":20434:20438   */\n      0x00\n        /* \"#utility.yul\":20454:20474   */\n      tag_608\n        /* \"#utility.yul\":20472:20473   */\n      dup3\n        /* \"#utility.yul\":20454:20474   */\n      tag_333\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":20449:20474   */\n      swap2\n      pop\n        /* \"#utility.yul\":20488:20508   */\n      tag_609\n        /* \"#utility.yul\":20506:20507   */\n      dup4\n        /* \"#utility.yul\":20488:20508   */\n      tag_333\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":20483:20508   */\n      swap3\n      pop\n        /* \"#utility.yul\":20527:20528   */\n      dup3\n        /* \"#utility.yul\":20524:20525   */\n      dup3\n        /* \"#utility.yul\":20521:20529   */\n      lt\n        /* \"#utility.yul\":20518:20552   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":20532:20550   */\n      tag_611\n      tag_376\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":20518:20552   */\n    tag_610:\n        /* \"#utility.yul\":20577:20578   */\n      dup3\n        /* \"#utility.yul\":20574:20575   */\n      dup3\n        /* \"#utility.yul\":20570:20579   */\n      sub\n        /* \"#utility.yul\":20562:20579   */\n      swap1\n      pop\n        /* \"#utility.yul\":20394:20585   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20591:20771   */\n    tag_164:\n        /* \"#utility.yul\":20639:20716   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20636:20637   */\n      0x00\n        /* \"#utility.yul\":20629:20717   */\n      mstore\n        /* \"#utility.yul\":20736:20740   */\n      0x32\n        /* \"#utility.yul\":20733:20734   */\n      0x04\n        /* \"#utility.yul\":20726:20741   */\n      mstore\n        /* \"#utility.yul\":20760:20764   */\n      0x24\n        /* \"#utility.yul\":20757:20758   */\n      0x00\n        /* \"#utility.yul\":20750:20765   */\n      revert\n        /* \"#utility.yul\":20777:21010   */\n    tag_169:\n        /* \"#utility.yul\":20816:20819   */\n      0x00\n        /* \"#utility.yul\":20839:20863   */\n      tag_614\n        /* \"#utility.yul\":20857:20862   */\n      dup3\n        /* \"#utility.yul\":20839:20863   */\n      tag_333\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":20830:20863   */\n      swap2\n      pop\n        /* \"#utility.yul\":20885:20951   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":20878:20883   */\n      dup3\n        /* \"#utility.yul\":20875:20952   */\n      sub\n        /* \"#utility.yul\":20872:20975   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":20955:20973   */\n      tag_616\n      tag_376\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":20872:20975   */\n    tag_615:\n        /* \"#utility.yul\":21002:21003   */\n      0x01\n        /* \"#utility.yul\":20995:21000   */\n      dup3\n        /* \"#utility.yul\":20991:21004   */\n      add\n        /* \"#utility.yul\":20984:21004   */\n      swap1\n      pop\n        /* \"#utility.yul\":20777:21010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21016:21130   */\n    tag_377:\n        /* \"#utility.yul\":21083:21089   */\n      0x00\n        /* \"#utility.yul\":21117:21122   */\n      dup2\n        /* \"#utility.yul\":21111:21123   */\n      mload\n        /* \"#utility.yul\":21101:21123   */\n      swap1\n      pop\n        /* \"#utility.yul\":21016:21130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21136:21320   */\n    tag_378:\n        /* \"#utility.yul\":21235:21246   */\n      0x00\n        /* \"#utility.yul\":21269:21275   */\n      dup3\n        /* \"#utility.yul\":21264:21267   */\n      dup3\n        /* \"#utility.yul\":21257:21276   */\n      mstore\n        /* \"#utility.yul\":21309:21313   */\n      0x20\n        /* \"#utility.yul\":21304:21307   */\n      dup3\n        /* \"#utility.yul\":21300:21314   */\n      add\n        /* \"#utility.yul\":21285:21314   */\n      swap1\n      pop\n        /* \"#utility.yul\":21136:21320   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21326:21458   */\n    tag_379:\n        /* \"#utility.yul\":21393:21397   */\n      0x00\n        /* \"#utility.yul\":21416:21419   */\n      dup2\n        /* \"#utility.yul\":21408:21419   */\n      swap1\n      pop\n        /* \"#utility.yul\":21446:21450   */\n      0x20\n        /* \"#utility.yul\":21441:21444   */\n      dup3\n        /* \"#utility.yul\":21437:21451   */\n      add\n        /* \"#utility.yul\":21429:21451   */\n      swap1\n      pop\n        /* \"#utility.yul\":21326:21458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21464:21572   */\n    tag_380:\n        /* \"#utility.yul\":21541:21565   */\n      tag_621\n        /* \"#utility.yul\":21559:21564   */\n      dup2\n        /* \"#utility.yul\":21541:21565   */\n      tag_333\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":21536:21539   */\n      dup3\n        /* \"#utility.yul\":21529:21566   */\n      mstore\n        /* \"#utility.yul\":21464:21572   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21578:21757   */\n    tag_381:\n        /* \"#utility.yul\":21647:21657   */\n      0x00\n        /* \"#utility.yul\":21668:21714   */\n      tag_623\n        /* \"#utility.yul\":21710:21713   */\n      dup4\n        /* \"#utility.yul\":21702:21708   */\n      dup4\n        /* \"#utility.yul\":21668:21714   */\n      tag_380\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":21746:21750   */\n      0x20\n        /* \"#utility.yul\":21741:21744   */\n      dup4\n        /* \"#utility.yul\":21737:21751   */\n      add\n        /* \"#utility.yul\":21723:21751   */\n      swap1\n      pop\n        /* \"#utility.yul\":21578:21757   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21763:21876   */\n    tag_382:\n        /* \"#utility.yul\":21833:21837   */\n      0x00\n        /* \"#utility.yul\":21865:21869   */\n      0x20\n        /* \"#utility.yul\":21860:21863   */\n      dup3\n        /* \"#utility.yul\":21856:21870   */\n      add\n        /* \"#utility.yul\":21848:21870   */\n      swap1\n      pop\n        /* \"#utility.yul\":21763:21876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21912:22644   */\n    tag_383:\n        /* \"#utility.yul\":22031:22034   */\n      0x00\n        /* \"#utility.yul\":22060:22114   */\n      tag_626\n        /* \"#utility.yul\":22108:22113   */\n      dup3\n        /* \"#utility.yul\":22060:22114   */\n      tag_377\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":22130:22216   */\n      tag_627\n        /* \"#utility.yul\":22209:22215   */\n      dup2\n        /* \"#utility.yul\":22204:22207   */\n      dup6\n        /* \"#utility.yul\":22130:22216   */\n      tag_378\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":22123:22216   */\n      swap4\n      pop\n        /* \"#utility.yul\":22240:22296   */\n      tag_628\n        /* \"#utility.yul\":22290:22295   */\n      dup4\n        /* \"#utility.yul\":22240:22296   */\n      tag_379\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":22319:22326   */\n      dup1\n        /* \"#utility.yul\":22350:22351   */\n      0x00\n        /* \"#utility.yul\":22335:22619   */\n    tag_629:\n        /* \"#utility.yul\":22360:22366   */\n      dup4\n        /* \"#utility.yul\":22357:22358   */\n      dup2\n        /* \"#utility.yul\":22354:22367   */\n      lt\n        /* \"#utility.yul\":22335:22619   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":22436:22442   */\n      dup2\n        /* \"#utility.yul\":22430:22443   */\n      mload\n        /* \"#utility.yul\":22463:22526   */\n      tag_632\n        /* \"#utility.yul\":22522:22525   */\n      dup9\n        /* \"#utility.yul\":22507:22520   */\n      dup3\n        /* \"#utility.yul\":22463:22526   */\n      tag_381\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":22456:22526   */\n      swap8\n      pop\n        /* \"#utility.yul\":22549:22609   */\n      tag_633\n        /* \"#utility.yul\":22602:22608   */\n      dup4\n        /* \"#utility.yul\":22549:22609   */\n      tag_382\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":22539:22609   */\n      swap3\n      pop\n        /* \"#utility.yul\":22395:22619   */\n      pop\n        /* \"#utility.yul\":22382:22383   */\n      0x01\n        /* \"#utility.yul\":22379:22380   */\n      dup2\n        /* \"#utility.yul\":22375:22384   */\n      add\n        /* \"#utility.yul\":22370:22384   */\n      swap1\n      pop\n        /* \"#utility.yul\":22335:22619   */\n      jump(tag_629)\n    tag_631:\n        /* \"#utility.yul\":22339:22353   */\n      pop\n        /* \"#utility.yul\":22635:22638   */\n      dup6\n        /* \"#utility.yul\":22628:22638   */\n      swap4\n      pop\n        /* \"#utility.yul\":22036:22644   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":21912:22644   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22650:23811   */\n    tag_173:\n        /* \"#utility.yul\":23027:23031   */\n      0x00\n        /* \"#utility.yul\":23065:23068   */\n      0xa0\n        /* \"#utility.yul\":23054:23063   */\n      dup3\n        /* \"#utility.yul\":23050:23069   */\n      add\n        /* \"#utility.yul\":23042:23069   */\n      swap1\n      pop\n        /* \"#utility.yul\":23079:23150   */\n      tag_635\n        /* \"#utility.yul\":23147:23148   */\n      0x00\n        /* \"#utility.yul\":23136:23145   */\n      dup4\n        /* \"#utility.yul\":23132:23149   */\n      add\n        /* \"#utility.yul\":23123:23129   */\n      dup8\n        /* \"#utility.yul\":23079:23150   */\n      tag_354\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":23160:23232   */\n      tag_636\n        /* \"#utility.yul\":23228:23230   */\n      0x20\n        /* \"#utility.yul\":23217:23226   */\n      dup4\n        /* \"#utility.yul\":23213:23231   */\n      add\n        /* \"#utility.yul\":23204:23210   */\n      dup7\n        /* \"#utility.yul\":23160:23232   */\n      tag_354\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":23279:23288   */\n      dup2\n        /* \"#utility.yul\":23273:23277   */\n      dup2\n        /* \"#utility.yul\":23269:23289   */\n      sub\n        /* \"#utility.yul\":23264:23266   */\n      0x40\n        /* \"#utility.yul\":23253:23262   */\n      dup4\n        /* \"#utility.yul\":23249:23267   */\n      add\n        /* \"#utility.yul\":23242:23290   */\n      mstore\n        /* \"#utility.yul\":23307:23415   */\n      tag_637\n        /* \"#utility.yul\":23410:23414   */\n      dup2\n        /* \"#utility.yul\":23401:23407   */\n      dup6\n        /* \"#utility.yul\":23307:23415   */\n      tag_383\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":23299:23415   */\n      swap1\n      pop\n        /* \"#utility.yul\":23462:23471   */\n      dup2\n        /* \"#utility.yul\":23456:23460   */\n      dup2\n        /* \"#utility.yul\":23452:23472   */\n      sub\n        /* \"#utility.yul\":23447:23449   */\n      0x60\n        /* \"#utility.yul\":23436:23445   */\n      dup4\n        /* \"#utility.yul\":23432:23450   */\n      add\n        /* \"#utility.yul\":23425:23473   */\n      mstore\n        /* \"#utility.yul\":23490:23598   */\n      tag_638\n        /* \"#utility.yul\":23593:23597   */\n      dup2\n        /* \"#utility.yul\":23584:23590   */\n      dup5\n        /* \"#utility.yul\":23490:23598   */\n      tag_383\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":23482:23598   */\n      swap1\n      pop\n        /* \"#utility.yul\":23646:23655   */\n      dup2\n        /* \"#utility.yul\":23640:23644   */\n      dup2\n        /* \"#utility.yul\":23636:23656   */\n      sub\n        /* \"#utility.yul\":23630:23633   */\n      0x80\n        /* \"#utility.yul\":23619:23628   */\n      dup4\n        /* \"#utility.yul\":23615:23634   */\n      add\n        /* \"#utility.yul\":23608:23657   */\n      mstore\n        /* \"#utility.yul\":23674:23804   */\n      tag_639\n        /* \"#utility.yul\":23799:23803   */\n      dup2\n        /* \"#utility.yul\":23674:23804   */\n      tag_371\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":23666:23804   */\n      swap1\n      pop\n        /* \"#utility.yul\":22650:23811   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23817:24042   */\n    tag_384:\n        /* \"#utility.yul\":23957:23991   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":23953:23954   */\n      0x00\n        /* \"#utility.yul\":23945:23951   */\n      dup3\n        /* \"#utility.yul\":23941:23955   */\n      add\n        /* \"#utility.yul\":23934:23992   */\n      mstore\n        /* \"#utility.yul\":24026:24034   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24021:24023   */\n      0x20\n        /* \"#utility.yul\":24013:24019   */\n      dup3\n        /* \"#utility.yul\":24009:24024   */\n      add\n        /* \"#utility.yul\":24002:24035   */\n      mstore\n        /* \"#utility.yul\":23817:24042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24048:24414   */\n    tag_385:\n        /* \"#utility.yul\":24190:24193   */\n      0x00\n        /* \"#utility.yul\":24211:24278   */\n      tag_642\n        /* \"#utility.yul\":24275:24277   */\n      0x26\n        /* \"#utility.yul\":24270:24273   */\n      dup4\n        /* \"#utility.yul\":24211:24278   */\n      tag_361\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":24204:24278   */\n      swap2\n      pop\n        /* \"#utility.yul\":24287:24380   */\n      tag_643\n        /* \"#utility.yul\":24376:24379   */\n      dup3\n        /* \"#utility.yul\":24287:24380   */\n      tag_384\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":24405:24407   */\n      0x40\n        /* \"#utility.yul\":24400:24403   */\n      dup3\n        /* \"#utility.yul\":24396:24408   */\n      add\n        /* \"#utility.yul\":24389:24408   */\n      swap1\n      pop\n        /* \"#utility.yul\":24048:24414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24420:24839   */\n    tag_221:\n        /* \"#utility.yul\":24586:24590   */\n      0x00\n        /* \"#utility.yul\":24624:24626   */\n      0x20\n        /* \"#utility.yul\":24613:24622   */\n      dup3\n        /* \"#utility.yul\":24609:24627   */\n      add\n        /* \"#utility.yul\":24601:24627   */\n      swap1\n      pop\n        /* \"#utility.yul\":24673:24682   */\n      dup2\n        /* \"#utility.yul\":24667:24671   */\n      dup2\n        /* \"#utility.yul\":24663:24683   */\n      sub\n        /* \"#utility.yul\":24659:24660   */\n      0x00\n        /* \"#utility.yul\":24648:24657   */\n      dup4\n        /* \"#utility.yul\":24644:24661   */\n      add\n        /* \"#utility.yul\":24637:24684   */\n      mstore\n        /* \"#utility.yul\":24701:24832   */\n      tag_645\n        /* \"#utility.yul\":24827:24831   */\n      dup2\n        /* \"#utility.yul\":24701:24832   */\n      tag_385\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":24693:24832   */\n      swap1\n      pop\n        /* \"#utility.yul\":24420:24839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24845:25068   */\n    tag_386:\n        /* \"#utility.yul\":24985:25019   */\n      0x4172726179466f7255696e743235363a20696e646578206f7574206f6620626f\n        /* \"#utility.yul\":24981:24982   */\n      0x00\n        /* \"#utility.yul\":24973:24979   */\n      dup3\n        /* \"#utility.yul\":24969:24983   */\n      add\n        /* \"#utility.yul\":24962:25020   */\n      mstore\n        /* \"#utility.yul\":25054:25060   */\n      0x756e647300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25049:25051   */\n      0x20\n        /* \"#utility.yul\":25041:25047   */\n      dup3\n        /* \"#utility.yul\":25037:25052   */\n      add\n        /* \"#utility.yul\":25030:25061   */\n      mstore\n        /* \"#utility.yul\":24845:25068   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25074:25440   */\n    tag_387:\n        /* \"#utility.yul\":25216:25219   */\n      0x00\n        /* \"#utility.yul\":25237:25304   */\n      tag_648\n        /* \"#utility.yul\":25301:25303   */\n      0x24\n        /* \"#utility.yul\":25296:25299   */\n      dup4\n        /* \"#utility.yul\":25237:25304   */\n      tag_361\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":25230:25304   */\n      swap2\n      pop\n        /* \"#utility.yul\":25313:25406   */\n      tag_649\n        /* \"#utility.yul\":25402:25405   */\n      dup3\n        /* \"#utility.yul\":25313:25406   */\n      tag_386\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":25431:25433   */\n      0x40\n        /* \"#utility.yul\":25426:25429   */\n      dup3\n        /* \"#utility.yul\":25422:25434   */\n      add\n        /* \"#utility.yul\":25415:25434   */\n      swap1\n      pop\n        /* \"#utility.yul\":25074:25440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25446:25865   */\n    tag_244:\n        /* \"#utility.yul\":25612:25616   */\n      0x00\n        /* \"#utility.yul\":25650:25652   */\n      0x20\n        /* \"#utility.yul\":25639:25648   */\n      dup3\n        /* \"#utility.yul\":25635:25653   */\n      add\n        /* \"#utility.yul\":25627:25653   */\n      swap1\n      pop\n        /* \"#utility.yul\":25699:25708   */\n      dup2\n        /* \"#utility.yul\":25693:25697   */\n      dup2\n        /* \"#utility.yul\":25689:25709   */\n      sub\n        /* \"#utility.yul\":25685:25686   */\n      0x00\n        /* \"#utility.yul\":25674:25683   */\n      dup4\n        /* \"#utility.yul\":25670:25687   */\n      add\n        /* \"#utility.yul\":25663:25710   */\n      mstore\n        /* \"#utility.yul\":25727:25858   */\n      tag_651\n        /* \"#utility.yul\":25853:25857   */\n      dup2\n        /* \"#utility.yul\":25727:25858   */\n      tag_387\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":25719:25858   */\n      swap1\n      pop\n        /* \"#utility.yul\":25446:25865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25871:26051   */\n    tag_258:\n        /* \"#utility.yul\":25919:25996   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25916:25917   */\n      0x00\n        /* \"#utility.yul\":25909:25997   */\n      mstore\n        /* \"#utility.yul\":26016:26020   */\n      0x31\n        /* \"#utility.yul\":26013:26014   */\n      0x04\n        /* \"#utility.yul\":26006:26021   */\n      mstore\n        /* \"#utility.yul\":26040:26044   */\n      0x24\n        /* \"#utility.yul\":26037:26038   */\n      0x00\n        /* \"#utility.yul\":26030:26045   */\n      revert\n        /* \"#utility.yul\":26057:26389   */\n    tag_269:\n        /* \"#utility.yul\":26178:26182   */\n      0x00\n        /* \"#utility.yul\":26216:26218   */\n      0x40\n        /* \"#utility.yul\":26205:26214   */\n      dup3\n        /* \"#utility.yul\":26201:26219   */\n      add\n        /* \"#utility.yul\":26193:26219   */\n      swap1\n      pop\n        /* \"#utility.yul\":26229:26300   */\n      tag_654\n        /* \"#utility.yul\":26297:26298   */\n      0x00\n        /* \"#utility.yul\":26286:26295   */\n      dup4\n        /* \"#utility.yul\":26282:26299   */\n      add\n        /* \"#utility.yul\":26273:26279   */\n      dup6\n        /* \"#utility.yul\":26229:26300   */\n      tag_354\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":26310:26382   */\n      tag_655\n        /* \"#utility.yul\":26378:26380   */\n      0x20\n        /* \"#utility.yul\":26367:26376   */\n      dup4\n        /* \"#utility.yul\":26363:26381   */\n      add\n        /* \"#utility.yul\":26354:26360   */\n      dup5\n        /* \"#utility.yul\":26310:26382   */\n      tag_334\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":26057:26389   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26395:26837   */\n    tag_285:\n        /* \"#utility.yul\":26544:26548   */\n      0x00\n        /* \"#utility.yul\":26582:26584   */\n      0x60\n        /* \"#utility.yul\":26571:26580   */\n      dup3\n        /* \"#utility.yul\":26567:26585   */\n      add\n        /* \"#utility.yul\":26559:26585   */\n      swap1\n      pop\n        /* \"#utility.yul\":26595:26666   */\n      tag_657\n        /* \"#utility.yul\":26663:26664   */\n      0x00\n        /* \"#utility.yul\":26652:26661   */\n      dup4\n        /* \"#utility.yul\":26648:26665   */\n      add\n        /* \"#utility.yul\":26639:26645   */\n      dup7\n        /* \"#utility.yul\":26595:26666   */\n      tag_354\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":26676:26748   */\n      tag_658\n        /* \"#utility.yul\":26744:26746   */\n      0x20\n        /* \"#utility.yul\":26733:26742   */\n      dup4\n        /* \"#utility.yul\":26729:26747   */\n      add\n        /* \"#utility.yul\":26720:26726   */\n      dup6\n        /* \"#utility.yul\":26676:26748   */\n      tag_354\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":26758:26830   */\n      tag_659\n        /* \"#utility.yul\":26826:26828   */\n      0x40\n        /* \"#utility.yul\":26815:26824   */\n      dup4\n        /* \"#utility.yul\":26811:26829   */\n      add\n        /* \"#utility.yul\":26802:26808   */\n      dup5\n        /* \"#utility.yul\":26758:26830   */\n      tag_334\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":26395:26837   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26843:27191   */\n    tag_288:\n        /* \"#utility.yul\":26883:26890   */\n      0x00\n        /* \"#utility.yul\":26906:26926   */\n      tag_661\n        /* \"#utility.yul\":26924:26925   */\n      dup3\n        /* \"#utility.yul\":26906:26926   */\n      tag_333\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":26901:26926   */\n      swap2\n      pop\n        /* \"#utility.yul\":26940:26960   */\n      tag_662\n        /* \"#utility.yul\":26958:26959   */\n      dup4\n        /* \"#utility.yul\":26940:26960   */\n      tag_333\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":26935:26960   */\n      swap3\n      pop\n        /* \"#utility.yul\":27128:27129   */\n      dup2\n        /* \"#utility.yul\":27060:27126   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":27056:27130   */\n      div\n        /* \"#utility.yul\":27053:27054   */\n      dup4\n        /* \"#utility.yul\":27050:27131   */\n      gt\n        /* \"#utility.yul\":27045:27046   */\n      dup3\n        /* \"#utility.yul\":27038:27047   */\n      iszero\n        /* \"#utility.yul\":27031:27048   */\n      iszero\n        /* \"#utility.yul\":27027:27132   */\n      and\n        /* \"#utility.yul\":27024:27155   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":27135:27153   */\n      tag_664\n      tag_376\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":27024:27155   */\n    tag_663:\n        /* \"#utility.yul\":27183:27184   */\n      dup3\n        /* \"#utility.yul\":27180:27181   */\n      dup3\n        /* \"#utility.yul\":27176:27185   */\n      mul\n        /* \"#utility.yul\":27165:27185   */\n      swap1\n      pop\n        /* \"#utility.yul\":26843:27191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27197:27313   */\n    tag_388:\n        /* \"#utility.yul\":27267:27288   */\n      tag_666\n        /* \"#utility.yul\":27282:27287   */\n      dup2\n        /* \"#utility.yul\":27267:27288   */\n      tag_331\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":27260:27265   */\n      dup2\n        /* \"#utility.yul\":27257:27289   */\n      eq\n        /* \"#utility.yul\":27247:27307   */\n      tag_667\n      jumpi\n        /* \"#utility.yul\":27303:27304   */\n      0x00\n        /* \"#utility.yul\":27300:27301   */\n      dup1\n        /* \"#utility.yul\":27293:27305   */\n      revert\n        /* \"#utility.yul\":27247:27307   */\n    tag_667:\n        /* \"#utility.yul\":27197:27313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27319:27456   */\n    tag_389:\n        /* \"#utility.yul\":27373:27378   */\n      0x00\n        /* \"#utility.yul\":27404:27410   */\n      dup2\n        /* \"#utility.yul\":27398:27411   */\n      mload\n        /* \"#utility.yul\":27389:27411   */\n      swap1\n      pop\n        /* \"#utility.yul\":27420:27450   */\n      tag_669\n        /* \"#utility.yul\":27444:27449   */\n      dup2\n        /* \"#utility.yul\":27420:27450   */\n      tag_388\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":27319:27456   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27462:27807   */\n    tag_294:\n        /* \"#utility.yul\":27529:27535   */\n      0x00\n        /* \"#utility.yul\":27578:27580   */\n      0x20\n        /* \"#utility.yul\":27566:27575   */\n      dup3\n        /* \"#utility.yul\":27557:27564   */\n      dup5\n        /* \"#utility.yul\":27553:27576   */\n      sub\n        /* \"#utility.yul\":27549:27581   */\n      slt\n        /* \"#utility.yul\":27546:27665   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":27584:27663   */\n      tag_672\n      tag_326\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":27546:27665   */\n    tag_671:\n        /* \"#utility.yul\":27704:27705   */\n      0x00\n        /* \"#utility.yul\":27729:27790   */\n      tag_673\n        /* \"#utility.yul\":27782:27789   */\n      dup5\n        /* \"#utility.yul\":27773:27779   */\n      dup3\n        /* \"#utility.yul\":27762:27771   */\n      dup6\n        /* \"#utility.yul\":27758:27780   */\n      add\n        /* \"#utility.yul\":27729:27790   */\n      tag_389\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":27719:27790   */\n      swap2\n      pop\n        /* \"#utility.yul\":27675:27800   */\n      pop\n        /* \"#utility.yul\":27462:27807   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27813:28042   */\n    tag_390:\n        /* \"#utility.yul\":27953:27987   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":27949:27950   */\n      0x00\n        /* \"#utility.yul\":27941:27947   */\n      dup3\n        /* \"#utility.yul\":27937:27951   */\n      add\n        /* \"#utility.yul\":27930:27988   */\n      mstore\n        /* \"#utility.yul\":28022:28034   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28017:28019   */\n      0x20\n        /* \"#utility.yul\":28009:28015   */\n      dup3\n        /* \"#utility.yul\":28005:28020   */\n      add\n        /* \"#utility.yul\":27998:28035   */\n      mstore\n        /* \"#utility.yul\":27813:28042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28048:28414   */\n    tag_391:\n        /* \"#utility.yul\":28190:28193   */\n      0x00\n        /* \"#utility.yul\":28211:28278   */\n      tag_676\n        /* \"#utility.yul\":28275:28277   */\n      0x2a\n        /* \"#utility.yul\":28270:28273   */\n      dup4\n        /* \"#utility.yul\":28211:28278   */\n      tag_361\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":28204:28278   */\n      swap2\n      pop\n        /* \"#utility.yul\":28287:28380   */\n      tag_677\n        /* \"#utility.yul\":28376:28379   */\n      dup3\n        /* \"#utility.yul\":28287:28380   */\n      tag_390\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":28405:28407   */\n      0x40\n        /* \"#utility.yul\":28400:28403   */\n      dup3\n        /* \"#utility.yul\":28396:28408   */\n      add\n        /* \"#utility.yul\":28389:28408   */\n      swap1\n      pop\n        /* \"#utility.yul\":28048:28414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28420:28839   */\n    tag_297:\n        /* \"#utility.yul\":28586:28590   */\n      0x00\n        /* \"#utility.yul\":28624:28626   */\n      0x20\n        /* \"#utility.yul\":28613:28622   */\n      dup3\n        /* \"#utility.yul\":28609:28627   */\n      add\n        /* \"#utility.yul\":28601:28627   */\n      swap1\n      pop\n        /* \"#utility.yul\":28673:28682   */\n      dup2\n        /* \"#utility.yul\":28667:28671   */\n      dup2\n        /* \"#utility.yul\":28663:28683   */\n      sub\n        /* \"#utility.yul\":28659:28660   */\n      0x00\n        /* \"#utility.yul\":28648:28657   */\n      dup4\n        /* \"#utility.yul\":28644:28661   */\n      add\n        /* \"#utility.yul\":28637:28684   */\n      mstore\n        /* \"#utility.yul\":28701:28832   */\n      tag_679\n        /* \"#utility.yul\":28827:28831   */\n      dup2\n        /* \"#utility.yul\":28701:28832   */\n      tag_391\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":28693:28832   */\n      swap1\n      pop\n        /* \"#utility.yul\":28420:28839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28845:29070   */\n    tag_392:\n        /* \"#utility.yul\":28985:29019   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":28981:28982   */\n      0x00\n        /* \"#utility.yul\":28973:28979   */\n      dup3\n        /* \"#utility.yul\":28969:28983   */\n      add\n        /* \"#utility.yul\":28962:29020   */\n      mstore\n        /* \"#utility.yul\":29054:29062   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29049:29051   */\n      0x20\n        /* \"#utility.yul\":29041:29047   */\n      dup3\n        /* \"#utility.yul\":29037:29052   */\n      add\n        /* \"#utility.yul\":29030:29063   */\n      mstore\n        /* \"#utility.yul\":28845:29070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29076:29442   */\n    tag_393:\n        /* \"#utility.yul\":29218:29221   */\n      0x00\n        /* \"#utility.yul\":29239:29306   */\n      tag_682\n        /* \"#utility.yul\":29303:29305   */\n      0x26\n        /* \"#utility.yul\":29298:29301   */\n      dup4\n        /* \"#utility.yul\":29239:29306   */\n      tag_361\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":29232:29306   */\n      swap2\n      pop\n        /* \"#utility.yul\":29315:29408   */\n      tag_683\n        /* \"#utility.yul\":29404:29407   */\n      dup3\n        /* \"#utility.yul\":29315:29408   */\n      tag_392\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":29433:29435   */\n      0x40\n        /* \"#utility.yul\":29428:29431   */\n      dup3\n        /* \"#utility.yul\":29424:29436   */\n      add\n        /* \"#utility.yul\":29417:29436   */\n      swap1\n      pop\n        /* \"#utility.yul\":29076:29442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29448:29867   */\n    tag_304:\n        /* \"#utility.yul\":29614:29618   */\n      0x00\n        /* \"#utility.yul\":29652:29654   */\n      0x20\n        /* \"#utility.yul\":29641:29650   */\n      dup3\n        /* \"#utility.yul\":29637:29655   */\n      add\n        /* \"#utility.yul\":29629:29655   */\n      swap1\n      pop\n        /* \"#utility.yul\":29701:29710   */\n      dup2\n        /* \"#utility.yul\":29695:29699   */\n      dup2\n        /* \"#utility.yul\":29691:29711   */\n      sub\n        /* \"#utility.yul\":29687:29688   */\n      0x00\n        /* \"#utility.yul\":29676:29685   */\n      dup4\n        /* \"#utility.yul\":29672:29689   */\n      add\n        /* \"#utility.yul\":29665:29712   */\n      mstore\n        /* \"#utility.yul\":29729:29860   */\n      tag_685\n        /* \"#utility.yul\":29855:29859   */\n      dup2\n        /* \"#utility.yul\":29729:29860   */\n      tag_393\n      jump\t// in\n    tag_685:\n        /* \"#utility.yul\":29721:29860   */\n      swap1\n      pop\n        /* \"#utility.yul\":29448:29867   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29873:30052   */\n    tag_394:\n        /* \"#utility.yul\":30013:30044   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":30009:30010   */\n      0x00\n        /* \"#utility.yul\":30001:30007   */\n      dup3\n        /* \"#utility.yul\":29997:30011   */\n      add\n        /* \"#utility.yul\":29990:30045   */\n      mstore\n        /* \"#utility.yul\":29873:30052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30058:30424   */\n    tag_395:\n        /* \"#utility.yul\":30200:30203   */\n      0x00\n        /* \"#utility.yul\":30221:30288   */\n      tag_688\n        /* \"#utility.yul\":30285:30287   */\n      0x1d\n        /* \"#utility.yul\":30280:30283   */\n      dup4\n        /* \"#utility.yul\":30221:30288   */\n      tag_361\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":30214:30288   */\n      swap2\n      pop\n        /* \"#utility.yul\":30297:30390   */\n      tag_689\n        /* \"#utility.yul\":30386:30389   */\n      dup3\n        /* \"#utility.yul\":30297:30390   */\n      tag_394\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":30415:30417   */\n      0x20\n        /* \"#utility.yul\":30410:30413   */\n      dup3\n        /* \"#utility.yul\":30406:30418   */\n      add\n        /* \"#utility.yul\":30399:30418   */\n      swap1\n      pop\n        /* \"#utility.yul\":30058:30424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30430:30849   */\n    tag_309:\n        /* \"#utility.yul\":30596:30600   */\n      0x00\n        /* \"#utility.yul\":30634:30636   */\n      0x20\n        /* \"#utility.yul\":30623:30632   */\n      dup3\n        /* \"#utility.yul\":30619:30637   */\n      add\n        /* \"#utility.yul\":30611:30637   */\n      swap1\n      pop\n        /* \"#utility.yul\":30683:30692   */\n      dup2\n        /* \"#utility.yul\":30677:30681   */\n      dup2\n        /* \"#utility.yul\":30673:30693   */\n      sub\n        /* \"#utility.yul\":30669:30670   */\n      0x00\n        /* \"#utility.yul\":30658:30667   */\n      dup4\n        /* \"#utility.yul\":30654:30671   */\n      add\n        /* \"#utility.yul\":30647:30694   */\n      mstore\n        /* \"#utility.yul\":30711:30842   */\n      tag_691\n        /* \"#utility.yul\":30837:30841   */\n      dup2\n        /* \"#utility.yul\":30711:30842   */\n      tag_395\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":30703:30842   */\n      swap1\n      pop\n        /* \"#utility.yul\":30430:30849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30855:30953   */\n    tag_396:\n        /* \"#utility.yul\":30906:30912   */\n      0x00\n        /* \"#utility.yul\":30940:30945   */\n      dup2\n        /* \"#utility.yul\":30934:30946   */\n      mload\n        /* \"#utility.yul\":30924:30946   */\n      swap1\n      pop\n        /* \"#utility.yul\":30855:30953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30959:31106   */\n    tag_397:\n        /* \"#utility.yul\":31060:31071   */\n      0x00\n        /* \"#utility.yul\":31097:31100   */\n      dup2\n        /* \"#utility.yul\":31082:31100   */\n      swap1\n      pop\n        /* \"#utility.yul\":30959:31106   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31112:31419   */\n    tag_398:\n        /* \"#utility.yul\":31180:31181   */\n      0x00\n        /* \"#utility.yul\":31190:31303   */\n    tag_695:\n        /* \"#utility.yul\":31204:31210   */\n      dup4\n        /* \"#utility.yul\":31201:31202   */\n      dup2\n        /* \"#utility.yul\":31198:31211   */\n      lt\n        /* \"#utility.yul\":31190:31303   */\n      iszero\n      tag_697\n      jumpi\n        /* \"#utility.yul\":31289:31290   */\n      dup1\n        /* \"#utility.yul\":31284:31287   */\n      dup3\n        /* \"#utility.yul\":31280:31291   */\n      add\n        /* \"#utility.yul\":31274:31292   */\n      mload\n        /* \"#utility.yul\":31270:31271   */\n      dup2\n        /* \"#utility.yul\":31265:31268   */\n      dup5\n        /* \"#utility.yul\":31261:31272   */\n      add\n        /* \"#utility.yul\":31254:31293   */\n      mstore\n        /* \"#utility.yul\":31226:31228   */\n      0x20\n        /* \"#utility.yul\":31223:31224   */\n      dup2\n        /* \"#utility.yul\":31219:31229   */\n      add\n        /* \"#utility.yul\":31214:31229   */\n      swap1\n      pop\n        /* \"#utility.yul\":31190:31303   */\n      jump(tag_695)\n    tag_697:\n        /* \"#utility.yul\":31321:31327   */\n      dup4\n        /* \"#utility.yul\":31318:31319   */\n      dup2\n        /* \"#utility.yul\":31315:31328   */\n      gt\n        /* \"#utility.yul\":31312:31413   */\n      iszero\n      tag_698\n      jumpi\n        /* \"#utility.yul\":31401:31402   */\n      0x00\n        /* \"#utility.yul\":31392:31398   */\n      dup5\n        /* \"#utility.yul\":31387:31390   */\n      dup5\n        /* \"#utility.yul\":31383:31399   */\n      add\n        /* \"#utility.yul\":31376:31403   */\n      mstore\n        /* \"#utility.yul\":31312:31413   */\n    tag_698:\n        /* \"#utility.yul\":31161:31419   */\n      pop\n        /* \"#utility.yul\":31112:31419   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31425:31798   */\n    tag_399:\n        /* \"#utility.yul\":31529:31532   */\n      0x00\n        /* \"#utility.yul\":31557:31595   */\n      tag_700\n        /* \"#utility.yul\":31589:31594   */\n      dup3\n        /* \"#utility.yul\":31557:31595   */\n      tag_396\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":31611:31699   */\n      tag_701\n        /* \"#utility.yul\":31692:31698   */\n      dup2\n        /* \"#utility.yul\":31687:31690   */\n      dup6\n        /* \"#utility.yul\":31611:31699   */\n      tag_397\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":31604:31699   */\n      swap4\n      pop\n        /* \"#utility.yul\":31708:31760   */\n      tag_702\n        /* \"#utility.yul\":31753:31759   */\n      dup2\n        /* \"#utility.yul\":31748:31751   */\n      dup6\n        /* \"#utility.yul\":31741:31745   */\n      0x20\n        /* \"#utility.yul\":31734:31739   */\n      dup7\n        /* \"#utility.yul\":31730:31746   */\n      add\n        /* \"#utility.yul\":31708:31760   */\n      tag_398\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":31785:31791   */\n      dup1\n        /* \"#utility.yul\":31780:31783   */\n      dup5\n        /* \"#utility.yul\":31776:31792   */\n      add\n        /* \"#utility.yul\":31769:31792   */\n      swap2\n      pop\n        /* \"#utility.yul\":31533:31798   */\n      pop\n        /* \"#utility.yul\":31425:31798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31804:32075   */\n    tag_311:\n        /* \"#utility.yul\":31934:31937   */\n      0x00\n        /* \"#utility.yul\":31956:32049   */\n      tag_704\n        /* \"#utility.yul\":32045:32048   */\n      dup3\n        /* \"#utility.yul\":32036:32042   */\n      dup5\n        /* \"#utility.yul\":31956:32049   */\n      tag_399\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":31949:32049   */\n      swap2\n      pop\n        /* \"#utility.yul\":32066:32069   */\n      dup2\n        /* \"#utility.yul\":32059:32069   */\n      swap1\n      pop\n        /* \"#utility.yul\":31804:32075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32081:32180   */\n    tag_400:\n        /* \"#utility.yul\":32133:32139   */\n      0x00\n        /* \"#utility.yul\":32167:32172   */\n      dup2\n        /* \"#utility.yul\":32161:32173   */\n      mload\n        /* \"#utility.yul\":32151:32173   */\n      swap1\n      pop\n        /* \"#utility.yul\":32081:32180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32186:32550   */\n    tag_401:\n        /* \"#utility.yul\":32274:32277   */\n      0x00\n        /* \"#utility.yul\":32302:32341   */\n      tag_707\n        /* \"#utility.yul\":32335:32340   */\n      dup3\n        /* \"#utility.yul\":32302:32341   */\n      tag_400\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":32357:32428   */\n      tag_708\n        /* \"#utility.yul\":32421:32427   */\n      dup2\n        /* \"#utility.yul\":32416:32419   */\n      dup6\n        /* \"#utility.yul\":32357:32428   */\n      tag_361\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":32350:32428   */\n      swap4\n      pop\n        /* \"#utility.yul\":32437:32489   */\n      tag_709\n        /* \"#utility.yul\":32482:32488   */\n      dup2\n        /* \"#utility.yul\":32477:32480   */\n      dup6\n        /* \"#utility.yul\":32470:32474   */\n      0x20\n        /* \"#utility.yul\":32463:32468   */\n      dup7\n        /* \"#utility.yul\":32459:32475   */\n      add\n        /* \"#utility.yul\":32437:32489   */\n      tag_398\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":32514:32543   */\n      tag_710\n        /* \"#utility.yul\":32536:32542   */\n      dup2\n        /* \"#utility.yul\":32514:32543   */\n      tag_347\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":32509:32512   */\n      dup5\n        /* \"#utility.yul\":32505:32544   */\n      add\n        /* \"#utility.yul\":32498:32544   */\n      swap2\n      pop\n        /* \"#utility.yul\":32278:32550   */\n      pop\n        /* \"#utility.yul\":32186:32550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32556:32869   */\n    tag_324:\n        /* \"#utility.yul\":32669:32673   */\n      0x00\n        /* \"#utility.yul\":32707:32709   */\n      0x20\n        /* \"#utility.yul\":32696:32705   */\n      dup3\n        /* \"#utility.yul\":32692:32710   */\n      add\n        /* \"#utility.yul\":32684:32710   */\n      swap1\n      pop\n        /* \"#utility.yul\":32756:32765   */\n      dup2\n        /* \"#utility.yul\":32750:32754   */\n      dup2\n        /* \"#utility.yul\":32746:32766   */\n      sub\n        /* \"#utility.yul\":32742:32743   */\n      0x00\n        /* \"#utility.yul\":32731:32740   */\n      dup4\n        /* \"#utility.yul\":32727:32744   */\n      add\n        /* \"#utility.yul\":32720:32767   */\n      mstore\n        /* \"#utility.yul\":32784:32862   */\n      tag_712\n        /* \"#utility.yul\":32857:32861   */\n      dup2\n        /* \"#utility.yul\":32848:32854   */\n      dup5\n        /* \"#utility.yul\":32784:32862   */\n      tag_401\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":32776:32862   */\n      swap1\n      pop\n        /* \"#utility.yul\":32556:32869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202f071625f7592ba1b98210be59687daffd5848ee6cd46f2595f2f4d926332fbc64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1391": {
									"entryPoint": null,
									"id": 1391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_935": {
									"entryPoint": null,
									"id": 935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_2331": {
									"entryPoint": 111,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1471": {
									"entryPoint": 119,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_mul_t_uint256": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:627:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "118:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "135:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "138:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "128:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "128:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "128:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "232:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "225:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "225:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "225:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "249:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "249:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "249:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "90:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "324:300:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "334:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "357:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "339:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "339:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "334:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "368:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "391:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "373:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "373:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "368:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "566:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "568:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "568:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "568:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "478:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "471:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "471:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "464:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "486:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "493:66:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "561:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "489:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "489:74:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "483:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "483:81:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "460:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "460:105:13"
															},
															"nodeType": "YulIf",
															"src": "457:131:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "598:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "613:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "616:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "609:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "598:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "307:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "310:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "316:7:13",
														"type": ""
													}
												],
												"src": "276:348:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052610429600455620d2f00600555670de0b6b3a76400006005546004546200002c919062000174565b62000038919062000174565b6006553480156200004857600080fd5b50620000696200005d6200006f60201b60201c565b6200007760201b60201c565b620001d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000181826200013b565b91506200018e836200013b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615620001ca57620001c962000145565b5b828202905092915050565b61278780620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063c6c9bd4711610071578063c6c9bd47146102f6578063e75235b814610326578063e9fad8ee14610344578063f23a6e611461034e578063f2fde38b1461037e57610121565b8063715018a6146102505780638da5cb5b1461025a578063a694fc3a14610278578063a87430ba14610294578063bc197c81146102c657610121565b80632e1a7d4d116100f45780632e1a7d4d146101c05780634b02218f146101dc57806355ac2fd3146101f85780635fcbd2851461021657806363c668911461023457610121565b806301ffc9a7146101265780630af2c6ca146101565780631e83409a1461017457806325ca4cff14610190575b600080fd5b610140600480360381019061013b919061168a565b61039a565b60405161014d91906116d2565b60405180910390f35b61015e610414565b60405161016b9190611706565b60405180910390f35b61018e6004803603810190610189919061177f565b610421565b005b6101aa60048036038101906101a5919061177f565b61060c565b6040516101b79190611706565b60405180910390f35b6101da60048036038101906101d591906117d8565b6106a0565b005b6101f660048036038101906101f19190611805565b610802565b005b610200610a1f565b60405161020d9190611706565b60405180910390f35b61021e610a3a565b60405161022b91906118b7565b60405180910390f35b61024e60048036038101906102499190611a2b565b610a60565b005b610258610b5d565b005b610262610be5565b60405161026f9190611ac5565b60405180910390f35b610292600480360381019061028d91906117d8565b610c0e565b005b6102ae60048036038101906102a9919061177f565b610d38565b6040516102bd93929190611ae0565b60405180910390f35b6102e060048036038101906102db9190611bcc565b610d62565b6040516102ed9190611caa565b60405180910390f35b610310600480360381019061030b91906117d8565b610d77565b60405161031d9190611706565b60405180910390f35b61032e610d9b565b60405161033b9190611706565b60405180910390f35b61034c610da5565b005b61036860048036038101906103639190611cc5565b610df2565b6040516103759190611caa565b60405180910390f35b6103986004803603810190610393919061177f565b610e07565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061040d575061040c82610efe565b5b9050919050565b6000600280549050905090565b600060028054905011610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611db9565b60405180910390fd5b6006546104753361060c565b10156104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90611e25565b60405180910390fd5b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506105166006546105083361060c565b610f6890919063ffffffff16565b81600201819055504281600101819055506000806105346002610f7e565b91509150610543600282611017565b8373ffffffffffffffffffffffffffffffffffffffff1663f242432a30338560016040518563ffffffff1660e01b81526004016105839493929190611eb7565b600060405180830381600087803b15801561059d57600080fd5b505af11580156105b1573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf78360016040516105fe929190611f0f565b60405180910390a250505050565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180606001604052908160008201548152602001600182015481526020016002820154815250509050610698610685826110ff565b826040015161113a90919063ffffffff16565b915050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050818160000154101561072a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072190611f84565b60405180910390fd5b6107333361060c565b8160020181905550610752828260000154610f6890919063ffffffff16565b81600001819055504281600101819055506107b03383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166111509092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5836040516107f69190611706565b60405180910390a25050565b61080a6111d6565b73ffffffffffffffffffffffffffffffffffffffff16610828610be5565b73ffffffffffffffffffffffffffffffffffffffff161461087e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087590611ff0565b60405180910390fd5b60008167ffffffffffffffff81111561089a576108996118e8565b5b6040519080825280602002602001820160405280156108c85781602001602082028036833780820191505090505b50905060008267ffffffffffffffff8111156108e7576108e66118e8565b5b6040519080825280602002602001820160405280156109155781602001602082028036833780820191505090505b50905060008490505b848461092a919061203f565b81101561099b578083868361093f9190612095565b815181106109505761094f6120c9565b5b602002602001018181525050600182868361096b9190612095565b8151811061097c5761097b6120c9565b5b6020026020010181815250508080610993906120f8565b91505061091e565b506109a76002836111de565b8473ffffffffffffffffffffffffffffffffffffffff16632eb2c2d6333085856040518563ffffffff1660e01b81526004016109e694939291906121fe565b600060405180830381600087803b158015610a0057600080fd5b505af1158015610a14573d6000803e3d6000fd5b505050505050505050565b6000806000610a2e6002610f7e565b91509150819250505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a686111d6565b73ffffffffffffffffffffffffffffffffffffffff16610a86610be5565b73ffffffffffffffffffffffffffffffffffffffff1614610adc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad390611ff0565b60405180910390fd5b610ae76002836111de565b8273ffffffffffffffffffffffffffffffffffffffff16632eb2c2d6333085856040518563ffffffff1660e01b8152600401610b2694939291906121fe565b600060405180830381600087803b158015610b4057600080fd5b505af1158015610b54573d6000803e3d6000fd5b50505050505050565b610b656111d6565b73ffffffffffffffffffffffffffffffffffffffff16610b83610be5565b73ffffffffffffffffffffffffffffffffffffffff1614610bd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd090611ff0565b60405180910390fd5b610be3600061124e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c5d333083600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611312909392919063ffffffff16565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414610cbe57610cb53361060c565b81600201819055505b610cd582826000015461113a90919063ffffffff16565b81600001819055504281600101819055503373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610d2c9190611706565b60405180910390a25050565b60036020528060005260406000206000915090508060000154908060010154908060020154905083565b600063bc197c8160e01b905095945050505050565b60028181548110610d8757600080fd5b906000526020600020016000915090505481565b6000600654905090565b610df0600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546106a0565b565b600063f23a6e6160e01b905095945050505050565b610e0f6111d6565b73ffffffffffffffffffffffffffffffffffffffff16610e2d610be5565b73ffffffffffffffffffffffffffffffffffffffff1614610e83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7a90611ff0565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee9906122d6565b60405180910390fd5b610efb8161124e565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008183610f769190612095565b905092915050565b60008082600081548110610f9557610f946120c9565b5b906000526020600020015491506000905060005b83805490508110156110115782848281548110610fc957610fc86120c9565b5b90600052602060002001541015610ffe57838181548110610fed57610fec6120c9565b5b906000526020600020015492508091505b8080611009906120f8565b915050610fa9565b50915091565b8180549050811061105d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105490612368565b60405180910390fd5b5b6001828054905061106f9190612095565b8110156110d45781600182611084919061203f565b81548110611095576110946120c9565b5b90600052602060002001548282815481106110b3576110b26120c9565b5b906000526020600020018190555080806110cc906120f8565b91505061105e565b818054806110e5576110e4612388565b5b600190038181906000526020600020016000905590555050565b6000804290506111328360000151611124856020015184610f6890919063ffffffff16565b61139b90919063ffffffff16565b915050919050565b60008183611148919061203f565b905092915050565b6111d18363a9059cbb60e01b848460405160240161116f9291906123b7565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113b1565b505050565b600033905090565b600081511461124a5760005b81518110156112485782828281518110611207576112066120c9565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080611240906120f8565b9150506111ea565b505b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611395846323b872dd60e01b858585604051602401611333939291906123e0565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506113b1565b50505050565b600081836113a99190612417565b905092915050565b6000611413826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166114789092919063ffffffff16565b90506000815111156114735780806020019051810190611433919061249d565b611472576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114699061253c565b60405180910390fd5b5b505050565b60606114878484600085611490565b90509392505050565b6060824710156114d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cc906125ce565b60405180910390fd5b6114de856115a4565b61151d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115149061263a565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161154691906126d4565b60006040518083038185875af1925050503d8060008114611583576040519150601f19603f3d011682016040523d82523d6000602084013e611588565b606091505b50915091506115988282866115b7565b92505050949350505050565b600080823b905060008111915050919050565b606083156115c757829050611617565b6000835111156115da5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160e919061272f565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61166781611632565b811461167257600080fd5b50565b6000813590506116848161165e565b92915050565b6000602082840312156116a05761169f611628565b5b60006116ae84828501611675565b91505092915050565b60008115159050919050565b6116cc816116b7565b82525050565b60006020820190506116e760008301846116c3565b92915050565b6000819050919050565b611700816116ed565b82525050565b600060208201905061171b60008301846116f7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061174c82611721565b9050919050565b61175c81611741565b811461176757600080fd5b50565b60008135905061177981611753565b92915050565b60006020828403121561179557611794611628565b5b60006117a38482850161176a565b91505092915050565b6117b5816116ed565b81146117c057600080fd5b50565b6000813590506117d2816117ac565b92915050565b6000602082840312156117ee576117ed611628565b5b60006117fc848285016117c3565b91505092915050565b60008060006060848603121561181e5761181d611628565b5b600061182c8682870161176a565b935050602061183d868287016117c3565b925050604061184e868287016117c3565b9150509250925092565b6000819050919050565b600061187d61187861187384611721565b611858565b611721565b9050919050565b600061188f82611862565b9050919050565b60006118a182611884565b9050919050565b6118b181611896565b82525050565b60006020820190506118cc60008301846118a8565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611920826118d7565b810181811067ffffffffffffffff8211171561193f5761193e6118e8565b5b80604052505050565b600061195261161e565b905061195e8282611917565b919050565b600067ffffffffffffffff82111561197e5761197d6118e8565b5b602082029050602081019050919050565b600080fd5b60006119a76119a284611963565b611948565b905080838252602082019050602084028301858111156119ca576119c961198f565b5b835b818110156119f357806119df88826117c3565b8452602084019350506020810190506119cc565b5050509392505050565b600082601f830112611a1257611a116118d2565b5b8135611a22848260208601611994565b91505092915050565b600080600060608486031215611a4457611a43611628565b5b6000611a528682870161176a565b935050602084013567ffffffffffffffff811115611a7357611a7261162d565b5b611a7f868287016119fd565b925050604084013567ffffffffffffffff811115611aa057611a9f61162d565b5b611aac868287016119fd565b9150509250925092565b611abf81611741565b82525050565b6000602082019050611ada6000830184611ab6565b92915050565b6000606082019050611af560008301866116f7565b611b0260208301856116f7565b611b0f60408301846116f7565b949350505050565b600080fd5b600067ffffffffffffffff821115611b3757611b366118e8565b5b611b40826118d7565b9050602081019050919050565b82818337600083830152505050565b6000611b6f611b6a84611b1c565b611948565b905082815260208101848484011115611b8b57611b8a611b17565b5b611b96848285611b4d565b509392505050565b600082601f830112611bb357611bb26118d2565b5b8135611bc3848260208601611b5c565b91505092915050565b600080600080600060a08688031215611be857611be7611628565b5b6000611bf68882890161176a565b9550506020611c078882890161176a565b945050604086013567ffffffffffffffff811115611c2857611c2761162d565b5b611c34888289016119fd565b935050606086013567ffffffffffffffff811115611c5557611c5461162d565b5b611c61888289016119fd565b925050608086013567ffffffffffffffff811115611c8257611c8161162d565b5b611c8e88828901611b9e565b9150509295509295909350565b611ca481611632565b82525050565b6000602082019050611cbf6000830184611c9b565b92915050565b600080600080600060a08688031215611ce157611ce0611628565b5b6000611cef8882890161176a565b9550506020611d008882890161176a565b9450506040611d11888289016117c3565b9350506060611d22888289016117c3565b925050608086013567ffffffffffffffff811115611d4357611d4261162d565b5b611d4f88828901611b9e565b9150509295509295909350565b600082825260208201905092915050565b7f416c6c204e465473206661726d65640000000000000000000000000000000000600082015250565b6000611da3600f83611d5c565b9150611dae82611d6d565b602082019050919050565b60006020820190508181036000830152611dd281611d96565b9050919050565b7f496e73756666696369656e7420506f696e747300000000000000000000000000600082015250565b6000611e0f601383611d5c565b9150611e1a82611dd9565b602082019050919050565b60006020820190508181036000830152611e3e81611e02565b9050919050565b6000819050919050565b6000611e6a611e65611e6084611e45565b611858565b6116ed565b9050919050565b611e7a81611e4f565b82525050565b600082825260208201905092915050565b50565b6000611ea1600083611e80565b9150611eac82611e91565b600082019050919050565b600060a082019050611ecc6000830187611ab6565b611ed96020830186611ab6565b611ee660408301856116f7565b611ef36060830184611e71565b8181036080830152611f0481611e94565b905095945050505050565b6000604082019050611f2460008301856116f7565b611f316020830184611e71565b9392505050565b7f496e73756666696369656e74207374616b656400000000000000000000000000600082015250565b6000611f6e601383611d5c565b9150611f7982611f38565b602082019050919050565b60006020820190508181036000830152611f9d81611f61565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611fda602083611d5c565b9150611fe582611fa4565b602082019050919050565b6000602082019050818103600083015261200981611fcd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061204a826116ed565b9150612055836116ed565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561208a57612089612010565b5b828201905092915050565b60006120a0826116ed565b91506120ab836116ed565b9250828210156120be576120bd612010565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000612103826116ed565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361213557612134612010565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612175816116ed565b82525050565b6000612187838361216c565b60208301905092915050565b6000602082019050919050565b60006121ab82612140565b6121b5818561214b565b93506121c08361215c565b8060005b838110156121f15781516121d8888261217b565b97506121e383612193565b9250506001810190506121c4565b5085935050505092915050565b600060a0820190506122136000830187611ab6565b6122206020830186611ab6565b818103604083015261223281856121a0565b9050818103606083015261224681846121a0565b9050818103608083015261225981611e94565b905095945050505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122c0602683611d5c565b91506122cb82612264565b604082019050919050565b600060208201905081810360008301526122ef816122b3565b9050919050565b7f4172726179466f7255696e743235363a20696e646578206f7574206f6620626f60008201527f756e647300000000000000000000000000000000000000000000000000000000602082015250565b6000612352602483611d5c565b915061235d826122f6565b604082019050919050565b6000602082019050818103600083015261238181612345565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006040820190506123cc6000830185611ab6565b6123d960208301846116f7565b9392505050565b60006060820190506123f56000830186611ab6565b6124026020830185611ab6565b61240f60408301846116f7565b949350505050565b6000612422826116ed565b915061242d836116ed565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561246657612465612010565b5b828202905092915050565b61247a816116b7565b811461248557600080fd5b50565b60008151905061249781612471565b92915050565b6000602082840312156124b3576124b2611628565b5b60006124c184828501612488565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612526602a83611d5c565b9150612531826124ca565b604082019050919050565b6000602082019050818103600083015261255581612519565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006125b8602683611d5c565b91506125c38261255c565b604082019050919050565b600060208201905081810360008301526125e7816125ab565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612624601d83611d5c565b915061262f826125ee565b602082019050919050565b6000602082019050818103600083015261265381612617565b9050919050565b600081519050919050565b600081905092915050565b60005b8381101561268e578082015181840152602081019050612673565b8381111561269d576000848401525b50505050565b60006126ae8261265a565b6126b88185612665565b93506126c8818560208601612670565b80840191505092915050565b60006126e082846126a3565b915081905092915050565b600081519050919050565b6000612701826126eb565b61270b8185611d5c565b935061271b818560208601612670565b612724816118d7565b840191505092915050565b6000602082019050818103600083015261274981846126f6565b90509291505056fea26469706673582212202f071625f7592ba1b98210be59687daffd5848ee6cd46f2595f2f4d926332fbc64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0x429 PUSH1 0x4 SSTORE PUSH3 0xD2F00 PUSH1 0x5 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH3 0x2C SWAP2 SWAP1 PUSH3 0x174 JUMP JUMPDEST PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x174 JUMP JUMPDEST PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x69 PUSH3 0x5D PUSH3 0x6F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x77 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D5 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x181 DUP3 PUSH3 0x13B JUMP JUMPDEST SWAP2 POP PUSH3 0x18E DUP4 PUSH3 0x13B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x1CA JUMPI PUSH3 0x1C9 PUSH3 0x145 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2787 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC6C9BD47 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC6C9BD47 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2C6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x55AC2FD3 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x234 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x25CA4CFF EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0xB5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0xDA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x40D JUMPI POP PUSH2 0x40C DUP3 PUSH2 0xEFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x460 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x475 CALLER PUSH2 0x60C JUMP JUMPDEST LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x516 PUSH1 0x6 SLOAD PUSH2 0x508 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x534 PUSH1 0x2 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x543 PUSH1 0x2 DUP3 PUSH2 0x1017 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x698 PUSH2 0x685 DUP3 PUSH2 0x10FF JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x113A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x733 CALLER PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x752 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7B0 CALLER DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1150 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x80A PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x915 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP JUMPDEST DUP5 DUP5 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x99B JUMPI DUP1 DUP4 DUP7 DUP4 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP7 DUP4 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x993 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91E JUMP JUMPDEST POP PUSH2 0x9A7 PUSH1 0x2 DUP4 PUSH2 0x11DE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2EB2C2D6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA2E PUSH1 0x2 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA86 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD3 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE7 PUSH1 0x2 DUP4 PUSH2 0x11DE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2EB2C2D6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB65 PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB83 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 PUSH1 0x0 PUSH2 0x124E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5D CALLER ADDRESS DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1312 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xCBE JUMPI PUSH2 0xCB5 CALLER PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xCD5 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x113A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x6A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE2D PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0x124E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1011 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFC9 JUMPI PUSH2 0xFC8 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0xFFE JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x1009 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA9 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x105D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 DUP3 DUP1 SLOAD SWAP1 POP PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10D4 JUMPI DUP2 PUSH1 0x1 DUP3 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x10CC SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x105E JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x10E5 JUMPI PUSH2 0x10E4 PUSH2 0x2388 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH2 0x1132 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1124 DUP6 PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x139B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11D1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x116F SWAP3 SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0x124A JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1248 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH2 0x1240 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EA JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1395 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1333 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1478 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1473 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1487 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CC SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DE DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1514 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1546 SWAP2 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1598 DUP3 DUP3 DUP7 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15C7 JUMPI DUP3 SWAP1 POP PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x15DA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP2 EQ PUSH2 0x1672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1684 DUP2 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1675 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP3 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP2 EQ PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1779 DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP5 DUP3 DUP6 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17B5 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x17AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FC DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH2 0x181D PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP7 DUP3 DUP8 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x183D DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x184E DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D PUSH2 0x1878 PUSH2 0x1873 DUP5 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x1862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A1 DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1920 DUP3 PUSH2 0x18D7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1952 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH2 0x195E DUP3 DUP3 PUSH2 0x1917 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A7 PUSH2 0x19A2 DUP5 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x198F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F3 JUMPI DUP1 PUSH2 0x19DF DUP9 DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19CC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A22 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP7 DUP3 DUP8 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1A7F DUP7 DUP3 DUP8 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1AAC DUP7 DUP3 DUP8 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1B40 DUP3 PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6F PUSH2 0x1B6A DUP5 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B8B JUMPI PUSH2 0x1B8A PUSH2 0x1B17 JUMP JUMPDEST JUMPDEST PUSH2 0x1B96 DUP5 DUP3 DUP6 PUSH2 0x1B4D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BB3 JUMPI PUSH2 0x1BB2 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BC3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF6 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C07 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C34 DUP9 DUP3 DUP10 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C54 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C61 DUP9 DUP3 DUP10 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C8E DUP9 DUP3 DUP10 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE0 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEF DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D00 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D11 DUP9 DUP3 DUP10 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D22 DUP9 DUP3 DUP10 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1D4F DUP9 DUP3 DUP10 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C204E465473206661726D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA3 PUSH1 0xF DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAE DUP3 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD2 DUP2 PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420506F696E747300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0F PUSH1 0x13 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1A DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3E DUP2 PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH2 0x1E65 PUSH2 0x1E60 DUP5 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7A DUP2 PUSH2 0x1E4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x0 DUP4 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ECC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1EF3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E71 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F04 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6E PUSH1 0x13 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F9D DUP2 PUSH2 0x1F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x20 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2009 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x204A DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2055 DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x208A JUMPI PUSH2 0x2089 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A0 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2135 JUMPI PUSH2 0x2134 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2175 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2187 DUP4 DUP4 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AB DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x21B5 DUP2 DUP6 PUSH2 0x214B JUMP JUMPDEST SWAP4 POP PUSH2 0x21C0 DUP4 PUSH2 0x215C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F1 JUMPI DUP2 MLOAD PUSH2 0x21D8 DUP9 DUP3 PUSH2 0x217B JUMP JUMPDEST SWAP8 POP PUSH2 0x21E3 DUP4 PUSH2 0x2193 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21C4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2213 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x2220 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 DUP6 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 PUSH1 0x26 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP3 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756E647300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2352 PUSH1 0x24 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x235D DUP3 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2381 DUP2 PUSH2 0x2345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x2402 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x240F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2422 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247A DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2497 DUP2 PUSH2 0x2471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B3 JUMPI PUSH2 0x24B2 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C1 DUP5 DUP3 DUP6 ADD PUSH2 0x2488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x2A DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x26 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x1D DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x268E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2673 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x269D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x26B8 DUP2 DUP6 PUSH2 0x2665 JUMP JUMPDEST SWAP4 POP PUSH2 0x26C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E0 DUP3 DUP5 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH2 0x270B DUP2 DUP6 PUSH2 0x1D5C JUMP JUMPDEST SWAP4 POP PUSH2 0x271B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST PUSH2 0x2724 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2749 DUP2 DUP5 PUSH2 0x26F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SMOD AND 0x25 0xF7 MSIZE 0x2B LOG1 0xB9 DUP3 LT 0xBE MSIZE PUSH9 0x7DAFFD5848EE6CD46F 0x25 SWAP6 CALLCODE DELEGATECALL 0xD9 0x26 CALLER 0x2F 0xBC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:5001:0:-:0;;;7478:4;7448:34;;7521:6;7489:38;;7592:8;7576:13;;7562:11;;:27;;;;:::i;:::-;:38;;;;:::i;:::-;7534:66;;7901:29;;;;;;;;;;949:32:1;968:12;:10;;;:12;;:::i;:::-;949:18;;;:32;;:::i;:::-;6648:5001:0;;656:98:9;709:7;736:10;729:17;;656:98;:::o;2340:191:1:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2403:128;2340:191;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:180::-;138:77;135:1;128:88;235:4;232:1;225:15;259:4;256:1;249:15;276:348;316:7;339:20;357:1;339:20;:::i;:::-;334:25;;373:20;391:1;373:20;:::i;:::-;368:25;;561:1;493:66;489:74;486:1;483:81;478:1;471:9;464:17;460:105;457:131;;;568:18;;:::i;:::-;457:131;616:1;613;609:9;598:20;;276:348;;;;:::o;6648:5001:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_2021": {
									"entryPoint": 5041,
									"id": 2021,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2331": {
									"entryPoint": 4566,
									"id": 2331,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_1471": {
									"entryPoint": 4686,
									"id": 1471,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unDebitedPoints_1332": {
									"entryPoint": 4351,
									"id": 1332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@addNFTBatch_971": {
									"entryPoint": 2656,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addNftBatchWithNumber_1058": {
									"entryPoint": 2050,
									"id": 1058,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_2553": {
									"entryPoint": 4410,
									"id": 2553,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_1211": {
									"entryPoint": 1057,
									"id": 1211,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@exit_1285": {
									"entryPoint": 3493,
									"id": 1285,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@extend_635": {
									"entryPoint": 4574,
									"id": 635,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_2183": {
									"entryPoint": 5264,
									"id": 2183,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_2113": {
									"entryPoint": 5240,
									"id": 2113,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getNextNftTokenId_1358": {
									"entryPoint": 2591,
									"id": 1358,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getThreshold_1366": {
									"entryPoint": 3483,
									"id": 1366,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_2042": {
									"entryPoint": 5540,
									"id": 2042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lpToken_878": {
									"entryPoint": 2618,
									"id": 878,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_847": {
									"entryPoint": 3966,
									"id": 847,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@mul_2583": {
									"entryPoint": 5019,
									"id": 2583,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@nftCount_1341": {
									"entryPoint": 1044,
									"id": 1341,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftIds_881": {
									"entryPoint": 3447,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_1685": {
									"entryPoint": 3426,
									"id": 1685,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1662": {
									"entryPoint": 3570,
									"id": 1662,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_1400": {
									"entryPoint": 3045,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pointsBalance_1308": {
									"entryPoint": 1548,
									"id": 1308,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeByIndex_532": {
									"entryPoint": 4119,
									"id": 532,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_1428": {
									"entryPoint": 2909,
									"id": 1428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1855": {
									"entryPoint": 4882,
									"id": 1855,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1829": {
									"entryPoint": 4432,
									"id": 1829,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_1122": {
									"entryPoint": 3086,
									"id": 1122,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_2568": {
									"entryPoint": 3944,
									"id": 2568,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1719": {
									"entryPoint": 922,
									"id": 1719,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2364": {
									"entryPoint": 3838,
									"id": 2364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1451": {
									"entryPoint": 3591,
									"id": 1451,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@users_886": {
									"entryPoint": 3384,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResult_2318": {
									"entryPoint": 5559,
									"id": 2318,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdraw_1273": {
									"entryPoint": 1696,
									"id": 1273,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6548,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7004,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 8571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 7323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$1798_to_t_address_fromStack": {
									"entryPoint": 6312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8702,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9184,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7863,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5842,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1798__to_t_address__fromStack_reversed": {
									"entryPoint": 6327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9786,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9818,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1798_to_t_address": {
									"entryPoint": 6294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 7759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6242,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 9840,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 6232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8393,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6935,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5677,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a": {
									"entryPoint": 7641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 9418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32872:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1584:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1666:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1683:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1706:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1688:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1688:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1676:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1676:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1654:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1661:3:13",
														"type": ""
													}
												],
												"src": "1601:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1823:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1833:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1845:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1856:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1841:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1841:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1833:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1913:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1926:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1922:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1869:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1795:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1807:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1818:4:13",
														"type": ""
													}
												],
												"src": "1725:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1998:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2008:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2023:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2030:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2008:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1980:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1990:7:13",
														"type": ""
													}
												],
												"src": "1953:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2130:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2140:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2169:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2151:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2151:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2140:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2112:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2122:7:13",
														"type": ""
													}
												],
												"src": "2085:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2230:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2287:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2299:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2289:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2289:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2289:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2253:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2278:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2260:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2260:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2250:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2250:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2243:43:13"
															},
															"nodeType": "YulIf",
															"src": "2240:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2223:5:13",
														"type": ""
													}
												],
												"src": "2187:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2367:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2377:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2399:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2386:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2386:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2377:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2442:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2415:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2353:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2361:5:13",
														"type": ""
													}
												],
												"src": "2315:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2526:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2572:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2574:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2574:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2574:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2547:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2556:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2543:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2543:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2539:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2539:32:13"
															},
															"nodeType": "YulIf",
															"src": "2536:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2665:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2680:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2694:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2684:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2709:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2744:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2755:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2740:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2740:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2764:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2719:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2709:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2496:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2507:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2519:6:13",
														"type": ""
													}
												],
												"src": "2460:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2895:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:43:13"
															},
															"nodeType": "YulIf",
															"src": "2848:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2831:5:13",
														"type": ""
													}
												],
												"src": "2795:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2975:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2985:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2953:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2961:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2969:5:13",
														"type": ""
													}
												],
												"src": "2923:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3134:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3182:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3155:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3164:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3151:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3147:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3147:32:13"
															},
															"nodeType": "YulIf",
															"src": "3144:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3273:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3288:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3302:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3292:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3317:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3352:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3363:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3348:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3348:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3372:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3327:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3317:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3104:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3115:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3127:6:13",
														"type": ""
													}
												],
												"src": "3068:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3503:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3549:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3551:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3551:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3551:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3524:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3533:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3520:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3545:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3516:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3516:32:13"
															},
															"nodeType": "YulIf",
															"src": "3513:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3642:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3657:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3661:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3686:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3721:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3732:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3717:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3717:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3741:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3696:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3696:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3686:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3769:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3784:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3798:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3788:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3814:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3849:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3860:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3845:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3845:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3869:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3824:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3824:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3814:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3897:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3912:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3916:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3942:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3977:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3988:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3973:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3973:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3997:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3952:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3942:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3457:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3468:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3480:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3488:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3496:6:13",
														"type": ""
													}
												],
												"src": "3403:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4060:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4070:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4077:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4070:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4046:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4056:3:13",
														"type": ""
													}
												],
												"src": "4028:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4154:82:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4164:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4222:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4204:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4204:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4195:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4195:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4177:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4164:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4134:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4144:9:13",
														"type": ""
													}
												],
												"src": "4094:142:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4356:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4325:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4325:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4312:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4282:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4292:9:13",
														"type": ""
													}
												],
												"src": "4242:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4449:66:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4459:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4503:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4472:30:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4472:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4459:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1798_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4429:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4439:9:13",
														"type": ""
													}
												],
												"src": "4374:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4601:81:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4618:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4669:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1798_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4623:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4623:52:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:65:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1798_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4589:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4596:3:13",
														"type": ""
													}
												],
												"src": "4521:161:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4801:139:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4811:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4823:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4834:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4811:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4906:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4919:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4930:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4915:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1798_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4847:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:86:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4847:86:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1798__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4773:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4785:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4796:4:13",
														"type": ""
													}
												],
												"src": "4688:252:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5035:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5052:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5055:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5045:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5045:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4946:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5117:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5127:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5145:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5152:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5141:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5141:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5161:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5157:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5157:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5137:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5137:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5110:6:13",
														"type": ""
													}
												],
												"src": "5069:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5205:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5222:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5225:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5215:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5319:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5322:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5312:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5312:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5312:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5346:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5336:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5336:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5336:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5177:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5406:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5416:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5438:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "5468:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "5446:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5446:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "5420:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5585:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5587:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5587:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5587:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5528:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5540:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5525:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5525:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "5564:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5576:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5561:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5522:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5522:62:13"
															},
															"nodeType": "YulIf",
															"src": "5519:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "5627:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5392:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5400:4:13",
														"type": ""
													}
												],
												"src": "5363:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5691:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5701:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5711:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5701:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5760:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5768:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5740:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5740:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5740:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5675:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5684:6:13",
														"type": ""
													}
												],
												"src": "5650:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5867:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5972:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5974:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5974:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5974:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5944:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5952:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5941:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:30:13"
															},
															"nodeType": "YulIf",
															"src": "5938:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6004:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6016:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6024:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6012:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6004:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6066:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6078:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6084:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6074:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6074:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6066:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5851:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5862:4:13",
														"type": ""
													}
												],
												"src": "5785:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6191:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6208:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6211:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6201:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "6102:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6344:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6354:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6436:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6379:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6379:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6363:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6363:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6354:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6453:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6464:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6457:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6486:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6493:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6479:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6479:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6479:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6509:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6520:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6527:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6516:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6516:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6509:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6542:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6560:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6572:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6580:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6568:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6546:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6614:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "6628:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6628:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6628:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6601:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6609:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6598:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:15:13"
															},
															"nodeType": "YulIf",
															"src": "6595:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6802:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6817:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "6835:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "6821:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6859:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "6885:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "6897:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "6864:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6864:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6852:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6852:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6852:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6915:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6926:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6931:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6922:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6922:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6915:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6755:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6760:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6752:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6752:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6768:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6770:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6781:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6786:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6777:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6777:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6770:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6730:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6732:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "6743:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "6736:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6726:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6314:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6322:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6330:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6338:5:13",
														"type": ""
													}
												],
												"src": "6242:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7052:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7101:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7103:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7103:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7103:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7080:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7088:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7076:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7076:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7095:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7072:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7072:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7065:35:13"
															},
															"nodeType": "YulIf",
															"src": "7062:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7193:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7220:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7207:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7197:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7236:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7312:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7320:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7308:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7308:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7335:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7236:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7030:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7038:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7046:5:13",
														"type": ""
													}
												],
												"src": "6975:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7501:889:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7547:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7549:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7549:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7549:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7522:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7531:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7518:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7543:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7514:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7514:32:13"
															},
															"nodeType": "YulIf",
															"src": "7511:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "7640:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7655:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7669:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7659:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7684:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7719:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7730:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7715:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7715:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7739:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7694:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7694:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7684:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7767:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7782:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7813:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7824:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7809:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7809:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7796:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7796:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7786:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7875:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7877:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7877:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7877:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7847:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7855:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7844:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7844:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "7841:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7972:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8032:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8043:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8028:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8028:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8052:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7982:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7982:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7972:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8080:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8095:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8126:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8137:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8122:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8109:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8099:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8188:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8190:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8190:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8190:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8160:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8168:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8157:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8157:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "8154:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8285:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8345:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8356:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8341:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8341:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8365:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8295:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8295:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8285:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7455:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7466:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7478:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7486:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7494:6:13",
														"type": ""
													}
												],
												"src": "7351:1039:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8461:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8478:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8501:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8483:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8483:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8471:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8471:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8471:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8449:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8456:3:13",
														"type": ""
													}
												],
												"src": "8396:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8618:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8628:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8640:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8651:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8636:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8636:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8628:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8708:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8721:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8732:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8717:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8717:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8664:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8664:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8590:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8602:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8613:4:13",
														"type": ""
													}
												],
												"src": "8520:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8902:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8912:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8924:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8935:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8920:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8912:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8992:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9005:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9016:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9001:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9001:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8948:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8948:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8948:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9073:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9086:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9097:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9082:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9082:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9029:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9029:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9029:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9155:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9179:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9164:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9111:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9111:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8870:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8878:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8886:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8897:4:13",
														"type": ""
													}
												],
												"src": "8748:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9285:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9302:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9305:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9295:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9295:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9196:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9385:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9490:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9492:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9492:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9492:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9462:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9470:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9459:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9459:30:13"
															},
															"nodeType": "YulIf",
															"src": "9456:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9522:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9552:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "9530:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9530:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9522:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9596:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "9608:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9614:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9604:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9604:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "9596:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9369:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9380:4:13",
														"type": ""
													}
												],
												"src": "9319:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9683:103:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9706:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9711:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9716:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9693:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9693:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9693:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9764:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9769:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9760:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9760:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9778:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9753:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9753:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9753:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9665:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9670:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9675:6:13",
														"type": ""
													}
												],
												"src": "9632:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9875:327:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9885:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9951:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9910:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9910:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9894:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9894:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9885:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9975:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9982:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9968:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9968:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9968:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9998:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "10013:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10020:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "10002:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10063:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "10065:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10065:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10065:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "10044:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10049:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10040:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10040:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10058:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10037:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:25:13"
															},
															"nodeType": "YulIf",
															"src": "10034:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "10179:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "10184:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10189:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10155:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10155:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10155:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9848:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9853:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9861:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9869:5:13",
														"type": ""
													}
												],
												"src": "9792:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10282:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10331:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10333:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10333:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10333:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10310:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10318:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10306:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10306:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10325:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10302:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10302:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10295:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10295:35:13"
															},
															"nodeType": "YulIf",
															"src": "10292:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10423:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10450:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10437:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10437:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10427:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10466:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10526:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10534:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10522:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10522:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10541:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10549:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10475:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10466:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "10260:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10268:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "10276:5:13",
														"type": ""
													}
												],
												"src": "10221:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10758:1316:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10805:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10807:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10807:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10807:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10779:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10788:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10800:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:33:13"
															},
															"nodeType": "YulIf",
															"src": "10768:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10898:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10913:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10927:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10917:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10942:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10977:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10988:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10973:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10973:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10997:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10952:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10952:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10942:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11025:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11040:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11054:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11044:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11070:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11105:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11116:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11101:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11101:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11125:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11080:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11080:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11070:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11153:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11168:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11199:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11210:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11195:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11195:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11182:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11182:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11172:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11261:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11263:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11263:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11263:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11233:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11241:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11230:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11230:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "11227:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11358:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11418:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11429:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11414:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11414:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11438:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11368:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11368:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11358:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11466:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11481:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11512:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11523:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11508:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11508:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11495:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11495:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11485:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11574:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11576:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11576:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11576:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11546:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11554:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11543:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11543:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "11540:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11671:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11731:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11742:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11727:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11727:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11751:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11681:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11681:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "11671:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11779:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11794:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11825:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11836:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11821:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11821:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "11808:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11808:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11798:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "11888:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "11890:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11890:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "11890:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11860:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11868:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11857:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11857:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "11854:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11985:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12029:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12040:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12025:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12025:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12049:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "11995:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11995:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "11985:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10696:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10707:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10719:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10727:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10735:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10743:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10751:6:13",
														"type": ""
													}
												],
												"src": "10565:1509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12143:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12160:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12182:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "12165:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12165:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12153:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12153:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12153:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12131:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12138:3:13",
														"type": ""
													}
												],
												"src": "12080:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12297:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12307:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12319:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12330:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12315:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12315:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12307:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12385:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12398:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12409:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12394:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12394:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12343:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12343:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12343:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12269:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12281:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12292:4:13",
														"type": ""
													}
												],
												"src": "12201:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12568:946:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12615:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12617:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12617:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12617:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12589:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12598:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12585:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12585:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12610:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12581:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12581:33:13"
															},
															"nodeType": "YulIf",
															"src": "12578:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "12708:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12723:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12737:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12727:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12752:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12787:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12798:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12783:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12783:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12807:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12762:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12762:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12752:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12835:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12850:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12864:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12854:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12880:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12915:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12926:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12911:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12911:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12935:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12890:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12890:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12880:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12963:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12978:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12992:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12982:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13008:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13043:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13054:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13039:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13039:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13063:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13018:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13018:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "13008:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13091:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13106:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13120:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13110:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13136:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13171:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13182:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13167:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13167:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13191:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13146:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13146:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "13136:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "13219:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "13234:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13265:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13276:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13261:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13261:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "13248:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13248:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "13238:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "13328:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "13330:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13330:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "13330:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "13300:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13308:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13297:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13297:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "13294:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "13425:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "13469:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "13480:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13465:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13465:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13489:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "13435:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13435:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "13425:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12506:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12517:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12529:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12537:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12545:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12553:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12561:6:13",
														"type": ""
													}
												],
												"src": "12425:1089:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13616:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13633:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13638:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13626:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13626:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13626:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13654:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13673:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13678:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13669:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13669:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13654:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13588:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13593:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13604:11:13",
														"type": ""
													}
												],
												"src": "13520:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13801:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13823:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13831:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13819:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13819:14:13"
																	},
																	{
																		"hexValue": "416c6c204e465473206661726d6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13835:17:13",
																		"type": "",
																		"value": "All NFTs farmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13812:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13812:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13812:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13793:6:13",
														"type": ""
													}
												],
												"src": "13695:165:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14012:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14022:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14088:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14093:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14029:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14029:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14022:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14194:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
																	"nodeType": "YulIdentifier",
																	"src": "14105:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14105:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14105:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14207:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14218:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14223:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14214:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14214:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14207:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14000:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14008:3:13",
														"type": ""
													}
												],
												"src": "13866:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14409:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14419:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14431:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14442:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14427:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14427:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14419:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14466:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14477:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14462:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14462:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14485:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14491:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14481:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14455:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14455:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14455:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14511:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14645:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14519:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14519:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14511:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14389:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14404:4:13",
														"type": ""
													}
												],
												"src": "14238:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14769:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14791:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14799:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14787:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14787:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420506f696e7473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14803:21:13",
																		"type": "",
																		"value": "Insufficient Points"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14780:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14780:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14780:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14761:6:13",
														"type": ""
													}
												],
												"src": "14663:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14984:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14994:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15060:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15065:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15001:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15001:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14994:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15166:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
																	"nodeType": "YulIdentifier",
																	"src": "15077:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15077:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15077:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15179:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15190:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15195:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15186:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15179:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14972:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14980:3:13",
														"type": ""
													}
												],
												"src": "14838:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15381:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15391:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15403:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15414:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15399:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15391:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15438:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15449:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15434:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15434:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15457:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15463:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15453:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15453:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15427:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15427:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15427:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15483:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15617:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15491:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15491:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15483:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15361:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15376:4:13",
														"type": ""
													}
												],
												"src": "15210:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15688:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15698:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15709:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15698:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15670:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15680:7:13",
														"type": ""
													}
												],
												"src": "15635:85:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15794:90:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15804:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15870:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "15844:25:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15844:32:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "15835:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15835:42:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "15817:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15817:61:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15804:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15774:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15784:9:13",
														"type": ""
													}
												],
												"src": "15726:158:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15963:74:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15980:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16024:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "15985:38:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15985:45:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15973:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15973:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15973:58:13"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15951:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15958:3:13",
														"type": ""
													}
												],
												"src": "15890:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16138:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16155:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16160:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16148:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16148:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16148:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16176:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16195:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16200:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16191:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16176:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16110:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16115:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16126:11:13",
														"type": ""
													}
												],
												"src": "16043:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16323:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16315:6:13",
														"type": ""
													}
												],
												"src": "16217:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16482:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16492:72:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16557:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16562:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16499:57:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16499:65:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16492:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16662:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "16573:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16573:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16573:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16675:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16686:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16691:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16682:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16682:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16675:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16470:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16478:3:13",
														"type": ""
													}
												],
												"src": "16337:362:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16995:585:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17005:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17017:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17028:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17013:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17013:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17005:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17086:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17099:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17110:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17095:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17095:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17042:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17042:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17042:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17167:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17180:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17191:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17176:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17176:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17123:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17123:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17123:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17249:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17262:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17273:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17258:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17258:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17205:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17205:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17205:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17339:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17352:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17363:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17348:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17348:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17287:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17287:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17287:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17388:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17399:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17384:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17384:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17409:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17415:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17405:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17405:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17377:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17377:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17377:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17435:138:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17568:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17443:123:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17443:130:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17435:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16943:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16955:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16963:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16971:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16979:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16990:4:13",
														"type": ""
													}
												],
												"src": "16705:875:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17720:214:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17730:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17742:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17753:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17738:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17738:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17730:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17810:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17823:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17834:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17819:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17819:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17766:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17766:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17766:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17899:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17912:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17923:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17908:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17908:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17847:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17847:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17847:80:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17684:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17696:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17704:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17715:4:13",
														"type": ""
													}
												],
												"src": "17586:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18046:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18068:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18076:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18064:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18064:14:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18080:21:13",
																		"type": "",
																		"value": "Insufficient staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18057:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18057:45:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18057:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18038:6:13",
														"type": ""
													}
												],
												"src": "17940:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18261:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18271:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18337:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18342:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18278:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18278:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18271:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18443:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
																	"nodeType": "YulIdentifier",
																	"src": "18354:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18354:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18354:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18456:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18467:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18472:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18463:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18463:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18456:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18249:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18257:3:13",
														"type": ""
													}
												],
												"src": "18115:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18658:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18668:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18680:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18691:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18676:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18676:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18668:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18715:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18726:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18711:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18711:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18734:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18740:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18730:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18704:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18704:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18704:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18760:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18894:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18768:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18768:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18760:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18638:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18653:4:13",
														"type": ""
													}
												],
												"src": "18487:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19018:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19040:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19048:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19036:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19036:14:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19052:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19029:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19029:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19029:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19010:6:13",
														"type": ""
													}
												],
												"src": "18912:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19246:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19256:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19322:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19327:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19263:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19263:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19256:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19428:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "19339:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19339:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19339:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19441:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19452:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19448:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19448:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19441:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19234:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19242:3:13",
														"type": ""
													}
												],
												"src": "19100:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19643:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19653:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19665:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19676:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19661:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19661:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19653:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19700:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19711:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19696:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19696:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19719:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19725:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19715:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19715:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19689:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19689:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19689:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19745:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19879:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19753:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19753:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19745:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19623:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19638:4:13",
														"type": ""
													}
												],
												"src": "19472:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19925:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19942:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19945:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19935:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19935:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19935:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20039:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20042:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20032:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20032:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20063:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20066:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20056:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20056:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20056:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "19897:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20127:261:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20137:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20160:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20142:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20142:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20137:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20171:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20194:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20176:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20176:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20171:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20334:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20336:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20336:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20336:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20255:1:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20262:66:13",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20330:1:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20258:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20258:74:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20252:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20252:81:13"
															},
															"nodeType": "YulIf",
															"src": "20249:107:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20366:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20377:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20380:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20373:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20373:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20366:3:13"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20114:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20117:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20123:3:13",
														"type": ""
													}
												],
												"src": "20083:305:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20439:146:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20449:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20472:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20454:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20454:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20449:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20483:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20506:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20488:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20488:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20483:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20530:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20532:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20532:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20532:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20524:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20527:1:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20521:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20521:8:13"
															},
															"nodeType": "YulIf",
															"src": "20518:34:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20562:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20574:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20577:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20570:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20570:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20562:4:13"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20425:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20428:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20434:4:13",
														"type": ""
													}
												],
												"src": "20394:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20619:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20636:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20639:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20629:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20629:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20629:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20733:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20736:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20726:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20726:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20726:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20757:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20760:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20750:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20750:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20750:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20591:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20820:190:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20830:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20857:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20839:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20839:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20830:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20953:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20955:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20955:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20955:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20878:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20885:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "20875:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20875:77:13"
															},
															"nodeType": "YulIf",
															"src": "20872:103:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20984:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20995:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21002:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20991:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20991:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "20984:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20806:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "20816:3:13",
														"type": ""
													}
												],
												"src": "20777:233:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21090:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21101:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21117:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21111:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21111:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21101:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21073:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21083:6:13",
														"type": ""
													}
												],
												"src": "21016:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21247:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21264:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21269:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21257:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21257:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21257:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21285:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21304:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21309:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21300:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21300:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "21285:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21219:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21224:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "21235:11:13",
														"type": ""
													}
												],
												"src": "21136:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21398:60:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21408:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "21416:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "21408:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21429:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "21441:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21446:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21437:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21437:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "21429:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "21385:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "21393:4:13",
														"type": ""
													}
												],
												"src": "21326:132:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21519:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21536:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21559:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "21541:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21541:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21529:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21529:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21529:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21507:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21514:3:13",
														"type": ""
													}
												],
												"src": "21464:108:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21658:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21702:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21710:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21668:33:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21668:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21668:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21723:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21741:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21746:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21737:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21737:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "21723:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21631:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21639:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "21647:10:13",
														"type": ""
													}
												],
												"src": "21578:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21838:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21848:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "21860:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21865:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21856:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21856:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "21848:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "21825:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "21833:4:13",
														"type": ""
													}
												],
												"src": "21763:113:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22036:608:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22046:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22108:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22060:47:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22060:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22050:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22123:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22204:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22209:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22130:73:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22130:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22123:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22225:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22290:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22240:49:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22240:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "22229:7:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22305:21:13",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "22319:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "22309:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22395:224:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "22409:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "22436:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "22430:5:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22430:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "22413:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "22456:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "22507:13:13"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "22522:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "22463:43:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22463:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "22456:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "22539:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "22602:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "22549:52:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22549:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22539:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22357:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22360:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22354:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22354:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "22368:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "22370:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "22379:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22382:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "22375:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22375:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "22370:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "22339:14:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "22341:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "22350:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "22345:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "22335:284:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22628:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22635:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22628:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22015:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22022:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22031:3:13",
														"type": ""
													}
												],
												"src": "21912:732:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23032:779:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23042:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23054:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23065:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23050:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23050:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23042:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23123:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23136:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23147:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23132:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23132:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23079:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23079:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23079:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23204:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23217:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23228:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23213:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23213:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23160:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23160:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23160:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23253:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23264:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23249:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23249:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23273:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23279:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23269:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23269:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23242:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23242:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23242:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23299:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23401:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23410:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23307:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23307:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23299:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23436:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23447:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23432:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23432:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23456:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23462:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23452:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23452:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23425:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23425:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23425:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23482:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23584:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23593:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23490:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23490:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23482:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23619:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23630:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23615:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23615:19:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23640:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23646:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23636:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23636:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23608:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23608:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23608:49:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23666:138:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23799:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23674:123:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23674:130:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23666:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22980:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22992:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23000:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23008:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23016:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23027:4:13",
														"type": ""
													}
												],
												"src": "22650:1161:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23923:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23945:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23953:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23941:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23941:14:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23957:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23934:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23934:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23934:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24013:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24021:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24009:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24009:15:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24026:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24002:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24002:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24002:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23915:6:13",
														"type": ""
													}
												],
												"src": "23817:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24194:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24204:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24270:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24275:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24211:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24211:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24204:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24376:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "24287:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24287:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24287:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24389:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24400:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24405:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24396:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24396:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24389:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24182:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24190:3:13",
														"type": ""
													}
												],
												"src": "24048:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24591:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24601:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24613:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24624:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24609:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24609:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24601:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24648:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24659:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24644:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24644:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24667:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24673:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24663:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24637:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24637:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24637:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24693:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24827:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24701:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24701:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24693:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24571:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24586:4:13",
														"type": ""
													}
												],
												"src": "24420:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24951:117:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24973:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24981:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24969:14:13"
																	},
																	{
																		"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24985:34:13",
																		"type": "",
																		"value": "ArrayForUint256: index out of bo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24962:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24962:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25041:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25049:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25037:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25037:15:13"
																	},
																	{
																		"hexValue": "756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25054:6:13",
																		"type": "",
																		"value": "unds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25030:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25030:31:13"
														}
													]
												},
												"name": "store_literal_in_memory_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24943:6:13",
														"type": ""
													}
												],
												"src": "24845:223:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25220:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25230:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25296:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25301:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25237:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25237:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25230:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25402:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																	"nodeType": "YulIdentifier",
																	"src": "25313:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25313:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25313:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25415:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25426:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25431:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25422:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25422:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25415:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25208:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25216:3:13",
														"type": ""
													}
												],
												"src": "25074:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25617:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25627:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25639:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25650:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25635:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25635:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25627:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25674:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25685:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25670:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25670:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25693:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25699:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25689:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25689:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25663:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25663:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25663:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25719:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25853:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25727:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25727:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25719:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25597:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25612:4:13",
														"type": ""
													}
												],
												"src": "25446:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25899:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25916:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25919:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25909:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25909:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25909:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26013:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26016:4:13",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26006:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26006:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26006:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26037:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26040:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26030:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26030:15:13"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "25871:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26183:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26193:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26205:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26216:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26201:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26201:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26193:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26273:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26286:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26297:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26282:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26282:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26229:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26229:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26229:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26354:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26367:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26378:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26363:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26363:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26310:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26310:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26310:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26147:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26159:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26167:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26178:4:13",
														"type": ""
													}
												],
												"src": "26057:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26549:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26559:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26571:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26582:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26567:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26567:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26559:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26639:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26652:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26663:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26648:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26648:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26595:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26595:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26595:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26720:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26733:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26744:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26729:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26729:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26676:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26676:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26676:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26802:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26815:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26826:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26811:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26811:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26758:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26758:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26758:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26505:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26517:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26525:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26533:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26544:4:13",
														"type": ""
													}
												],
												"src": "26395:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26891:300:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26901:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26924:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26906:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26906:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26901:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26935:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26958:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "26940:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "26940:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26935:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27133:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27135:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27135:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27135:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "27045:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "27038:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27038:9:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "27031:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27031:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "27053:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27060:66:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "27128:1:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "27056:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27056:74:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "27050:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27050:81:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "27027:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27027:105:13"
															},
															"nodeType": "YulIf",
															"src": "27024:131:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27165:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "27180:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "27183:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "27176:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27176:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "27165:7:13"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26874:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26877:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "26883:7:13",
														"type": ""
													}
												],
												"src": "26843:348:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27237:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27291:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27300:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "27303:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "27293:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27293:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27293:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "27260:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "27282:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "27267:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27267:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "27257:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27257:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "27250:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27250:40:13"
															},
															"nodeType": "YulIf",
															"src": "27247:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27230:5:13",
														"type": ""
													}
												],
												"src": "27197:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27379:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27389:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27404:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27398:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27398:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27389:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27444:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "27420:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27420:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27420:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27357:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27365:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27373:5:13",
														"type": ""
													}
												],
												"src": "27319:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27536:271:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27582:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27584:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27584:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27584:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27557:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27566:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27553:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27553:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27578:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27549:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27549:32:13"
															},
															"nodeType": "YulIf",
															"src": "27546:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "27675:125:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27690:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27704:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27694:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27719:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27762:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27773:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27758:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27758:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27782:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27729:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27729:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27719:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27506:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27517:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27529:6:13",
														"type": ""
													}
												],
												"src": "27462:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27919:123:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27941:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27949:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27937:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27937:14:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27953:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27930:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27930:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27930:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28009:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28017:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28005:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28005:15:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28022:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27998:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "27998:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27998:37:13"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27911:6:13",
														"type": ""
													}
												],
												"src": "27813:229:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28194:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28204:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28270:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28275:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28211:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28211:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28204:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28376:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "28287:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28287:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28287:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28389:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28400:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28405:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28396:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28396:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28389:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28182:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28190:3:13",
														"type": ""
													}
												],
												"src": "28048:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28591:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28601:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28613:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28624:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28609:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28609:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28601:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28648:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28659:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28644:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28644:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28667:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28673:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28663:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28663:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28637:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28637:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28637:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28693:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28827:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28701:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28701:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28693:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28571:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28586:4:13",
														"type": ""
													}
												],
												"src": "28420:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28951:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28973:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28981:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28969:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28969:14:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28985:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28962:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "28962:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28962:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29041:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29049:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29037:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29037:15:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29054:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29030:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29030:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28943:6:13",
														"type": ""
													}
												],
												"src": "28845:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29222:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29232:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29298:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29303:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29239:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29239:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29232:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29404:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "29315:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29315:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29315:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29417:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29428:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29433:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29424:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29424:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29417:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29210:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29218:3:13",
														"type": ""
													}
												],
												"src": "29076:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29619:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29629:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29641:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29652:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29637:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29637:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29629:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29676:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29687:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29672:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29672:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29695:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29701:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29691:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29691:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29665:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29665:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29665:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29721:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29855:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29729:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29729:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29721:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29599:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29614:4:13",
														"type": ""
													}
												],
												"src": "29448:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29979:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30001:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30009:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29997:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29997:14:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30013:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29990:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "29990:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29990:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29971:6:13",
														"type": ""
													}
												],
												"src": "29873:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30204:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30214:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30280:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30285:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30221:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30221:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30214:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30386:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "30297:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30297:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30297:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30399:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30410:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30415:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30406:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30406:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30399:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30200:3:13",
														"type": ""
													}
												],
												"src": "30058:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30601:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30611:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30623:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30619:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30619:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30611:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30658:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30669:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30654:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30654:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30677:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30683:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30673:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30673:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30647:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30647:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30647:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30703:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30837:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30711:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30711:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30703:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30581:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30596:4:13",
														"type": ""
													}
												],
												"src": "30430:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30913:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30924:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30940:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30934:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "30934:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30924:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30896:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30906:6:13",
														"type": ""
													}
												],
												"src": "30855:98:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31072:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31082:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31097:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "31082:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31044:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31049:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "31060:11:13",
														"type": ""
													}
												],
												"src": "30959:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31161:258:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31171:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "31180:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "31175:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31240:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "31265:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "31270:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "31261:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31261:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "31284:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "31289:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "31280:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "31280:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "31274:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31274:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "31254:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31254:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31254:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "31201:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31204:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "31198:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31198:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "31212:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "31214:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "31223:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31226:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "31219:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31219:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "31214:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "31194:3:13",
																"statements": []
															},
															"src": "31190:113:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31337:76:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "31387:3:13"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "31392:6:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "31383:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "31383:16:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31401:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "31376:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31376:27:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31376:27:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "31318:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31321:6:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "31315:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31315:13:13"
															},
															"nodeType": "YulIf",
															"src": "31312:101:13"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "31143:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "31148:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "31153:6:13",
														"type": ""
													}
												],
												"src": "31112:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31533:265:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31543:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31589:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "31557:31:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31557:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31547:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31604:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31687:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31692:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31611:75:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31611:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31604:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31734:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31741:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31730:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31730:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31748:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31753:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "31708:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31708:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31708:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31769:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31780:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31785:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31776:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31776:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31769:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31514:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31521:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31529:3:13",
														"type": ""
													}
												],
												"src": "31425:373:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31938:137:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31949:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32036:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32045:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31956:79:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "31956:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31949:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32059:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "32066:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32059:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31917:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31923:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31934:3:13",
														"type": ""
													}
												],
												"src": "31804:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32140:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32151:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32167:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "32161:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32161:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "32151:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32123:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "32133:6:13",
														"type": ""
													}
												],
												"src": "32081:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32278:272:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "32288:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "32335:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "32302:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32302:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "32292:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "32350:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32416:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32421:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32357:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32357:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32350:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "32463:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32470:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32459:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32459:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32477:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "32482:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "32437:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32437:52:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32437:52:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32498:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32509:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "32536:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "32514:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32514:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32505:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32505:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32498:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "32259:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32266:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32274:3:13",
														"type": ""
													}
												],
												"src": "32186:364:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32674:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32684:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32696:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32707:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32692:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32692:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32684:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32731:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32742:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32727:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32727:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32750:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32756:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32746:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32746:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32720:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32720:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32720:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32776:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32848:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32857:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32784:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "32784:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32776:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32646:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32658:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32669:4:13",
														"type": ""
													}
												],
												"src": "32556:313:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1798_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1798_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1798_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1798__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1798_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"All NFTs farmed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient Points\")\n\n    }\n\n    function abi_encode_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_rational_1_by_1_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_rational_1_by_1__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945(memPtr) {\n\n        mstore(add(memPtr, 0), \"ArrayForUint256: index out of bo\")\n\n        mstore(add(memPtr, 32), \"unds\")\n\n    }\n\n    function abi_encode_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC6C9BD47 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC6C9BD47 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0xE75235B8 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xE9FAD8EE EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x37E JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0xA87430BA EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2C6 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x4B02218F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x55AC2FD3 EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x5FCBD285 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x63C66891 EQ PUSH2 0x234 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0xAF2C6CA EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x25CA4CFF EQ PUSH2 0x190 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x421 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B7 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST PUSH2 0x802 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0xA1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x18B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH2 0xA60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH2 0xB5D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH2 0xBE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1AC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH2 0xD62 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x310 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30B SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32E PUSH2 0xD9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34C PUSH2 0xDA5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x368 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x363 SWAP2 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST PUSH2 0xDF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1CAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x398 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x177F JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x40D JUMPI POP PUSH2 0x40C DUP3 PUSH2 0xEFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP GT PUSH2 0x469 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x460 SWAP1 PUSH2 0x1DB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x475 CALLER PUSH2 0x60C JUMP JUMPDEST LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AD SWAP1 PUSH2 0x1E25 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x516 PUSH1 0x6 SLOAD PUSH2 0x508 CALLER PUSH2 0x60C JUMP JUMPDEST PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x534 PUSH1 0x2 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x543 PUSH1 0x2 DUP3 PUSH2 0x1017 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS CALLER DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1EB7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x59D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP4 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0x1F0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH2 0x698 PUSH2 0x685 DUP3 PUSH2 0x10FF JUMP JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x113A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x72A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x721 SWAP1 PUSH2 0x1F84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x733 CALLER PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x752 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x7B0 CALLER DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1150 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7F6 SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x80A PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x828 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x87E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x875 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89A JUMPI PUSH2 0x899 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8E7 JUMPI PUSH2 0x8E6 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x915 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP5 SWAP1 POP JUMPDEST DUP5 DUP5 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x99B JUMPI DUP1 DUP4 DUP7 DUP4 PUSH2 0x93F SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 DUP3 DUP7 DUP4 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x993 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x91E JUMP JUMPDEST POP PUSH2 0x9A7 PUSH1 0x2 DUP4 PUSH2 0x11DE JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2EB2C2D6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA2E PUSH1 0x2 PUSH2 0xF7E JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xA68 PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA86 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD3 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE7 PUSH1 0x2 DUP4 PUSH2 0x11DE JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2EB2C2D6 CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB26 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21FE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB54 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB65 PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB83 PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD0 SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBE3 PUSH1 0x0 PUSH2 0x124E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5D CALLER ADDRESS DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1312 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xCBE JUMPI PUSH2 0xCB5 CALLER PUSH2 0x60C JUMP JUMPDEST DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0xCD5 DUP3 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x113A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD2C SWAP2 SWAP1 PUSH2 0x1706 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDF0 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x6A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE0F PUSH2 0x11D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE2D PUSH2 0xBE5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE83 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7A SWAP1 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x22D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEFB DUP2 PUSH2 0x124E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 DUP2 SLOAD DUP2 LT PUSH2 0xF95 JUMPI PUSH2 0xF94 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1011 JUMPI DUP3 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFC9 JUMPI PUSH2 0xFC8 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD LT ISZERO PUSH2 0xFFE JUMPI DUP4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFED JUMPI PUSH2 0xFEC PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP3 POP DUP1 SWAP2 POP JUMPDEST DUP1 DUP1 PUSH2 0x1009 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFA9 JUMP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x105D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1054 SWAP1 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x1 DUP3 DUP1 SLOAD SWAP1 POP PUSH2 0x106F SWAP2 SWAP1 PUSH2 0x2095 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x10D4 JUMPI DUP2 PUSH1 0x1 DUP3 PUSH2 0x1084 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1095 JUMPI PUSH2 0x1094 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B3 JUMPI PUSH2 0x10B2 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP1 PUSH2 0x10CC SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x105E JUMP JUMPDEST DUP2 DUP1 SLOAD DUP1 PUSH2 0x10E5 JUMPI PUSH2 0x10E4 PUSH2 0x2388 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 TIMESTAMP SWAP1 POP PUSH2 0x1132 DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0x1124 DUP6 PUSH1 0x20 ADD MLOAD DUP5 PUSH2 0xF68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x139B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x203F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11D1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x116F SWAP3 SWAP2 SWAP1 PUSH2 0x23B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD EQ PUSH2 0x124A JUMPI PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1248 JUMPI DUP3 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x20C9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 DUP1 PUSH2 0x1240 SWAP1 PUSH2 0x20F8 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EA JUMP JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1395 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1333 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x13B1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x13A9 SWAP2 SWAP1 PUSH2 0x2417 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1413 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1478 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1473 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1433 SWAP2 SWAP1 PUSH2 0x249D JUMP JUMPDEST PUSH2 0x1472 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1469 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1487 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x1490 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x14D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14CC SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14DE DUP6 PUSH2 0x15A4 JUMP JUMPDEST PUSH2 0x151D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1514 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1546 SWAP2 SWAP1 PUSH2 0x26D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1588 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1598 DUP3 DUP3 DUP7 PUSH2 0x15B7 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x15C7 JUMPI DUP3 SWAP1 POP PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x15DA JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x272F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1667 DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP2 EQ PUSH2 0x1672 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1684 DUP2 PUSH2 0x165E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A0 JUMPI PUSH2 0x169F PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16AE DUP5 DUP3 DUP6 ADD PUSH2 0x1675 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1700 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x171B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x174C DUP3 PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x175C DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP2 EQ PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1779 DUP2 PUSH2 0x1753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1795 JUMPI PUSH2 0x1794 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17A3 DUP5 DUP3 DUP6 ADD PUSH2 0x176A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17B5 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x17D2 DUP2 PUSH2 0x17AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17EE JUMPI PUSH2 0x17ED PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17FC DUP5 DUP3 DUP6 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH2 0x181D PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP7 DUP3 DUP8 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x183D DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x184E DUP7 DUP3 DUP8 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x187D PUSH2 0x1878 PUSH2 0x1873 DUP5 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x1721 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188F DUP3 PUSH2 0x1862 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A1 DUP3 PUSH2 0x1884 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18B1 DUP2 PUSH2 0x1896 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x18A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1920 DUP3 PUSH2 0x18D7 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x193F JUMPI PUSH2 0x193E PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1952 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH2 0x195E DUP3 DUP3 PUSH2 0x1917 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x197E JUMPI PUSH2 0x197D PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x19A7 PUSH2 0x19A2 DUP5 PUSH2 0x1963 JUMP JUMPDEST PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x19CA JUMPI PUSH2 0x19C9 PUSH2 0x198F JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19F3 JUMPI DUP1 PUSH2 0x19DF DUP9 DUP3 PUSH2 0x17C3 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19CC JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A22 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1994 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A44 JUMPI PUSH2 0x1A43 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A52 DUP7 DUP3 DUP8 ADD PUSH2 0x176A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A73 JUMPI PUSH2 0x1A72 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1A7F DUP7 DUP3 DUP8 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AA0 JUMPI PUSH2 0x1A9F PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1AAC DUP7 DUP3 DUP8 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1741 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ADA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AF5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1B02 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1B0F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B37 JUMPI PUSH2 0x1B36 PUSH2 0x18E8 JUMP JUMPDEST JUMPDEST PUSH2 0x1B40 DUP3 PUSH2 0x18D7 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6F PUSH2 0x1B6A DUP5 PUSH2 0x1B1C JUMP JUMPDEST PUSH2 0x1948 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1B8B JUMPI PUSH2 0x1B8A PUSH2 0x1B17 JUMP JUMPDEST JUMPDEST PUSH2 0x1B96 DUP5 DUP3 DUP6 PUSH2 0x1B4D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1BB3 JUMPI PUSH2 0x1BB2 PUSH2 0x18D2 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BC3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1B5C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1BE8 JUMPI PUSH2 0x1BE7 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1BF6 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C07 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C28 JUMPI PUSH2 0x1C27 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C34 DUP9 DUP3 DUP10 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C55 JUMPI PUSH2 0x1C54 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C61 DUP9 DUP3 DUP10 ADD PUSH2 0x19FD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C82 JUMPI PUSH2 0x1C81 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1C8E DUP9 DUP3 DUP10 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x1CA4 DUP2 PUSH2 0x1632 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1CE1 JUMPI PUSH2 0x1CE0 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CEF DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1D00 DUP9 DUP3 DUP10 ADD PUSH2 0x176A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1D11 DUP9 DUP3 DUP10 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x1D22 DUP9 DUP3 DUP10 ADD PUSH2 0x17C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D43 JUMPI PUSH2 0x1D42 PUSH2 0x162D JUMP JUMPDEST JUMPDEST PUSH2 0x1D4F DUP9 DUP3 DUP10 ADD PUSH2 0x1B9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C204E465473206661726D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA3 PUSH1 0xF DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAE DUP3 PUSH2 0x1D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD2 DUP2 PUSH2 0x1D96 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420506F696E747300000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E0F PUSH1 0x13 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1A DUP3 PUSH2 0x1DD9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E3E DUP2 PUSH2 0x1E02 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH2 0x1E65 PUSH2 0x1E60 DUP5 PUSH2 0x1E45 JUMP JUMPDEST PUSH2 0x1858 JUMP JUMPDEST PUSH2 0x16ED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7A DUP2 PUSH2 0x1E4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA1 PUSH1 0x0 DUP4 PUSH2 0x1E80 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAC DUP3 PUSH2 0x1E91 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1ECC PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1ED9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x1EE6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1EF3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1E71 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x1F04 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F24 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x16F7 JUMP JUMPDEST PUSH2 0x1F31 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B656400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6E PUSH1 0x13 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F79 DUP3 PUSH2 0x1F38 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F9D DUP2 PUSH2 0x1F61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDA PUSH1 0x20 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE5 DUP3 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2009 DUP2 PUSH2 0x1FCD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x204A DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2055 DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x208A JUMPI PUSH2 0x2089 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20A0 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x20BE JUMPI PUSH2 0x20BD PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2103 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2135 JUMPI PUSH2 0x2134 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2175 DUP2 PUSH2 0x16ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2187 DUP4 DUP4 PUSH2 0x216C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21AB DUP3 PUSH2 0x2140 JUMP JUMPDEST PUSH2 0x21B5 DUP2 DUP6 PUSH2 0x214B JUMP JUMPDEST SWAP4 POP PUSH2 0x21C0 DUP4 PUSH2 0x215C JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21F1 JUMPI DUP2 MLOAD PUSH2 0x21D8 DUP9 DUP3 PUSH2 0x217B JUMP JUMPDEST SWAP8 POP PUSH2 0x21E3 DUP4 PUSH2 0x2193 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x21C4 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2213 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x2220 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2232 DUP2 DUP6 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2246 DUP2 DUP5 PUSH2 0x21A0 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 PUSH2 0x1E94 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C0 PUSH1 0x26 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x22CB DUP3 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EF DUP2 PUSH2 0x22B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4172726179466F7255696E743235363A20696E646578206F7574206F6620626F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x756E647300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2352 PUSH1 0x24 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x235D DUP3 PUSH2 0x22F6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2381 DUP2 PUSH2 0x2345 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x23CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x23D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x2402 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x240F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x16F7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2422 DUP3 PUSH2 0x16ED JUMP JUMPDEST SWAP2 POP PUSH2 0x242D DUP4 PUSH2 0x16ED JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2466 JUMPI PUSH2 0x2465 PUSH2 0x2010 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247A DUP2 PUSH2 0x16B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x2485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2497 DUP2 PUSH2 0x2471 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24B3 JUMPI PUSH2 0x24B2 PUSH2 0x1628 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x24C1 DUP5 DUP3 DUP6 ADD PUSH2 0x2488 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x2A DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x26 DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x1D DUP4 PUSH2 0x1D5C JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x268E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2673 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x269D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x265A JUMP JUMPDEST PUSH2 0x26B8 DUP2 DUP6 PUSH2 0x2665 JUMP JUMPDEST SWAP4 POP PUSH2 0x26C8 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E0 DUP3 DUP5 PUSH2 0x26A3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2701 DUP3 PUSH2 0x26EB JUMP JUMPDEST PUSH2 0x270B DUP2 DUP6 PUSH2 0x1D5C JUMP JUMPDEST SWAP4 POP PUSH2 0x271B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2670 JUMP JUMPDEST PUSH2 0x2724 DUP2 PUSH2 0x18D7 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2749 DUP2 DUP5 PUSH2 0x26F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F SMOD AND 0x25 0xF7 MSIZE 0x2B LOG1 0xB9 DUP3 LT 0xBE MSIZE PUSH9 0x7DAFFD5848EE6CD46F 0x25 SWAP6 CALLCODE DELEGATECALL 0xD9 0x26 CALLER 0x2F 0xBC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "6648:5001:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:223:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11267:89:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9426:812;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10853:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10256:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8264:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11364:179;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7300:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7938:318;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1721:103:1;;;:::i;:::-;;1070:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8850:518:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7398:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;498:255:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7368:23:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11551:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10763:78;;;:::i;:::-;;263:227:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1979:201:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;402:223:5;504:4;543:34;528:49;;;:11;:49;;;;:89;;;;581:36;605:11;581:23;:36::i;:::-;528:89;521:96;;402:223;;;:::o;11267:89:0:-;11308:7;11335:6;:13;;;;11328:20;;11267:89;:::o;9426:812::-;9511:1;9495:6;:13;;;;:17;9487:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;9580:9;;9551:25;9565:10;9551:13;:25::i;:::-;:38;;9543:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;9624:21;9648:5;:17;9654:10;9648:17;;;;;;;;;;;;;;;9624:41;;9730:40;9760:9;;9730:25;9744:10;9730:13;:25::i;:::-;:29;;:40;;;;:::i;:::-;9712:4;:15;;:58;;;;9803:15;9781:4;:19;;:37;;;;9840:18;9860:13;9877:35;9905:6;9877:27;:35::i;:::-;9839:73;;;;9923:52;9961:6;9969:5;9923:37;:52::i;:::-;10022:18;10013:45;;;10081:4;10101:10;10126;10151:1;10013:167;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10204:10;10198:32;;;10216:10;10228:1;10198:32;;;;;;;:::i;:::-;;;;;;;;9476:762;;;9426:812;:::o;10853:187::-;10914:7;10934:20;10957:5;:14;10963:7;10957:14;;;;;;;;;;;;;;;10934:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10989:43;11009:22;11026:4;11009:16;:22::i;:::-;10989:4;:15;;;:19;;:43;;;;:::i;:::-;10982:50;;;10853:187;;;:::o;10256:495::-;10308:21;10332:5;:17;10338:10;10332:17;;;;;;;;;;;;;;;10308:41;;10383:6;10368:4;:11;;;:21;;10360:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;10477:25;10491:10;10477:13;:25::i;:::-;10459:4;:15;;:43;;;;10527:23;10543:6;10527:4;:11;;;:15;;:23;;;;:::i;:::-;10513:4;:11;;:37;;;;10583:15;10561:4;:19;;:37;;;;10619:77;10654:10;10679:6;10619:7;;;;;;;;;;;:20;;;;:77;;;;;:::i;:::-;10724:10;10714:29;;;10736:6;10714:29;;;;;;:::i;:::-;;;;;;;;10297:454;10256:495;:::o;8264:578::-;1301:12:1;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8419:20:0::1;8456:9;8442:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8419:47;;8477:24;8518:9;8504:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8477:51;;8544:9;8556:5;8544:17;;8539:132;8580:5;8568:9;:17;;;;:::i;:::-;8563:1;:23;8539:132;;;8623:1;8608:3;8614:5;8612:1;:7;;;;:::i;:::-;8608:12;;;;;;;;:::i;:::-;;;;;;;:16;;;::::0;::::1;8658:1;8639:7;8649:5;8647:1;:7;;;;:::i;:::-;8639:16;;;;;;;;:::i;:::-;;;;;;;:20;;;::::0;::::1;8588:3;;;;;:::i;:::-;;;;8539:132;;;;8683:43;8714:6;8722:3;8683:30;:43::i;:::-;8748:18;8739:50;;;8790:10;8810:4;8817:3;8822:7;8739:95;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8408:434;;8264:578:::0;;;:::o;11364:179::-;11414:7;11435:18;11455:13;11472:35;11500:6;11472:27;:35::i;:::-;11434:73;;;;11525:10;11518:17;;;;11364:179;:::o;7300:21::-;;;;;;;;;;;;;:::o;7938:318::-;1301:12:1;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8099:43:0::1;8130:6;8138:3;8099:30;:43::i;:::-;8162:18;8153:50;;;8204:10;8224:4;8231:3;8236:7;8153:95;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;7938:318:::0;;;:::o;1721:103:1:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1786:30:::1;1813:1;1786:18;:30::i;:::-;1721:103::o:0;1070:87::-;1116:7;1143:6;;;;;;;;;;;1136:13;;1070:87;:::o;8850:518:0:-;8901:109;8940:10;8973:4;8993:6;8901:7;;;;;;;;;;;:24;;;;:109;;;;;;:::i;:::-;9031:21;9055:5;:17;9061:10;9055:17;;;;;;;;;;;;;;;9031:41;;9148:1;9133:4;:11;;;:16;9130:91;;9184:25;9198:10;9184:13;:25::i;:::-;9166:4;:15;;:43;;;;9130:91;9245:23;9261:6;9245:4;:11;;;:15;;:23;;;;:::i;:::-;9231:4;:11;;:37;;;;9301:15;9279:4;:19;;:37;;;;9341:10;9334:26;;;9353:6;9334:26;;;;;;:::i;:::-;;;;;;;;8890:478;8850:518;:::o;7398:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;498:255:4:-;683:6;709:36;;;702:43;;498:255;;;;;;;:::o;7368:23:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11551:89::-;11596:7;11623:9;;11616:16;;11551:89;:::o;10763:78::-;10799:34;10808:5;:17;10814:10;10808:17;;;;;;;;;;;;;;;:24;;;10799:8;:34::i;:::-;10763:78::o;263:227:4:-;425:6;451:31;;;444:38;;263:227;;;;;;;:::o;1979:201:1:-;1301:12;:10;:12::i;:::-;1290:23;;:7;:5;:7::i;:::-;:23;;;1282:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2088:1:::1;2068:22;;:8;:22;;::::0;2060:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2144:28;2163:8;2144:18;:28::i;:::-;1979:201:::0;:::o;854:157:10:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;3214:98:12:-;3272:7;3303:1;3299;:5;;;;:::i;:::-;3292:12;;3214:98;;;;:::o;6298:341:0:-;6359:16;6377;6417:5;6423:1;6417:8;;;;;;;;:::i;:::-;;;;;;;;;;6406:19;;6447:1;6436:12;;6463:9;6459:173;6481:5;:12;;;;6477:1;:16;6459:173;;;6527:8;6516:5;6522:1;6516:8;;;;;;;;:::i;:::-;;;;;;;;;;:19;6513:108;;;6566:5;6572:1;6566:8;;;;;;;;:::i;:::-;;;;;;;;;;6555:19;;6604:1;6593:12;;6513:108;6494:3;;;;;:::i;:::-;;;;6459:173;;;;6298:341;;;:::o;4212:300::-;4304:5;:12;;;;4296:5;:20;4288:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4370:113;4400:1;4385:5;:12;;;;:16;;;;:::i;:::-;4377:5;:24;4370:113;;;4433:5;4447:1;4439:5;:9;;;;:::i;:::-;4433:16;;;;;;;;:::i;:::-;;;;;;;;;;4418:5;4424;4418:12;;;;;;;;:::i;:::-;;;;;;;;;:31;;;;4464:7;;;;;:::i;:::-;;;;4370:113;;;4493:5;:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4212:300;;:::o;11052:203::-;11123:7;11143:17;11163:15;11143:35;;11196:51;11235:4;:11;;;11196:34;11210:4;:19;;;11196:9;:13;;:34;;;;:::i;:::-;:38;;:51;;;;:::i;:::-;11189:58;;;11052:203;;;:::o;2833:98:12:-;2891:7;2922:1;2918;:5;;;;:::i;:::-;2911:12;;2833:98;;;;:::o;721:211:7:-;838:86;858:5;888:23;;;913:2;917:5;865:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:19;:86::i;:::-;721:211;;;:::o;656:98:9:-;709:7;736:10;729:17;;656:98;:::o;5008:181:0:-;5097:1;5085;:8;:13;5082:100;;5112:6;5108:66;5128:1;:8;5124:1;:12;5108:66;;;5152:1;5159;5161;5159:4;;;;;;;;:::i;:::-;;;;;;;;5152:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5138:3;;;;;:::i;:::-;;;;5108:66;;;;5082:100;5008:181;;:::o;2340:191:1:-;2414:16;2433:6;;;;;;;;;;;2414:25;;2459:8;2450:6;;:17;;;;;;;;;;;;;;;;;;2514:8;2483:40;;2504:8;2483:40;;;;;;;;;;;;2403:128;2340:191;:::o;940:248:7:-;1084:96;1104:5;1134:27;;;1163:4;1169:2;1173:5;1111:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:19;:96::i;:::-;940:248;;;;:::o;3571:98:12:-;3629:7;3660:1;3656;:5;;;;:::i;:::-;3649:12;;3571:98;;;;:::o;3294:716:7:-;3718:23;3744:69;3772:4;3744:69;;;;;;;;;;;;;;;;;3752:5;3744:27;;;;:69;;;;;:::i;:::-;3718:95;;3848:1;3828:10;:17;:21;3824:179;;;3925:10;3914:30;;;;;;;;;;;;:::i;:::-;3906:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;3824:179;3364:646;3294:716;;:::o;3603:229:8:-;3740:12;3772:52;3794:6;3802:4;3808:1;3811:12;3772:21;:52::i;:::-;3765:59;;3603:229;;;;;:::o;4723:510::-;4893:12;4951:5;4926:21;:30;;4918:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5018:18;5029:6;5018:10;:18::i;:::-;5010:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;5084:12;5098:23;5125:6;:11;;5144:5;5151:4;5125:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5083:73;;;;5174:51;5191:7;5200:10;5212:12;5174:16;:51::i;:::-;5167:58;;;;4723:510;;;;;;:::o;797:387::-;857:4;1065:12;1132:7;1120:20;1112:28;;1175:1;1168:4;:8;1161:15;;;797:387;;;:::o;7409:712::-;7559:12;7588:7;7584:530;;;7619:10;7612:17;;;;7584:530;7753:1;7733:10;:17;:21;7729:374;;;7931:10;7925:17;7992:15;7979:10;7975:2;7971:19;7964:44;7729:374;8074:12;8067:20;;;;;;;;;;;:::i;:::-;;;;;;;;7409:712;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:118::-;1688:24;1706:5;1688:24;:::i;:::-;1683:3;1676:37;1601:118;;:::o;1725:222::-;1818:4;1856:2;1845:9;1841:18;1833:26;;1869:71;1937:1;1926:9;1922:17;1913:6;1869:71;:::i;:::-;1725:222;;;;:::o;1953:126::-;1990:7;2030:42;2023:5;2019:54;2008:65;;1953:126;;;:::o;2085:96::-;2122:7;2151:24;2169:5;2151:24;:::i;:::-;2140:35;;2085:96;;;:::o;2187:122::-;2260:24;2278:5;2260:24;:::i;:::-;2253:5;2250:35;2240:63;;2299:1;2296;2289:12;2240:63;2187:122;:::o;2315:139::-;2361:5;2399:6;2386:20;2377:29;;2415:33;2442:5;2415:33;:::i;:::-;2315:139;;;;:::o;2460:329::-;2519:6;2568:2;2556:9;2547:7;2543:23;2539:32;2536:119;;;2574:79;;:::i;:::-;2536:119;2694:1;2719:53;2764:7;2755:6;2744:9;2740:22;2719:53;:::i;:::-;2709:63;;2665:117;2460:329;;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:329::-;3127:6;3176:2;3164:9;3155:7;3151:23;3147:32;3144:119;;;3182:79;;:::i;:::-;3144:119;3302:1;3327:53;3372:7;3363:6;3352:9;3348:22;3327:53;:::i;:::-;3317:63;;3273:117;3068:329;;;;:::o;3403:619::-;3480:6;3488;3496;3545:2;3533:9;3524:7;3520:23;3516:32;3513:119;;;3551:79;;:::i;:::-;3513:119;3671:1;3696:53;3741:7;3732:6;3721:9;3717:22;3696:53;:::i;:::-;3686:63;;3642:117;3798:2;3824:53;3869:7;3860:6;3849:9;3845:22;3824:53;:::i;:::-;3814:63;;3769:118;3926:2;3952:53;3997:7;3988:6;3977:9;3973:22;3952:53;:::i;:::-;3942:63;;3897:118;3403:619;;;;;:::o;4028:60::-;4056:3;4077:5;4070:12;;4028:60;;;:::o;4094:142::-;4144:9;4177:53;4195:34;4204:24;4222:5;4204:24;:::i;:::-;4195:34;:::i;:::-;4177:53;:::i;:::-;4164:66;;4094:142;;;:::o;4242:126::-;4292:9;4325:37;4356:5;4325:37;:::i;:::-;4312:50;;4242:126;;;:::o;4374:141::-;4439:9;4472:37;4503:5;4472:37;:::i;:::-;4459:50;;4374:141;;;:::o;4521:161::-;4623:52;4669:5;4623:52;:::i;:::-;4618:3;4611:65;4521:161;;:::o;4688:252::-;4796:4;4834:2;4823:9;4819:18;4811:26;;4847:86;4930:1;4919:9;4915:17;4906:6;4847:86;:::i;:::-;4688:252;;;;:::o;4946:117::-;5055:1;5052;5045:12;5069:102;5110:6;5161:2;5157:7;5152:2;5145:5;5141:14;5137:28;5127:38;;5069:102;;;:::o;5177:180::-;5225:77;5222:1;5215:88;5322:4;5319:1;5312:15;5346:4;5343:1;5336:15;5363:281;5446:27;5468:4;5446:27;:::i;:::-;5438:6;5434:40;5576:6;5564:10;5561:22;5540:18;5528:10;5525:34;5522:62;5519:88;;;5587:18;;:::i;:::-;5519:88;5627:10;5623:2;5616:22;5406:238;5363:281;;:::o;5650:129::-;5684:6;5711:20;;:::i;:::-;5701:30;;5740:33;5768:4;5760:6;5740:33;:::i;:::-;5650:129;;;:::o;5785:311::-;5862:4;5952:18;5944:6;5941:30;5938:56;;;5974:18;;:::i;:::-;5938:56;6024:4;6016:6;6012:17;6004:25;;6084:4;6078;6074:15;6066:23;;5785:311;;;:::o;6102:117::-;6211:1;6208;6201:12;6242:710;6338:5;6363:81;6379:64;6436:6;6379:64;:::i;:::-;6363:81;:::i;:::-;6354:90;;6464:5;6493:6;6486:5;6479:21;6527:4;6520:5;6516:16;6509:23;;6580:4;6572:6;6568:17;6560:6;6556:30;6609:3;6601:6;6598:15;6595:122;;;6628:79;;:::i;:::-;6595:122;6743:6;6726:220;6760:6;6755:3;6752:15;6726:220;;;6835:3;6864:37;6897:3;6885:10;6864:37;:::i;:::-;6859:3;6852:50;6931:4;6926:3;6922:14;6915:21;;6802:144;6786:4;6781:3;6777:14;6770:21;;6726:220;;;6730:21;6344:608;;6242:710;;;;;:::o;6975:370::-;7046:5;7095:3;7088:4;7080:6;7076:17;7072:27;7062:122;;7103:79;;:::i;:::-;7062:122;7220:6;7207:20;7245:94;7335:3;7327:6;7320:4;7312:6;7308:17;7245:94;:::i;:::-;7236:103;;7052:293;6975:370;;;;:::o;7351:1039::-;7478:6;7486;7494;7543:2;7531:9;7522:7;7518:23;7514:32;7511:119;;;7549:79;;:::i;:::-;7511:119;7669:1;7694:53;7739:7;7730:6;7719:9;7715:22;7694:53;:::i;:::-;7684:63;;7640:117;7824:2;7813:9;7809:18;7796:32;7855:18;7847:6;7844:30;7841:117;;;7877:79;;:::i;:::-;7841:117;7982:78;8052:7;8043:6;8032:9;8028:22;7982:78;:::i;:::-;7972:88;;7767:303;8137:2;8126:9;8122:18;8109:32;8168:18;8160:6;8157:30;8154:117;;;8190:79;;:::i;:::-;8154:117;8295:78;8365:7;8356:6;8345:9;8341:22;8295:78;:::i;:::-;8285:88;;8080:303;7351:1039;;;;;:::o;8396:118::-;8483:24;8501:5;8483:24;:::i;:::-;8478:3;8471:37;8396:118;;:::o;8520:222::-;8613:4;8651:2;8640:9;8636:18;8628:26;;8664:71;8732:1;8721:9;8717:17;8708:6;8664:71;:::i;:::-;8520:222;;;;:::o;8748:442::-;8897:4;8935:2;8924:9;8920:18;8912:26;;8948:71;9016:1;9005:9;9001:17;8992:6;8948:71;:::i;:::-;9029:72;9097:2;9086:9;9082:18;9073:6;9029:72;:::i;:::-;9111;9179:2;9168:9;9164:18;9155:6;9111:72;:::i;:::-;8748:442;;;;;;:::o;9196:117::-;9305:1;9302;9295:12;9319:307;9380:4;9470:18;9462:6;9459:30;9456:56;;;9492:18;;:::i;:::-;9456:56;9530:29;9552:6;9530:29;:::i;:::-;9522:37;;9614:4;9608;9604:15;9596:23;;9319:307;;;:::o;9632:154::-;9716:6;9711:3;9706;9693:30;9778:1;9769:6;9764:3;9760:16;9753:27;9632:154;;;:::o;9792:410::-;9869:5;9894:65;9910:48;9951:6;9910:48;:::i;:::-;9894:65;:::i;:::-;9885:74;;9982:6;9975:5;9968:21;10020:4;10013:5;10009:16;10058:3;10049:6;10044:3;10040:16;10037:25;10034:112;;;10065:79;;:::i;:::-;10034:112;10155:41;10189:6;10184:3;10179;10155:41;:::i;:::-;9875:327;9792:410;;;;;:::o;10221:338::-;10276:5;10325:3;10318:4;10310:6;10306:17;10302:27;10292:122;;10333:79;;:::i;:::-;10292:122;10450:6;10437:20;10475:78;10549:3;10541:6;10534:4;10526:6;10522:17;10475:78;:::i;:::-;10466:87;;10282:277;10221:338;;;;:::o;10565:1509::-;10719:6;10727;10735;10743;10751;10800:3;10788:9;10779:7;10775:23;10771:33;10768:120;;;10807:79;;:::i;:::-;10768:120;10927:1;10952:53;10997:7;10988:6;10977:9;10973:22;10952:53;:::i;:::-;10942:63;;10898:117;11054:2;11080:53;11125:7;11116:6;11105:9;11101:22;11080:53;:::i;:::-;11070:63;;11025:118;11210:2;11199:9;11195:18;11182:32;11241:18;11233:6;11230:30;11227:117;;;11263:79;;:::i;:::-;11227:117;11368:78;11438:7;11429:6;11418:9;11414:22;11368:78;:::i;:::-;11358:88;;11153:303;11523:2;11512:9;11508:18;11495:32;11554:18;11546:6;11543:30;11540:117;;;11576:79;;:::i;:::-;11540:117;11681:78;11751:7;11742:6;11731:9;11727:22;11681:78;:::i;:::-;11671:88;;11466:303;11836:3;11825:9;11821:19;11808:33;11868:18;11860:6;11857:30;11854:117;;;11890:79;;:::i;:::-;11854:117;11995:62;12049:7;12040:6;12029:9;12025:22;11995:62;:::i;:::-;11985:72;;11779:288;10565:1509;;;;;;;;:::o;12080:115::-;12165:23;12182:5;12165:23;:::i;:::-;12160:3;12153:36;12080:115;;:::o;12201:218::-;12292:4;12330:2;12319:9;12315:18;12307:26;;12343:69;12409:1;12398:9;12394:17;12385:6;12343:69;:::i;:::-;12201:218;;;;:::o;12425:1089::-;12529:6;12537;12545;12553;12561;12610:3;12598:9;12589:7;12585:23;12581:33;12578:120;;;12617:79;;:::i;:::-;12578:120;12737:1;12762:53;12807:7;12798:6;12787:9;12783:22;12762:53;:::i;:::-;12752:63;;12708:117;12864:2;12890:53;12935:7;12926:6;12915:9;12911:22;12890:53;:::i;:::-;12880:63;;12835:118;12992:2;13018:53;13063:7;13054:6;13043:9;13039:22;13018:53;:::i;:::-;13008:63;;12963:118;13120:2;13146:53;13191:7;13182:6;13171:9;13167:22;13146:53;:::i;:::-;13136:63;;13091:118;13276:3;13265:9;13261:19;13248:33;13308:18;13300:6;13297:30;13294:117;;;13330:79;;:::i;:::-;13294:117;13435:62;13489:7;13480:6;13469:9;13465:22;13435:62;:::i;:::-;13425:72;;13219:288;12425:1089;;;;;;;;:::o;13520:169::-;13604:11;13638:6;13633:3;13626:19;13678:4;13673:3;13669:14;13654:29;;13520:169;;;;:::o;13695:165::-;13835:17;13831:1;13823:6;13819:14;13812:41;13695:165;:::o;13866:366::-;14008:3;14029:67;14093:2;14088:3;14029:67;:::i;:::-;14022:74;;14105:93;14194:3;14105:93;:::i;:::-;14223:2;14218:3;14214:12;14207:19;;13866:366;;;:::o;14238:419::-;14404:4;14442:2;14431:9;14427:18;14419:26;;14491:9;14485:4;14481:20;14477:1;14466:9;14462:17;14455:47;14519:131;14645:4;14519:131;:::i;:::-;14511:139;;14238:419;;;:::o;14663:169::-;14803:21;14799:1;14791:6;14787:14;14780:45;14663:169;:::o;14838:366::-;14980:3;15001:67;15065:2;15060:3;15001:67;:::i;:::-;14994:74;;15077:93;15166:3;15077:93;:::i;:::-;15195:2;15190:3;15186:12;15179:19;;14838:366;;;:::o;15210:419::-;15376:4;15414:2;15403:9;15399:18;15391:26;;15463:9;15457:4;15453:20;15449:1;15438:9;15434:17;15427:47;15491:131;15617:4;15491:131;:::i;:::-;15483:139;;15210:419;;;:::o;15635:85::-;15680:7;15709:5;15698:16;;15635:85;;;:::o;15726:158::-;15784:9;15817:61;15835:42;15844:32;15870:5;15844:32;:::i;:::-;15835:42;:::i;:::-;15817:61;:::i;:::-;15804:74;;15726:158;;;:::o;15890:147::-;15985:45;16024:5;15985:45;:::i;:::-;15980:3;15973:58;15890:147;;:::o;16043:168::-;16126:11;16160:6;16155:3;16148:19;16200:4;16195:3;16191:14;16176:29;;16043:168;;;;:::o;16217:114::-;;:::o;16337:362::-;16478:3;16499:65;16562:1;16557:3;16499:65;:::i;:::-;16492:72;;16573:93;16662:3;16573:93;:::i;:::-;16691:1;16686:3;16682:11;16675:18;;16337:362;;;:::o;16705:875::-;16990:4;17028:3;17017:9;17013:19;17005:27;;17042:71;17110:1;17099:9;17095:17;17086:6;17042:71;:::i;:::-;17123:72;17191:2;17180:9;17176:18;17167:6;17123:72;:::i;:::-;17205;17273:2;17262:9;17258:18;17249:6;17205:72;:::i;:::-;17287:80;17363:2;17352:9;17348:18;17339:6;17287:80;:::i;:::-;17415:9;17409:4;17405:20;17399:3;17388:9;17384:19;17377:49;17443:130;17568:4;17443:130;:::i;:::-;17435:138;;16705:875;;;;;;;:::o;17586:348::-;17715:4;17753:2;17742:9;17738:18;17730:26;;17766:71;17834:1;17823:9;17819:17;17810:6;17766:71;:::i;:::-;17847:80;17923:2;17912:9;17908:18;17899:6;17847:80;:::i;:::-;17586:348;;;;;:::o;17940:169::-;18080:21;18076:1;18068:6;18064:14;18057:45;17940:169;:::o;18115:366::-;18257:3;18278:67;18342:2;18337:3;18278:67;:::i;:::-;18271:74;;18354:93;18443:3;18354:93;:::i;:::-;18472:2;18467:3;18463:12;18456:19;;18115:366;;;:::o;18487:419::-;18653:4;18691:2;18680:9;18676:18;18668:26;;18740:9;18734:4;18730:20;18726:1;18715:9;18711:17;18704:47;18768:131;18894:4;18768:131;:::i;:::-;18760:139;;18487:419;;;:::o;18912:182::-;19052:34;19048:1;19040:6;19036:14;19029:58;18912:182;:::o;19100:366::-;19242:3;19263:67;19327:2;19322:3;19263:67;:::i;:::-;19256:74;;19339:93;19428:3;19339:93;:::i;:::-;19457:2;19452:3;19448:12;19441:19;;19100:366;;;:::o;19472:419::-;19638:4;19676:2;19665:9;19661:18;19653:26;;19725:9;19719:4;19715:20;19711:1;19700:9;19696:17;19689:47;19753:131;19879:4;19753:131;:::i;:::-;19745:139;;19472:419;;;:::o;19897:180::-;19945:77;19942:1;19935:88;20042:4;20039:1;20032:15;20066:4;20063:1;20056:15;20083:305;20123:3;20142:20;20160:1;20142:20;:::i;:::-;20137:25;;20176:20;20194:1;20176:20;:::i;:::-;20171:25;;20330:1;20262:66;20258:74;20255:1;20252:81;20249:107;;;20336:18;;:::i;:::-;20249:107;20380:1;20377;20373:9;20366:16;;20083:305;;;;:::o;20394:191::-;20434:4;20454:20;20472:1;20454:20;:::i;:::-;20449:25;;20488:20;20506:1;20488:20;:::i;:::-;20483:25;;20527:1;20524;20521:8;20518:34;;;20532:18;;:::i;:::-;20518:34;20577:1;20574;20570:9;20562:17;;20394:191;;;;:::o;20591:180::-;20639:77;20636:1;20629:88;20736:4;20733:1;20726:15;20760:4;20757:1;20750:15;20777:233;20816:3;20839:24;20857:5;20839:24;:::i;:::-;20830:33;;20885:66;20878:5;20875:77;20872:103;;20955:18;;:::i;:::-;20872:103;21002:1;20995:5;20991:13;20984:20;;20777:233;;;:::o;21016:114::-;21083:6;21117:5;21111:12;21101:22;;21016:114;;;:::o;21136:184::-;21235:11;21269:6;21264:3;21257:19;21309:4;21304:3;21300:14;21285:29;;21136:184;;;;:::o;21326:132::-;21393:4;21416:3;21408:11;;21446:4;21441:3;21437:14;21429:22;;21326:132;;;:::o;21464:108::-;21541:24;21559:5;21541:24;:::i;:::-;21536:3;21529:37;21464:108;;:::o;21578:179::-;21647:10;21668:46;21710:3;21702:6;21668:46;:::i;:::-;21746:4;21741:3;21737:14;21723:28;;21578:179;;;;:::o;21763:113::-;21833:4;21865;21860:3;21856:14;21848:22;;21763:113;;;:::o;21912:732::-;22031:3;22060:54;22108:5;22060:54;:::i;:::-;22130:86;22209:6;22204:3;22130:86;:::i;:::-;22123:93;;22240:56;22290:5;22240:56;:::i;:::-;22319:7;22350:1;22335:284;22360:6;22357:1;22354:13;22335:284;;;22436:6;22430:13;22463:63;22522:3;22507:13;22463:63;:::i;:::-;22456:70;;22549:60;22602:6;22549:60;:::i;:::-;22539:70;;22395:224;22382:1;22379;22375:9;22370:14;;22335:284;;;22339:14;22635:3;22628:10;;22036:608;;;21912:732;;;;:::o;22650:1161::-;23027:4;23065:3;23054:9;23050:19;23042:27;;23079:71;23147:1;23136:9;23132:17;23123:6;23079:71;:::i;:::-;23160:72;23228:2;23217:9;23213:18;23204:6;23160:72;:::i;:::-;23279:9;23273:4;23269:20;23264:2;23253:9;23249:18;23242:48;23307:108;23410:4;23401:6;23307:108;:::i;:::-;23299:116;;23462:9;23456:4;23452:20;23447:2;23436:9;23432:18;23425:48;23490:108;23593:4;23584:6;23490:108;:::i;:::-;23482:116;;23646:9;23640:4;23636:20;23630:3;23619:9;23615:19;23608:49;23674:130;23799:4;23674:130;:::i;:::-;23666:138;;22650:1161;;;;;;;:::o;23817:225::-;23957:34;23953:1;23945:6;23941:14;23934:58;24026:8;24021:2;24013:6;24009:15;24002:33;23817:225;:::o;24048:366::-;24190:3;24211:67;24275:2;24270:3;24211:67;:::i;:::-;24204:74;;24287:93;24376:3;24287:93;:::i;:::-;24405:2;24400:3;24396:12;24389:19;;24048:366;;;:::o;24420:419::-;24586:4;24624:2;24613:9;24609:18;24601:26;;24673:9;24667:4;24663:20;24659:1;24648:9;24644:17;24637:47;24701:131;24827:4;24701:131;:::i;:::-;24693:139;;24420:419;;;:::o;24845:223::-;24985:34;24981:1;24973:6;24969:14;24962:58;25054:6;25049:2;25041:6;25037:15;25030:31;24845:223;:::o;25074:366::-;25216:3;25237:67;25301:2;25296:3;25237:67;:::i;:::-;25230:74;;25313:93;25402:3;25313:93;:::i;:::-;25431:2;25426:3;25422:12;25415:19;;25074:366;;;:::o;25446:419::-;25612:4;25650:2;25639:9;25635:18;25627:26;;25699:9;25693:4;25689:20;25685:1;25674:9;25670:17;25663:47;25727:131;25853:4;25727:131;:::i;:::-;25719:139;;25446:419;;;:::o;25871:180::-;25919:77;25916:1;25909:88;26016:4;26013:1;26006:15;26040:4;26037:1;26030:15;26057:332;26178:4;26216:2;26205:9;26201:18;26193:26;;26229:71;26297:1;26286:9;26282:17;26273:6;26229:71;:::i;:::-;26310:72;26378:2;26367:9;26363:18;26354:6;26310:72;:::i;:::-;26057:332;;;;;:::o;26395:442::-;26544:4;26582:2;26571:9;26567:18;26559:26;;26595:71;26663:1;26652:9;26648:17;26639:6;26595:71;:::i;:::-;26676:72;26744:2;26733:9;26729:18;26720:6;26676:72;:::i;:::-;26758;26826:2;26815:9;26811:18;26802:6;26758:72;:::i;:::-;26395:442;;;;;;:::o;26843:348::-;26883:7;26906:20;26924:1;26906:20;:::i;:::-;26901:25;;26940:20;26958:1;26940:20;:::i;:::-;26935:25;;27128:1;27060:66;27056:74;27053:1;27050:81;27045:1;27038:9;27031:17;27027:105;27024:131;;;27135:18;;:::i;:::-;27024:131;27183:1;27180;27176:9;27165:20;;26843:348;;;;:::o;27197:116::-;27267:21;27282:5;27267:21;:::i;:::-;27260:5;27257:32;27247:60;;27303:1;27300;27293:12;27247:60;27197:116;:::o;27319:137::-;27373:5;27404:6;27398:13;27389:22;;27420:30;27444:5;27420:30;:::i;:::-;27319:137;;;;:::o;27462:345::-;27529:6;27578:2;27566:9;27557:7;27553:23;27549:32;27546:119;;;27584:79;;:::i;:::-;27546:119;27704:1;27729:61;27782:7;27773:6;27762:9;27758:22;27729:61;:::i;:::-;27719:71;;27675:125;27462:345;;;;:::o;27813:229::-;27953:34;27949:1;27941:6;27937:14;27930:58;28022:12;28017:2;28009:6;28005:15;27998:37;27813:229;:::o;28048:366::-;28190:3;28211:67;28275:2;28270:3;28211:67;:::i;:::-;28204:74;;28287:93;28376:3;28287:93;:::i;:::-;28405:2;28400:3;28396:12;28389:19;;28048:366;;;:::o;28420:419::-;28586:4;28624:2;28613:9;28609:18;28601:26;;28673:9;28667:4;28663:20;28659:1;28648:9;28644:17;28637:47;28701:131;28827:4;28701:131;:::i;:::-;28693:139;;28420:419;;;:::o;28845:225::-;28985:34;28981:1;28973:6;28969:14;28962:58;29054:8;29049:2;29041:6;29037:15;29030:33;28845:225;:::o;29076:366::-;29218:3;29239:67;29303:2;29298:3;29239:67;:::i;:::-;29232:74;;29315:93;29404:3;29315:93;:::i;:::-;29433:2;29428:3;29424:12;29417:19;;29076:366;;;:::o;29448:419::-;29614:4;29652:2;29641:9;29637:18;29629:26;;29701:9;29695:4;29691:20;29687:1;29676:9;29672:17;29665:47;29729:131;29855:4;29729:131;:::i;:::-;29721:139;;29448:419;;;:::o;29873:179::-;30013:31;30009:1;30001:6;29997:14;29990:55;29873:179;:::o;30058:366::-;30200:3;30221:67;30285:2;30280:3;30221:67;:::i;:::-;30214:74;;30297:93;30386:3;30297:93;:::i;:::-;30415:2;30410:3;30406:12;30399:19;;30058:366;;;:::o;30430:419::-;30596:4;30634:2;30623:9;30619:18;30611:26;;30683:9;30677:4;30673:20;30669:1;30658:9;30654:17;30647:47;30711:131;30837:4;30711:131;:::i;:::-;30703:139;;30430:419;;;:::o;30855:98::-;30906:6;30940:5;30934:12;30924:22;;30855:98;;;:::o;30959:147::-;31060:11;31097:3;31082:18;;30959:147;;;;:::o;31112:307::-;31180:1;31190:113;31204:6;31201:1;31198:13;31190:113;;;31289:1;31284:3;31280:11;31274:18;31270:1;31265:3;31261:11;31254:39;31226:2;31223:1;31219:10;31214:15;;31190:113;;;31321:6;31318:1;31315:13;31312:101;;;31401:1;31392:6;31387:3;31383:16;31376:27;31312:101;31161:258;31112:307;;;:::o;31425:373::-;31529:3;31557:38;31589:5;31557:38;:::i;:::-;31611:88;31692:6;31687:3;31611:88;:::i;:::-;31604:95;;31708:52;31753:6;31748:3;31741:4;31734:5;31730:16;31708:52;:::i;:::-;31785:6;31780:3;31776:16;31769:23;;31533:265;31425:373;;;;:::o;31804:271::-;31934:3;31956:93;32045:3;32036:6;31956:93;:::i;:::-;31949:100;;32066:3;32059:10;;31804:271;;;;:::o;32081:99::-;32133:6;32167:5;32161:12;32151:22;;32081:99;;;:::o;32186:364::-;32274:3;32302:39;32335:5;32302:39;:::i;:::-;32357:71;32421:6;32416:3;32357:71;:::i;:::-;32350:78;;32437:52;32482:6;32477:3;32470:4;32463:5;32459:16;32437:52;:::i;:::-;32514:29;32536:6;32514:29;:::i;:::-;32509:3;32505:39;32498:46;;32278:272;32186:364;;;;:::o;32556:313::-;32669:4;32707:2;32696:9;32692:18;32684:26;;32756:9;32750:4;32746:20;32742:1;32731:9;32727:17;32720:47;32784:78;32857:4;32848:6;32784:78;:::i;:::-;32776:86;;32556:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2023800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addNFTBatch(address,uint256[],uint256[])": "infinite",
								"addNftBatchWithNumber(address,uint256,uint256)": "infinite",
								"claim(address)": "infinite",
								"exit()": "infinite",
								"getNextNftTokenId()": "infinite",
								"getThreshold()": "2481",
								"lpToken()": "infinite",
								"nftCount()": "2491",
								"nftIds(uint256)": "infinite",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2567",
								"pointsBalance(address)": "infinite",
								"renounceOwnership()": "30397",
								"stake(uint256)": "infinite",
								"supportsInterface(bytes4)": "751",
								"transferOwnership(address)": "30830",
								"users(address)": "infinite",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_unDebitedPoints(struct Farming.UserInfo memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7478,
									"end": 7482,
									"name": "PUSH",
									"source": 0,
									"value": "429"
								},
								{
									"begin": 7448,
									"end": 7482,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7448,
									"end": 7482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7527,
									"name": "PUSH",
									"source": 0,
									"value": "D2F00"
								},
								{
									"begin": 7489,
									"end": 7527,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7489,
									"end": 7527,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7592,
									"end": 7600,
									"name": "PUSH",
									"source": 0,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 7576,
									"end": 7589,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7576,
									"end": 7589,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7573,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7562,
									"end": 7573,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7562,
									"end": 7589,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7562,
									"end": 7600,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7534,
									"end": 7600,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7534,
									"end": 7600,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7901,
									"end": 7930,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 949,
									"end": 981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 968,
									"end": 980,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 968,
									"end": 978,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 968,
									"end": 978,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 978,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 968,
									"end": 980,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 980,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 968,
									"end": 980,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 968,
									"end": 980,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 968,
									"end": 980,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 949,
									"end": 981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 754,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 736,
									"end": 746,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 729,
									"end": 746,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 729,
									"end": 746,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 754,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 754,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2439,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2414,
									"end": 2439,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2459,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2456,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2450,
									"end": 2456,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2450,
									"end": 2467,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2514,
									"end": 2522,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2504,
									"end": 2512,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2483,
									"end": 2523,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2403,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2340,
									"end": 2531,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 78,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 62,
									"end": 78,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 62,
									"end": 78,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 84,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 84,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 84,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 90,
									"end": 270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 138,
									"end": 215,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 216,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 232,
									"end": 233,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 225,
									"end": 240,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 259,
									"end": 263,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 249,
									"end": 264,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 276,
									"end": 624,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 316,
									"end": 323,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 357,
									"end": 358,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 339,
									"end": 359,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 339,
									"end": 359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 334,
									"end": 359,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 391,
									"end": 392,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 373,
									"end": 393,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 373,
									"end": 393,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 368,
									"end": 393,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 368,
									"end": 393,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 561,
									"end": 562,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 493,
									"end": 559,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 489,
									"end": 563,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 486,
									"end": 487,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 483,
									"end": 564,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 478,
									"end": 479,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 471,
									"end": 480,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 464,
									"end": 481,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 460,
									"end": 565,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 457,
									"end": 588,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 457,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 588,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 568,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 586,
									"name": "JUMP",
									"source": 13,
									"value": "[in]"
								},
								{
									"begin": 568,
									"end": 586,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 586,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 457,
									"end": 588,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 457,
									"end": 588,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 616,
									"end": 617,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 613,
									"end": 614,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 609,
									"end": 618,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 598,
									"end": 618,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 598,
									"end": 618,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 276,
									"end": 624,
									"name": "JUMP",
									"source": 13,
									"value": "[out]"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6648,
									"end": 11649,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202f071625f7592ba1b98210be59687daffd5848ee6cd46f2595f2f4d926332fbc64736f6c634300080d0033",
									".code": [
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "C6C9BD47"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "C6C9BD47"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "E75235B8"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "E9FAD8EE"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "A87430BA"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "4B02218F"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "55AC2FD3"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "5FCBD285"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "63C66891"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "AF2C6CA"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "1E83409A"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "25CA4CFF"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 11649,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 528,
											"end": 539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 617,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 528,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11308,
											"end": 11315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11335,
											"end": 11341,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11335,
											"end": 11348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11328,
											"end": 11348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11267,
											"end": 11356,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9511,
											"end": 9512,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9495,
											"end": 9501,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9495,
											"end": 9508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9495,
											"end": 9512,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9487,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9580,
											"end": 9589,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9580,
											"end": 9589,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9565,
											"end": 9575,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9551,
											"end": 9576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9551,
											"end": 9576,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9551,
											"end": 9576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9589,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 9543,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9653,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9648,
											"end": 9665,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9624,
											"end": 9665,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9760,
											"end": 9769,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9760,
											"end": 9769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9744,
											"end": 9754,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 9730,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 9730,
											"end": 9759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 9730,
											"end": 9770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9716,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9727,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9712,
											"end": 9727,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9712,
											"end": 9770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9803,
											"end": 9818,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9800,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9781,
											"end": 9800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9818,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9781,
											"end": 9818,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9840,
											"end": 9858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9860,
											"end": 9873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9877,
											"end": 9912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9905,
											"end": 9911,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9877,
											"end": 9904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 9877,
											"end": 9912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9877,
											"end": 9912,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 9877,
											"end": 9912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9923,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9969,
											"end": 9974,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9923,
											"end": 9960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 9923,
											"end": 9975,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9923,
											"end": 9975,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 9923,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10022,
											"end": 10040,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10013,
											"end": 10058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 10081,
											"end": 10085,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10101,
											"end": 10111,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10126,
											"end": 10136,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10151,
											"end": 10152,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10013,
											"end": 10180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10204,
											"end": 10214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH",
											"source": 0,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10198,
											"end": 10230,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 10238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 10238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9476,
											"end": 10238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9426,
											"end": 10238,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10914,
											"end": 10921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10954,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10962,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10971,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10934,
											"end": 10971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11026,
											"end": 11030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11009,
											"end": 11025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 11009,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 10993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10989,
											"end": 11004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 10989,
											"end": 11008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 10989,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10982,
											"end": 11032,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10853,
											"end": 11040,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10337,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10348,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10332,
											"end": 10349,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10308,
											"end": 10349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10383,
											"end": 10389,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10389,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10389,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 10360,
											"end": 10413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 10491,
											"end": 10501,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10477,
											"end": 10490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 10477,
											"end": 10502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10463,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 10459,
											"end": 10474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10502,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10459,
											"end": 10502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10543,
											"end": 10549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10527,
											"end": 10538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10527,
											"end": 10542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 10527,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10517,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10550,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10550,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10550,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10513,
											"end": 10550,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10583,
											"end": 10598,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10561,
											"end": 10580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10598,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10561,
											"end": 10598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10654,
											"end": 10664,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10679,
											"end": 10685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 10619,
											"end": 10639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 10619,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10724,
											"end": 10734,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 10736,
											"end": 10742,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10714,
											"end": 10743,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 10297,
											"end": 10751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10256,
											"end": 10751,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8419,
											"end": 8439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8442,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8419,
											"end": 8466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8518,
											"end": 8527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8504,
											"end": 8528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8477,
											"end": 8528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8556,
											"end": 8561,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8544,
											"end": 8561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8580,
											"end": 8585,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8577,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 8568,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8563,
											"end": 8586,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8611,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8619,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8613,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 8612,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8624,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8639,
											"end": 8646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8654,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8647,
											"end": 8654,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8655,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8639,
											"end": 8659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8588,
											"end": 8591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8714,
											"end": 8720,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8683,
											"end": 8726,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8683,
											"end": 8726,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8683,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8789,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 8790,
											"end": 8800,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8810,
											"end": 8814,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8817,
											"end": 8820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8822,
											"end": 8829,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8739,
											"end": 8834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8408,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8408,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8842,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11414,
											"end": 11421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11435,
											"end": 11453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11455,
											"end": 11468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11472,
											"end": 11507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11500,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11472,
											"end": 11499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11472,
											"end": 11507,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11472,
											"end": 11507,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 11472,
											"end": 11507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11434,
											"end": 11507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11525,
											"end": 11535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11535,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11518,
											"end": 11535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11364,
											"end": 11543,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7300,
											"end": 7321,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8130,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8138,
											"end": 8141,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8099,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8099,
											"end": 8142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8099,
											"end": 8142,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 8099,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8162,
											"end": 8180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8203,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 8204,
											"end": 8214,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8236,
											"end": 8243,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8153,
											"end": 8248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8256,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1786,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1721,
											"end": 1824,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1143,
											"end": 1149,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1070,
											"end": 1157,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8940,
											"end": 8950,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8973,
											"end": 8977,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8993,
											"end": 8999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8925,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 8925,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 8901,
											"end": 8925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 8901,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9052,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9060,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9061,
											"end": 9071,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9072,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9072,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9031,
											"end": 9072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9133,
											"end": 9149,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 9130,
											"end": 9221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 9198,
											"end": 9208,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9184,
											"end": 9197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 9184,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9181,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 9166,
											"end": 9181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9209,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9130,
											"end": 9221,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 9130,
											"end": 9221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9261,
											"end": 9267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9256,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 9245,
											"end": 9260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 9245,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9268,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9268,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9231,
											"end": 9268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9301,
											"end": 9316,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9298,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9279,
											"end": 9298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9316,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9341,
											"end": 9351,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 9353,
											"end": 9359,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9334,
											"end": 9360,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 8890,
											"end": 9368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8850,
											"end": 9368,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7398,
											"end": 7439,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 702,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 702,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7368,
											"end": 7391,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11596,
											"end": 11603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11623,
											"end": 11632,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11623,
											"end": 11632,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11616,
											"end": 11632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11616,
											"end": 11632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11551,
											"end": 11640,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10808,
											"end": 10813,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10808,
											"end": 10832,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10799,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 10799,
											"end": 10833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10799,
											"end": 10833,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 10799,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10763,
											"end": 10841,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 444,
											"end": 482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1301,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1313,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1282,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2090,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2060,
											"end": 2133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2163,
											"end": 2171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2144,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 2180,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6377,
											"end": 6393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6422,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6417,
											"end": 6425,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6406,
											"end": 6425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6447,
											"end": 6448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6436,
											"end": 6448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6463,
											"end": 6472,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6481,
											"end": 6493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6477,
											"end": 6493,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6527,
											"end": 6535,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6521,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6516,
											"end": 6535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6572,
											"end": 6573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6566,
											"end": 6574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6555,
											"end": 6574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 6513,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6494,
											"end": 6497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6459,
											"end": 6632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6298,
											"end": 6639,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4304,
											"end": 4316,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4296,
											"end": 4316,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 4288,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4385,
											"end": 4390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4377,
											"end": 4401,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4418,
											"end": 4449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 4370,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4493,
											"end": 4504,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4212,
											"end": 4512,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11123,
											"end": 11130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11160,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11163,
											"end": 11178,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11143,
											"end": 11178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11235,
											"end": 11239,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11235,
											"end": 11246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11235,
											"end": 11246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 11210,
											"end": 11214,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11229,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11210,
											"end": 11229,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11210,
											"end": 11229,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11205,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11196,
											"end": 11209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 11196,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 11196,
											"end": 11234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 11196,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11247,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11189,
											"end": 11247,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11052,
											"end": 11255,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 932,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 721,
											"end": 932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 924,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 858,
											"end": 863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 888,
											"end": 911,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 913,
											"end": 915,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 917,
											"end": 922,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 865,
											"end": 923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 838,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 838,
											"end": 924,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 838,
											"end": 924,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 838,
											"end": 924,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 721,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 721,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 721,
											"end": 932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 721,
											"end": 932,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 746,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 729,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 729,
											"end": 746,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 754,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 754,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5085,
											"end": 5086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5085,
											"end": 5098,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5129,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5128,
											"end": 5136,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5124,
											"end": 5136,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5161,
											"end": 5162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5159,
											"end": 5163,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5152,
											"end": 5164,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5138,
											"end": 5141,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5108,
											"end": 5174,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 5082,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5008,
											"end": 5189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2414,
											"end": 2439,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2467,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2504,
											"end": 2512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2523,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2403,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1180,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1104,
											"end": 1109,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1134,
											"end": 1161,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1134,
											"end": 1161,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1134,
											"end": 1161,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1163,
											"end": 1167,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1169,
											"end": 1171,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1178,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1111,
											"end": 1179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1084,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1084,
											"end": 1180,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1180,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 1084,
											"end": 1180,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1188,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "JUMP",
											"source": 12,
											"value": "[in]"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 3294,
											"end": 4010,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3294,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3772,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3757,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 3744,
											"end": 3771,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 3744,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3813,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3718,
											"end": 3813,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3828,
											"end": 3838,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3845,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 3849,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 4003,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3824,
											"end": 4003,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3935,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 3914,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 3906,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3824,
											"end": 4003,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3824,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3364,
											"end": 4010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 4010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 4010,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 4010,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3740,
											"end": 3752,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3772,
											"end": 3824,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3811,
											"end": 3823,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3772,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 3772,
											"end": 3824,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3772,
											"end": 3824,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 3772,
											"end": 3824,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3765,
											"end": 3824,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3765,
											"end": 3824,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3603,
											"end": 3832,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4951,
											"end": 4956,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4926,
											"end": 4947,
											"name": "SELFBALANCE",
											"source": 8
										},
										{
											"begin": 4926,
											"end": 4956,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4926,
											"end": 4956,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "tag",
											"source": 8,
											"value": "302"
										},
										{
											"begin": 4918,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5029,
											"end": 5035,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5018,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 5010,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5084,
											"end": 5096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5131,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5136,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5125,
											"end": 5136,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5151,
											"end": 5155,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "311"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "tag",
											"source": 8,
											"value": "310"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5125,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5156,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5083,
											"end": 5156,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5191,
											"end": 5198,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5200,
											"end": 5210,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5212,
											"end": 5224,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5174,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 5174,
											"end": 5225,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5174,
											"end": 5225,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 5174,
											"end": 5225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5225,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5167,
											"end": 5225,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4723,
											"end": 5233,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1077,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1132,
											"end": 1139,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1120,
											"end": 1140,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1172,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1168,
											"end": 1176,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1176,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1176,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 797,
											"end": 1184,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 7588,
											"end": 7595,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 8114,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 8114,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7584,
											"end": 8114,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7619,
											"end": 7629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7612,
											"end": 7629,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7584,
											"end": 8114,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 7584,
											"end": 8114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7753,
											"end": 7754,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7743,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7750,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 8103,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 8103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 7729,
											"end": 8103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7931,
											"end": 7941,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7925,
											"end": 7942,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7992,
											"end": 8007,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 7989,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7975,
											"end": 7977,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7971,
											"end": 7990,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 8008,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7729,
											"end": 8103,
											"name": "tag",
											"source": 8,
											"value": "321"
										},
										{
											"begin": 7729,
											"end": 8103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8086,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8067,
											"end": 8087,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7409,
											"end": 8121,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "414"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 1688,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1683,
											"end": 1686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1676,
											"end": 1713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1601,
											"end": 1719,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1841,
											"end": 1859,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 1937,
											"end": 1938,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1935,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1922,
											"end": 1939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1919,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 1869,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1725,
											"end": 1947,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1990,
											"end": 1997,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2072,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2019,
											"end": 2073,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2008,
											"end": 2073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 2079,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2169,
											"end": 2174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2151,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2140,
											"end": 2175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2181,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2278,
											"end": 2283,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "tag",
											"source": 13,
											"value": "430"
										},
										{
											"begin": 2260,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2285,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 2240,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2187,
											"end": 2309,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2406,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2377,
											"end": 2406,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 2415,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2315,
											"end": 2454,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2565,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2566,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2539,
											"end": 2571,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 2574,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 2536,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2694,
											"end": 2695,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2764,
											"end": 2771,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2740,
											"end": 2762,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 2719,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2709,
											"end": 2772,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2665,
											"end": 2782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2789,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3127,
											"end": 3133,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3155,
											"end": 3162,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3174,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3179,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 3182,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 3144,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3302,
											"end": 3303,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3372,
											"end": 3379,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3363,
											"end": 3369,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3370,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 3327,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3317,
											"end": 3380,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3273,
											"end": 3390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3068,
											"end": 3397,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3494,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3547,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3533,
											"end": 3542,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3531,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3520,
											"end": 3543,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3548,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3632,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3513,
											"end": 3632,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 3551,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3551,
											"end": 3630,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3551,
											"end": 3630,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 3551,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3632,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 3513,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3696,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3721,
											"end": 3730,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 3696,
											"end": 3749,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3696,
											"end": 3749,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 3696,
											"end": 3749,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3749,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3686,
											"end": 3749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3642,
											"end": 3759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3824,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 3869,
											"end": 3876,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3860,
											"end": 3866,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3849,
											"end": 3858,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3867,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3824,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 3824,
											"end": 3877,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3824,
											"end": 3877,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 3824,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3877,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3769,
											"end": 3887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3928,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3997,
											"end": 4004,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 3994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 3995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3952,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 3952,
											"end": 4005,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3952,
											"end": 4005,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 3952,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3942,
											"end": 4005,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3942,
											"end": 4005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3897,
											"end": 4015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 4022,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4028,
											"end": 4088,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4144,
											"end": 4153,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4204,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4222,
											"end": 4227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4204,
											"end": 4228,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4204,
											"end": 4228,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 4204,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4177,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4164,
											"end": 4230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4236,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4356,
											"end": 4361,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "tag",
											"source": 13,
											"value": "459"
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4362,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4362,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4368,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4439,
											"end": 4448,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 4503,
											"end": 4508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 4472,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4374,
											"end": 4515,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4521,
											"end": 4682,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 4521,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "tag",
											"source": 13,
											"value": "463"
										},
										{
											"begin": 4623,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4621,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4521,
											"end": 4682,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4800,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4836,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4811,
											"end": 4837,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4811,
											"end": 4837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4930,
											"end": 4931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4915,
											"end": 4932,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4906,
											"end": 4912,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4847,
											"end": 4933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 4847,
											"end": 4933,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4847,
											"end": 4933,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 4847,
											"end": 4933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4940,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4946,
											"end": 5063,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 4946,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5116,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5145,
											"end": 5150,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5155,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5137,
											"end": 5165,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5127,
											"end": 5165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5069,
											"end": 5171,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5177,
											"end": 5357,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 5177,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5225,
											"end": 5302,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5222,
											"end": 5223,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5322,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5319,
											"end": 5320,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5312,
											"end": 5327,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5350,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5351,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5363,
											"end": 5644,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5363,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 5468,
											"end": 5472,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 5446,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5434,
											"end": 5474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5576,
											"end": 5582,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5574,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5561,
											"end": 5583,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5540,
											"end": 5558,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5528,
											"end": 5538,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5559,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5522,
											"end": 5584,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5607,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5519,
											"end": 5607,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5607,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 5519,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5627,
											"end": 5637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5616,
											"end": 5638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5406,
											"end": 5644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5363,
											"end": 5644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5363,
											"end": 5644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5363,
											"end": 5644,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 5711,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5701,
											"end": 5731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5740,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 5768,
											"end": 5772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5760,
											"end": 5766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5740,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 5740,
											"end": 5773,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5740,
											"end": 5773,
											"name": "tag",
											"source": 13,
											"value": "475"
										},
										{
											"begin": 5740,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5779,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5862,
											"end": 5866,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5952,
											"end": 5970,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5941,
											"end": 5971,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5994,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5938,
											"end": 5994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "tag",
											"source": 13,
											"value": "478"
										},
										{
											"begin": 5974,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5938,
											"end": 5994,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 5938,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6028,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6016,
											"end": 6022,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6012,
											"end": 6029,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6084,
											"end": 6088,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6078,
											"end": 6082,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6066,
											"end": 6089,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6066,
											"end": 6089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 6096,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6102,
											"end": 6219,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6102,
											"end": 6219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6209,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6213,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6363,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6379,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 6436,
											"end": 6442,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6379,
											"end": 6443,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6379,
											"end": 6443,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 6379,
											"end": 6443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 6363,
											"end": 6444,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6363,
											"end": 6444,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6363,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6464,
											"end": 6469,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6493,
											"end": 6499,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6486,
											"end": 6491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6479,
											"end": 6500,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6527,
											"end": 6531,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6516,
											"end": 6532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6532,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6509,
											"end": 6532,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6572,
											"end": 6578,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6568,
											"end": 6585,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6609,
											"end": 6612,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6607,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6613,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6717,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 6595,
											"end": 6717,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 6628,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6595,
											"end": 6717,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 6595,
											"end": 6717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6760,
											"end": 6766,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6752,
											"end": 6767,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6838,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 6897,
											"end": 6900,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6885,
											"end": 6895,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6864,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6864,
											"end": 6901,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6864,
											"end": 6901,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 6864,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 6862,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6852,
											"end": 6902,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6926,
											"end": 6929,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6922,
											"end": 6936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6781,
											"end": 6784,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6777,
											"end": 6791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 6726,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6730,
											"end": 6751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6344,
											"end": 6952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6344,
											"end": 6952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6952,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7046,
											"end": 7051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7095,
											"end": 7098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7080,
											"end": 7086,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7076,
											"end": 7093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7099,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7184,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 7062,
											"end": 7184,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 7103,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7062,
											"end": 7184,
											"name": "tag",
											"source": 13,
											"value": "490"
										},
										{
											"begin": 7062,
											"end": 7184,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7207,
											"end": 7227,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 7335,
											"end": 7338,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7320,
											"end": 7324,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7312,
											"end": 7318,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7325,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7245,
											"end": 7339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 7245,
											"end": 7339,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7245,
											"end": 7339,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 7245,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7339,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7236,
											"end": 7339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7052,
											"end": 7345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6975,
											"end": 7345,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7492,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7494,
											"end": 7500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7545,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7531,
											"end": 7540,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7522,
											"end": 7529,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7518,
											"end": 7541,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7514,
											"end": 7546,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7511,
											"end": 7630,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7511,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 7511,
											"end": 7630,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 7549,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7511,
											"end": 7630,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 7511,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7669,
											"end": 7670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 7739,
											"end": 7746,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7719,
											"end": 7728,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7715,
											"end": 7737,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7694,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7694,
											"end": 7747,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7694,
											"end": 7747,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 7694,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7747,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7684,
											"end": 7747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7640,
											"end": 7757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7826,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7813,
											"end": 7822,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7827,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7796,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7855,
											"end": 7873,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7847,
											"end": 7853,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 7877,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 7841,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 8052,
											"end": 8059,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8043,
											"end": 8049,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8032,
											"end": 8041,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8028,
											"end": 8050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7982,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 7982,
											"end": 8060,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7982,
											"end": 8060,
											"name": "tag",
											"source": 13,
											"value": "499"
										},
										{
											"begin": 7982,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7972,
											"end": 8060,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7972,
											"end": 8060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7767,
											"end": 8070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8137,
											"end": 8139,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8126,
											"end": 8135,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8122,
											"end": 8140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8109,
											"end": 8141,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8187,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8190,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 8190,
											"end": 8269,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8190,
											"end": 8269,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8190,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 8154,
											"end": 8271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8365,
											"end": 8372,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8356,
											"end": 8362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8354,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8295,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8295,
											"end": 8373,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8295,
											"end": 8373,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8295,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8373,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8285,
											"end": 8373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8080,
											"end": 8383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7351,
											"end": 8390,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8396,
											"end": 8514,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 8396,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8501,
											"end": 8506,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8483,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8478,
											"end": 8481,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8471,
											"end": 8508,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8514,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8613,
											"end": 8617,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8651,
											"end": 8653,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8640,
											"end": 8649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8636,
											"end": 8654,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8628,
											"end": 8654,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8628,
											"end": 8654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8732,
											"end": 8733,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8717,
											"end": 8734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8708,
											"end": 8714,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8735,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 8664,
											"end": 8735,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8664,
											"end": 8735,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8664,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8520,
											"end": 8742,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8897,
											"end": 8901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8937,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8924,
											"end": 8933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 8938,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8912,
											"end": 8938,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8912,
											"end": 8938,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 9016,
											"end": 9017,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9005,
											"end": 9014,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9001,
											"end": 9018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8992,
											"end": 8998,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8948,
											"end": 9019,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 8948,
											"end": 9019,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8948,
											"end": 9019,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 8948,
											"end": 9019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9097,
											"end": 9099,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9086,
											"end": 9095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9082,
											"end": 9100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9029,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9111,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 9179,
											"end": 9181,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9168,
											"end": 9177,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9155,
											"end": 9161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9111,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 9111,
											"end": 9183,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9111,
											"end": 9183,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 9111,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8748,
											"end": 9190,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9196,
											"end": 9313,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 9196,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9305,
											"end": 9306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9295,
											"end": 9307,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9380,
											"end": 9384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9488,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9462,
											"end": 9468,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9459,
											"end": 9489,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9456,
											"end": 9512,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9456,
											"end": 9512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9456,
											"end": 9512,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9492,
											"end": 9510,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9456,
											"end": 9512,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9456,
											"end": 9512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9552,
											"end": 9558,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9530,
											"end": 9559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 9530,
											"end": 9559,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9530,
											"end": 9559,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9530,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9522,
											"end": 9559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9614,
											"end": 9618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9612,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9604,
											"end": 9619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9619,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9596,
											"end": 9619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9319,
											"end": 9626,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9716,
											"end": 9722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9706,
											"end": 9709,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9693,
											"end": 9723,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9769,
											"end": 9775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9767,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9760,
											"end": 9776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9753,
											"end": 9780,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9786,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9869,
											"end": 9874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9894,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 9910,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9910,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9910,
											"end": 9958,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9910,
											"end": 9958,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 9910,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9894,
											"end": 9959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 9894,
											"end": 9959,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9894,
											"end": 9959,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 9894,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 9959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9885,
											"end": 9959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9982,
											"end": 9988,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9975,
											"end": 9980,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9968,
											"end": 9989,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10020,
											"end": 10024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10013,
											"end": 10018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10025,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10058,
											"end": 10061,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10055,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10044,
											"end": 10047,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10037,
											"end": 10062,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10034,
											"end": 10146,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10034,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10034,
											"end": 10146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10065,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10034,
											"end": 10146,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10034,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10155,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 10189,
											"end": 10195,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10184,
											"end": 10187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10155,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10155,
											"end": 10196,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10155,
											"end": 10196,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 10155,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9875,
											"end": 10202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 10202,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10276,
											"end": 10281,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10325,
											"end": 10328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10318,
											"end": 10322,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10310,
											"end": 10316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10306,
											"end": 10323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10329,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 10292,
											"end": 10414,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10333,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10333,
											"end": 10412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 10333,
											"end": 10412,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10333,
											"end": 10412,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10333,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10292,
											"end": 10414,
											"name": "tag",
											"source": 13,
											"value": "524"
										},
										{
											"begin": 10292,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10437,
											"end": 10457,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 10475,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10549,
											"end": 10552,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10541,
											"end": 10547,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10534,
											"end": 10538,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10526,
											"end": 10532,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10522,
											"end": 10539,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10475,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10475,
											"end": 10553,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10475,
											"end": 10553,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 10475,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10466,
											"end": 10553,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10466,
											"end": 10553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10282,
											"end": 10559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10559,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10719,
											"end": 10725,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10735,
											"end": 10741,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10749,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10751,
											"end": 10757,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10800,
											"end": 10803,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 10788,
											"end": 10797,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10779,
											"end": 10786,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10775,
											"end": 10798,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10771,
											"end": 10804,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10888,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 10768,
											"end": 10888,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10807,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10807,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 10807,
											"end": 10886,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10807,
											"end": 10886,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10807,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10768,
											"end": 10888,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 10768,
											"end": 10888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10952,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 10997,
											"end": 11004,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10988,
											"end": 10994,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10977,
											"end": 10986,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10973,
											"end": 10995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10952,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10952,
											"end": 11005,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 10952,
											"end": 11005,
											"name": "tag",
											"source": 13,
											"value": "530"
										},
										{
											"begin": 10952,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 11005,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 11005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10898,
											"end": 11015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11054,
											"end": 11056,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11080,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 11125,
											"end": 11132,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11116,
											"end": 11122,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11105,
											"end": 11114,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11080,
											"end": 11133,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 11080,
											"end": 11133,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11080,
											"end": 11133,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 11080,
											"end": 11133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 11070,
											"end": 11133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11210,
											"end": 11212,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11199,
											"end": 11208,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11195,
											"end": 11213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11182,
											"end": 11214,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11233,
											"end": 11239,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11230,
											"end": 11260,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11227,
											"end": 11344,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11227,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 11227,
											"end": 11344,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11263,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 11263,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 11263,
											"end": 11342,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11263,
											"end": 11342,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 11263,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11227,
											"end": 11344,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 11227,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11438,
											"end": 11445,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11429,
											"end": 11435,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11418,
											"end": 11427,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11414,
											"end": 11436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11368,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11368,
											"end": 11446,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11368,
											"end": 11446,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11368,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11446,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 11358,
											"end": 11446,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11153,
											"end": 11456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11523,
											"end": 11525,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11512,
											"end": 11521,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11508,
											"end": 11526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11527,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11554,
											"end": 11572,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11546,
											"end": 11552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11543,
											"end": 11573,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11657,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11540,
											"end": 11657,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "tag",
											"source": 13,
											"value": "536"
										},
										{
											"begin": 11576,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11657,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 11540,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11681,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11751,
											"end": 11758,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 11742,
											"end": 11748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11731,
											"end": 11740,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 11727,
											"end": 11749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11681,
											"end": 11759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 11681,
											"end": 11759,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11681,
											"end": 11759,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11681,
											"end": 11759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11671,
											"end": 11759,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11671,
											"end": 11759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11466,
											"end": 11769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11836,
											"end": 11839,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 11825,
											"end": 11834,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11821,
											"end": 11840,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11808,
											"end": 11841,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11868,
											"end": 11886,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11860,
											"end": 11866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11857,
											"end": 11887,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11854,
											"end": 11971,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11854,
											"end": 11971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11854,
											"end": 11971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11890,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11890,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 11890,
											"end": 11969,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11890,
											"end": 11969,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11890,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11854,
											"end": 11971,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11854,
											"end": 11971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11995,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 12049,
											"end": 12056,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12040,
											"end": 12046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12029,
											"end": 12038,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12025,
											"end": 12047,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11995,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 11995,
											"end": 12057,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 11995,
											"end": 12057,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11995,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11985,
											"end": 12057,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11779,
											"end": 12067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10565,
											"end": 12074,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12080,
											"end": 12195,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12080,
											"end": 12195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 12182,
											"end": 12187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12165,
											"end": 12188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 12165,
											"end": 12188,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12165,
											"end": 12188,
											"name": "tag",
											"source": 13,
											"value": "542"
										},
										{
											"begin": 12165,
											"end": 12188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12160,
											"end": 12163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12153,
											"end": 12189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12195,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12292,
											"end": 12296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12330,
											"end": 12332,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12319,
											"end": 12328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12307,
											"end": 12333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12307,
											"end": 12333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12409,
											"end": 12410,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12394,
											"end": 12411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12385,
											"end": 12391,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12412,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 12343,
											"end": 12412,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12343,
											"end": 12412,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12343,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12201,
											"end": 12419,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12529,
											"end": 12535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12545,
											"end": 12551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12553,
											"end": 12559,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12561,
											"end": 12567,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12610,
											"end": 12613,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 12598,
											"end": 12607,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12589,
											"end": 12596,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12585,
											"end": 12608,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12614,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12578,
											"end": 12698,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12578,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12578,
											"end": 12698,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 12617,
											"end": 12696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 12617,
											"end": 12696,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12617,
											"end": 12696,
											"name": "tag",
											"source": 13,
											"value": "547"
										},
										{
											"begin": 12617,
											"end": 12696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12578,
											"end": 12698,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12578,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12737,
											"end": 12738,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12762,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12807,
											"end": 12814,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12798,
											"end": 12804,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12787,
											"end": 12796,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12783,
											"end": 12805,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12762,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 12762,
											"end": 12815,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12762,
											"end": 12815,
											"name": "tag",
											"source": 13,
											"value": "548"
										},
										{
											"begin": 12762,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12815,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12752,
											"end": 12815,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12708,
											"end": 12825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12864,
											"end": 12866,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12890,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 12935,
											"end": 12942,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 12926,
											"end": 12932,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12915,
											"end": 12924,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 12911,
											"end": 12933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12890,
											"end": 12943,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 12890,
											"end": 12943,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 12890,
											"end": 12943,
											"name": "tag",
											"source": 13,
											"value": "549"
										},
										{
											"begin": 12890,
											"end": 12943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12880,
											"end": 12943,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12880,
											"end": 12943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12835,
											"end": 12953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12992,
											"end": 12994,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13018,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 13063,
											"end": 13070,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13054,
											"end": 13060,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13043,
											"end": 13052,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13039,
											"end": 13061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13018,
											"end": 13071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13018,
											"end": 13071,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13018,
											"end": 13071,
											"name": "tag",
											"source": 13,
											"value": "550"
										},
										{
											"begin": 13018,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 13008,
											"end": 13071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12963,
											"end": 13081,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13120,
											"end": 13122,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 13146,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13191,
											"end": 13198,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13182,
											"end": 13188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13171,
											"end": 13180,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13167,
											"end": 13189,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13146,
											"end": 13199,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13146,
											"end": 13199,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13146,
											"end": 13199,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 13146,
											"end": 13199,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13136,
											"end": 13199,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13136,
											"end": 13199,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13091,
											"end": 13209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 13265,
											"end": 13274,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13261,
											"end": 13280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13248,
											"end": 13281,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 13308,
											"end": 13326,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13300,
											"end": 13306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13297,
											"end": 13327,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 13294,
											"end": 13411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13330,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 13330,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 13330,
											"end": 13409,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13330,
											"end": 13409,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 13330,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13294,
											"end": 13411,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 13294,
											"end": 13411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13435,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13489,
											"end": 13496,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 13480,
											"end": 13486,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13469,
											"end": 13478,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 13465,
											"end": 13487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13435,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 13435,
											"end": 13497,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 13435,
											"end": 13497,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13435,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13425,
											"end": 13497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13425,
											"end": 13497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13219,
											"end": 13507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12425,
											"end": 13514,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13604,
											"end": 13615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13638,
											"end": 13644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13633,
											"end": 13636,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13626,
											"end": 13645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13678,
											"end": 13682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13673,
											"end": 13676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13669,
											"end": 13683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13654,
											"end": 13683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13520,
											"end": 13689,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13695,
											"end": 13860,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 13695,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13852,
											"name": "PUSH",
											"source": 13,
											"value": "416C6C204E465473206661726D65640000000000000000000000000000000000"
										},
										{
											"begin": 13831,
											"end": 13832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13823,
											"end": 13829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13819,
											"end": 13833,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13812,
											"end": 13853,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13695,
											"end": 13860,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14008,
											"end": 14011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14029,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 14093,
											"end": 14095,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 14088,
											"end": 14091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 14029,
											"end": 14096,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14029,
											"end": 14096,
											"name": "tag",
											"source": 13,
											"value": "558"
										},
										{
											"begin": 14029,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14096,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14022,
											"end": 14096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 14194,
											"end": 14197,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14105,
											"end": 14198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 14105,
											"end": 14198,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14105,
											"end": 14198,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 14105,
											"end": 14198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14223,
											"end": 14225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14218,
											"end": 14221,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14214,
											"end": 14226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14207,
											"end": 14226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14207,
											"end": 14226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13866,
											"end": 14232,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14404,
											"end": 14408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14442,
											"end": 14444,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14431,
											"end": 14440,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14427,
											"end": 14445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14445,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14419,
											"end": 14445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14485,
											"end": 14489,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14481,
											"end": 14501,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14466,
											"end": 14475,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14455,
											"end": 14502,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14519,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14645,
											"end": 14649,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14519,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 14519,
											"end": 14650,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 14519,
											"end": 14650,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 14519,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14511,
											"end": 14650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14238,
											"end": 14657,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14663,
											"end": 14832,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 14663,
											"end": 14832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14824,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E7420506F696E747300000000000000000000000000"
										},
										{
											"begin": 14799,
											"end": 14800,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14791,
											"end": 14797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14787,
											"end": 14801,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14780,
											"end": 14825,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14663,
											"end": 14832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14663,
											"end": 14832,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14980,
											"end": 14983,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15001,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 15065,
											"end": 15067,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 15060,
											"end": 15063,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15001,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 15001,
											"end": 15068,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15001,
											"end": 15068,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 15001,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15077,
											"end": 15170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15166,
											"end": 15169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15077,
											"end": 15170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 15077,
											"end": 15170,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15077,
											"end": 15170,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 15077,
											"end": 15170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15195,
											"end": 15197,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15190,
											"end": 15193,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15186,
											"end": 15198,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15179,
											"end": 15198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15179,
											"end": 15198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14838,
											"end": 15204,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15376,
											"end": 15380,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15414,
											"end": 15416,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15403,
											"end": 15412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15399,
											"end": 15417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15417,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15417,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15463,
											"end": 15472,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15457,
											"end": 15461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15453,
											"end": 15473,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15449,
											"end": 15450,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15438,
											"end": 15447,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 15451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15427,
											"end": 15474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15491,
											"end": 15622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15491,
											"end": 15622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 15491,
											"end": 15622,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15491,
											"end": 15622,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 15491,
											"end": 15622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15622,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15483,
											"end": 15622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15629,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15680,
											"end": 15687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15709,
											"end": 15714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15714,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15698,
											"end": 15714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15635,
											"end": 15720,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15793,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15817,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 15835,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 15844,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15844,
											"end": 15876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 15844,
											"end": 15876,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15844,
											"end": 15876,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 15844,
											"end": 15876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15835,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 15835,
											"end": 15877,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15835,
											"end": 15877,
											"name": "tag",
											"source": 13,
											"value": "571"
										},
										{
											"begin": 15835,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15817,
											"end": 15878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 15817,
											"end": 15878,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15817,
											"end": 15878,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 15817,
											"end": 15878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15804,
											"end": 15878,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15804,
											"end": 15878,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15726,
											"end": 15884,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 15890,
											"end": 16037,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 15890,
											"end": 16037,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15985,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 16024,
											"end": 16029,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15985,
											"end": 16030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 15985,
											"end": 16030,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 15985,
											"end": 16030,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 15985,
											"end": 16030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15980,
											"end": 15983,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15973,
											"end": 16031,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 16037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 16037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15890,
											"end": 16037,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16126,
											"end": 16137,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16160,
											"end": 16166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16155,
											"end": 16158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16148,
											"end": 16167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16200,
											"end": 16204,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16191,
											"end": 16205,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16205,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16043,
											"end": 16211,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 16217,
											"end": 16331,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 16217,
											"end": 16331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16217,
											"end": 16331,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16478,
											"end": 16481,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16499,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 16562,
											"end": 16563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16560,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16499,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 16499,
											"end": 16564,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 16499,
											"end": 16564,
											"name": "tag",
											"source": 13,
											"value": "578"
										},
										{
											"begin": 16499,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16492,
											"end": 16564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16492,
											"end": 16564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 16662,
											"end": 16665,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16573,
											"end": 16666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 16573,
											"end": 16666,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 16573,
											"end": 16666,
											"name": "tag",
											"source": 13,
											"value": "579"
										},
										{
											"begin": 16573,
											"end": 16666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 16692,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16686,
											"end": 16689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16682,
											"end": 16693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16337,
											"end": 16699,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16990,
											"end": 16994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17028,
											"end": 17031,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 17017,
											"end": 17026,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17013,
											"end": 17032,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17032,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17005,
											"end": 17032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 17110,
											"end": 17111,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17099,
											"end": 17108,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17095,
											"end": 17112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17086,
											"end": 17092,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 17042,
											"end": 17113,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17042,
											"end": 17113,
											"name": "tag",
											"source": 13,
											"value": "581"
										},
										{
											"begin": 17042,
											"end": 17113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17123,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 17191,
											"end": 17193,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17180,
											"end": 17189,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17176,
											"end": 17194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17167,
											"end": 17173,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 17123,
											"end": 17195,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 17123,
											"end": 17195,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17123,
											"end": 17195,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 17123,
											"end": 17195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17205,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 17273,
											"end": 17275,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17262,
											"end": 17271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17249,
											"end": 17255,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17205,
											"end": 17277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 17205,
											"end": 17277,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17205,
											"end": 17277,
											"name": "tag",
											"source": 13,
											"value": "583"
										},
										{
											"begin": 17205,
											"end": 17277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17287,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 17363,
											"end": 17365,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 17352,
											"end": 17361,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17348,
											"end": 17366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17339,
											"end": 17345,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17287,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 17287,
											"end": 17367,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17287,
											"end": 17367,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 17287,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17415,
											"end": 17424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17409,
											"end": 17413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17405,
											"end": 17425,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17399,
											"end": 17402,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 17388,
											"end": 17397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17384,
											"end": 17403,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17377,
											"end": 17426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17443,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 17568,
											"end": 17572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17443,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 17443,
											"end": 17573,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17443,
											"end": 17573,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 17443,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16705,
											"end": 17580,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17715,
											"end": 17719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17753,
											"end": 17755,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17742,
											"end": 17751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17738,
											"end": 17756,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17730,
											"end": 17756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17730,
											"end": 17756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 17834,
											"end": 17835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17823,
											"end": 17832,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17819,
											"end": 17836,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17810,
											"end": 17816,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17766,
											"end": 17837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 17766,
											"end": 17837,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17766,
											"end": 17837,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 17766,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 17923,
											"end": 17925,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17912,
											"end": 17921,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17908,
											"end": 17926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17899,
											"end": 17905,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17847,
											"end": 17927,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 17847,
											"end": 17927,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 17847,
											"end": 17927,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 17847,
											"end": 17927,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17586,
											"end": 17934,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 17940,
											"end": 18109,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 17940,
											"end": 18109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18080,
											"end": 18101,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E74207374616B656400000000000000000000000000"
										},
										{
											"begin": 18076,
											"end": 18077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18068,
											"end": 18074,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18064,
											"end": 18078,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18057,
											"end": 18102,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 18109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17940,
											"end": 18109,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18257,
											"end": 18260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18278,
											"end": 18345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 18342,
											"end": 18344,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 18337,
											"end": 18340,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18278,
											"end": 18345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 18278,
											"end": 18345,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 18278,
											"end": 18345,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 18278,
											"end": 18345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18345,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18271,
											"end": 18345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 18443,
											"end": 18446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 18354,
											"end": 18447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18472,
											"end": 18474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18467,
											"end": 18470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18463,
											"end": 18475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18456,
											"end": 18475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18456,
											"end": 18475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18115,
											"end": 18481,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18653,
											"end": 18657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18691,
											"end": 18693,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18680,
											"end": 18689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18676,
											"end": 18694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18668,
											"end": 18694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18740,
											"end": 18749,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18734,
											"end": 18738,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18730,
											"end": 18750,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18726,
											"end": 18727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18715,
											"end": 18724,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18711,
											"end": 18728,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18704,
											"end": 18751,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18768,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 18894,
											"end": 18898,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18768,
											"end": 18899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 18768,
											"end": 18899,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 18768,
											"end": 18899,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 18768,
											"end": 18899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18760,
											"end": 18899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18760,
											"end": 18899,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18487,
											"end": 18906,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 18912,
											"end": 19094,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 18912,
											"end": 19094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19052,
											"end": 19086,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 19048,
											"end": 19049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19036,
											"end": 19050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19029,
											"end": 19087,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18912,
											"end": 19094,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18912,
											"end": 19094,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19242,
											"end": 19245,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19263,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 19327,
											"end": 19329,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19322,
											"end": 19325,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19263,
											"end": 19330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 19263,
											"end": 19330,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19263,
											"end": 19330,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 19263,
											"end": 19330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19330,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19256,
											"end": 19330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19339,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 19428,
											"end": 19431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19339,
											"end": 19432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 19339,
											"end": 19432,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19339,
											"end": 19432,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 19339,
											"end": 19432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19457,
											"end": 19459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19452,
											"end": 19455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19448,
											"end": 19460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19441,
											"end": 19460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19441,
											"end": 19460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19466,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19638,
											"end": 19642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19678,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19665,
											"end": 19674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19661,
											"end": 19679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19725,
											"end": 19734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19719,
											"end": 19723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19715,
											"end": 19735,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19711,
											"end": 19712,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19700,
											"end": 19709,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19696,
											"end": 19713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19736,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19753,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 19879,
											"end": 19883,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19753,
											"end": 19884,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 19753,
											"end": 19884,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 19753,
											"end": 19884,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 19753,
											"end": 19884,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19884,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19745,
											"end": 19884,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19472,
											"end": 19891,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 19897,
											"end": 20077,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 19897,
											"end": 20077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19945,
											"end": 20022,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19942,
											"end": 19943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19935,
											"end": 20023,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20042,
											"end": 20046,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 20039,
											"end": 20040,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20032,
											"end": 20047,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20066,
											"end": 20070,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20063,
											"end": 20064,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20056,
											"end": 20071,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20123,
											"end": 20126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 20160,
											"end": 20161,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "tag",
											"source": 13,
											"value": "603"
										},
										{
											"begin": 20142,
											"end": 20162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20137,
											"end": 20162,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20137,
											"end": 20162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 20194,
											"end": 20195,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 20176,
											"end": 20196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20171,
											"end": 20196,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20171,
											"end": 20196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20330,
											"end": 20331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20262,
											"end": 20328,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20258,
											"end": 20332,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20255,
											"end": 20256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20252,
											"end": 20333,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 20249,
											"end": 20356,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20249,
											"end": 20356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 20249,
											"end": 20356,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20249,
											"end": 20356,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 20249,
											"end": 20356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20380,
											"end": 20381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20377,
											"end": 20378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20373,
											"end": 20382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20366,
											"end": 20382,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20366,
											"end": 20382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20083,
											"end": 20388,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20434,
											"end": 20438,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20454,
											"end": 20474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 20472,
											"end": 20473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20454,
											"end": 20474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20454,
											"end": 20474,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20454,
											"end": 20474,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 20454,
											"end": 20474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20449,
											"end": 20474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20449,
											"end": 20474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20488,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 20506,
											"end": 20507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20488,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20488,
											"end": 20508,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20488,
											"end": 20508,
											"name": "tag",
											"source": 13,
											"value": "609"
										},
										{
											"begin": 20488,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20483,
											"end": 20508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20483,
											"end": 20508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20527,
											"end": 20528,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20524,
											"end": 20525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20521,
											"end": 20529,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20552,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 20518,
											"end": 20552,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20532,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 20532,
											"end": 20550,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 20532,
											"end": 20550,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20532,
											"end": 20550,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 20532,
											"end": 20550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20518,
											"end": 20552,
											"name": "tag",
											"source": 13,
											"value": "610"
										},
										{
											"begin": 20518,
											"end": 20552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20577,
											"end": 20578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20574,
											"end": 20575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20570,
											"end": 20579,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20562,
											"end": 20579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20562,
											"end": 20579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20394,
											"end": 20585,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 20591,
											"end": 20771,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 20591,
											"end": 20771,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20639,
											"end": 20716,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20636,
											"end": 20637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20629,
											"end": 20717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20736,
											"end": 20740,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 20733,
											"end": 20734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 20726,
											"end": 20741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20760,
											"end": 20764,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 20757,
											"end": 20758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20750,
											"end": 20765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20816,
											"end": 20819,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20839,
											"end": 20863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 20857,
											"end": 20862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20839,
											"end": 20863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 20839,
											"end": 20863,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20839,
											"end": 20863,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 20839,
											"end": 20863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20830,
											"end": 20863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20830,
											"end": 20863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20885,
											"end": 20951,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20878,
											"end": 20883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20875,
											"end": 20952,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20872,
											"end": 20975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 20872,
											"end": 20975,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 20955,
											"end": 20973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20872,
											"end": 20975,
											"name": "tag",
											"source": 13,
											"value": "615"
										},
										{
											"begin": 20872,
											"end": 20975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21002,
											"end": 21003,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 20995,
											"end": 21000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20991,
											"end": 21004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20984,
											"end": 21004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20984,
											"end": 21004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20777,
											"end": 21010,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21083,
											"end": 21089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21117,
											"end": 21122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21111,
											"end": 21123,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21101,
											"end": 21123,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21101,
											"end": 21123,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21016,
											"end": 21130,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21235,
											"end": 21246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21269,
											"end": 21275,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21264,
											"end": 21267,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21257,
											"end": 21276,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21309,
											"end": 21313,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21304,
											"end": 21307,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21300,
											"end": 21314,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21314,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21285,
											"end": 21314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21320,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21393,
											"end": 21397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21416,
											"end": 21419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21408,
											"end": 21419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21408,
											"end": 21419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21446,
											"end": 21450,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21441,
											"end": 21444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21437,
											"end": 21451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21429,
											"end": 21451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21429,
											"end": 21451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21326,
											"end": 21458,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21464,
											"end": 21572,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 21464,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 21559,
											"end": 21564,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21541,
											"end": 21565,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 21541,
											"end": 21565,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 21541,
											"end": 21565,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 21541,
											"end": 21565,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21536,
											"end": 21539,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21529,
											"end": 21566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21464,
											"end": 21572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21464,
											"end": 21572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21464,
											"end": 21572,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21647,
											"end": 21657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21668,
											"end": 21714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 21710,
											"end": 21713,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21702,
											"end": 21708,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21668,
											"end": 21714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 21668,
											"end": 21714,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 21668,
											"end": 21714,
											"name": "tag",
											"source": 13,
											"value": "623"
										},
										{
											"begin": 21668,
											"end": 21714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 21750,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21741,
											"end": 21744,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21737,
											"end": 21751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21723,
											"end": 21751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21723,
											"end": 21751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21578,
											"end": 21757,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21833,
											"end": 21837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21865,
											"end": 21869,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21860,
											"end": 21863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21856,
											"end": 21870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21848,
											"end": 21870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21848,
											"end": 21870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21763,
											"end": 21876,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22031,
											"end": 22034,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22060,
											"end": 22114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 22108,
											"end": 22113,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22060,
											"end": 22114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 22060,
											"end": 22114,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 22060,
											"end": 22114,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 22060,
											"end": 22114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22130,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 22209,
											"end": 22215,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22204,
											"end": 22207,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22130,
											"end": 22216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 22130,
											"end": 22216,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 22130,
											"end": 22216,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 22130,
											"end": 22216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22123,
											"end": 22216,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22123,
											"end": 22216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 22290,
											"end": 22295,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22240,
											"end": 22296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 22240,
											"end": 22296,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 22240,
											"end": 22296,
											"name": "tag",
											"source": 13,
											"value": "628"
										},
										{
											"begin": 22240,
											"end": 22296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22319,
											"end": 22326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 22350,
											"end": 22351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22360,
											"end": 22366,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22357,
											"end": 22358,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22354,
											"end": 22367,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 22436,
											"end": 22442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22430,
											"end": 22443,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 22463,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 22522,
											"end": 22525,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 22507,
											"end": 22520,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22463,
											"end": 22526,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 22463,
											"end": 22526,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 22463,
											"end": 22526,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 22463,
											"end": 22526,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22456,
											"end": 22526,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 22456,
											"end": 22526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22549,
											"end": 22609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 22602,
											"end": 22608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22549,
											"end": 22609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 22549,
											"end": 22609,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 22549,
											"end": 22609,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 22549,
											"end": 22609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22539,
											"end": 22609,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22539,
											"end": 22609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22395,
											"end": 22619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22382,
											"end": 22383,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 22379,
											"end": 22380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22375,
											"end": 22384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22370,
											"end": 22384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22370,
											"end": 22384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "tag",
											"source": 13,
											"value": "631"
										},
										{
											"begin": 22335,
											"end": 22619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22339,
											"end": 22353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22635,
											"end": 22638,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22628,
											"end": 22638,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22628,
											"end": 22638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22036,
											"end": 22644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21912,
											"end": 22644,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23027,
											"end": 23031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23065,
											"end": 23068,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 23054,
											"end": 23063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23050,
											"end": 23069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23042,
											"end": 23069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23042,
											"end": 23069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23079,
											"end": 23150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 23147,
											"end": 23148,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23136,
											"end": 23145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23132,
											"end": 23149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23123,
											"end": 23129,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 23079,
											"end": 23150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 23079,
											"end": 23150,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 23079,
											"end": 23150,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 23079,
											"end": 23150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23160,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 23228,
											"end": 23230,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23217,
											"end": 23226,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23213,
											"end": 23231,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23204,
											"end": 23210,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23160,
											"end": 23232,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 23160,
											"end": 23232,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 23160,
											"end": 23232,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 23160,
											"end": 23232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23279,
											"end": 23288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23273,
											"end": 23277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23269,
											"end": 23289,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23264,
											"end": 23266,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23253,
											"end": 23262,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23249,
											"end": 23267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23242,
											"end": 23290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23307,
											"end": 23415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 23410,
											"end": 23414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23401,
											"end": 23407,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23307,
											"end": 23415,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 23307,
											"end": 23415,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 23307,
											"end": 23415,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 23307,
											"end": 23415,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23299,
											"end": 23415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23299,
											"end": 23415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23462,
											"end": 23471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23456,
											"end": 23460,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23452,
											"end": 23472,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23447,
											"end": 23449,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23436,
											"end": 23445,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23432,
											"end": 23450,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23425,
											"end": 23473,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23490,
											"end": 23598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 23593,
											"end": 23597,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23584,
											"end": 23590,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23490,
											"end": 23598,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 23490,
											"end": 23598,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 23490,
											"end": 23598,
											"name": "tag",
											"source": 13,
											"value": "638"
										},
										{
											"begin": 23490,
											"end": 23598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23482,
											"end": 23598,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23482,
											"end": 23598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23646,
											"end": 23655,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23640,
											"end": 23644,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23636,
											"end": 23656,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23630,
											"end": 23633,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 23619,
											"end": 23628,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23615,
											"end": 23634,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23608,
											"end": 23657,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23674,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 23799,
											"end": 23803,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23674,
											"end": 23804,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 23674,
											"end": 23804,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 23674,
											"end": 23804,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 23674,
											"end": 23804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23666,
											"end": 23804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23666,
											"end": 23804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22650,
											"end": 23811,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 23817,
											"end": 24042,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 23817,
											"end": 24042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23957,
											"end": 23991,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 23953,
											"end": 23954,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23945,
											"end": 23951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23941,
											"end": 23955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23934,
											"end": 23992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24026,
											"end": 24034,
											"name": "PUSH",
											"source": 13,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24021,
											"end": 24023,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24013,
											"end": 24019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24009,
											"end": 24024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24002,
											"end": 24035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23817,
											"end": 24042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23817,
											"end": 24042,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24190,
											"end": 24193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24211,
											"end": 24278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 24275,
											"end": 24277,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 24270,
											"end": 24273,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24211,
											"end": 24278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 24211,
											"end": 24278,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 24211,
											"end": 24278,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 24211,
											"end": 24278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24204,
											"end": 24278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24204,
											"end": 24278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24287,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 24376,
											"end": 24379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24287,
											"end": 24380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 24287,
											"end": 24380,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 24287,
											"end": 24380,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 24287,
											"end": 24380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24405,
											"end": 24407,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24400,
											"end": 24403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24396,
											"end": 24408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24389,
											"end": 24408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24389,
											"end": 24408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24048,
											"end": 24414,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24586,
											"end": 24590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24624,
											"end": 24626,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24613,
											"end": 24622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24609,
											"end": 24627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24601,
											"end": 24627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24601,
											"end": 24627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24673,
											"end": 24682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24667,
											"end": 24671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24663,
											"end": 24683,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24659,
											"end": 24660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24648,
											"end": 24657,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24644,
											"end": 24661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24637,
											"end": 24684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24701,
											"end": 24832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 24827,
											"end": 24831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24701,
											"end": 24832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 24701,
											"end": 24832,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 24701,
											"end": 24832,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 24701,
											"end": 24832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24693,
											"end": 24832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24693,
											"end": 24832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24420,
											"end": 24839,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 24845,
											"end": 25068,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 24845,
											"end": 25068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24985,
											"end": 25019,
											"name": "PUSH",
											"source": 13,
											"value": "4172726179466F7255696E743235363A20696E646578206F7574206F6620626F"
										},
										{
											"begin": 24981,
											"end": 24982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24973,
											"end": 24979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24969,
											"end": 24983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24962,
											"end": 25020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25054,
											"end": 25060,
											"name": "PUSH",
											"source": 13,
											"value": "756E647300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25049,
											"end": 25051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25041,
											"end": 25047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25037,
											"end": 25052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25030,
											"end": 25061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24845,
											"end": 25068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24845,
											"end": 25068,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25216,
											"end": 25219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25237,
											"end": 25304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 25301,
											"end": 25303,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 25296,
											"end": 25299,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25237,
											"end": 25304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 25237,
											"end": 25304,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 25237,
											"end": 25304,
											"name": "tag",
											"source": 13,
											"value": "648"
										},
										{
											"begin": 25237,
											"end": 25304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25230,
											"end": 25304,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25230,
											"end": 25304,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25313,
											"end": 25406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 25402,
											"end": 25405,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25313,
											"end": 25406,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 25313,
											"end": 25406,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 25313,
											"end": 25406,
											"name": "tag",
											"source": 13,
											"value": "649"
										},
										{
											"begin": 25313,
											"end": 25406,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25431,
											"end": 25433,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 25426,
											"end": 25429,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25422,
											"end": 25434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25415,
											"end": 25434,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25415,
											"end": 25434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25074,
											"end": 25440,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25612,
											"end": 25616,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25650,
											"end": 25652,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25639,
											"end": 25648,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25635,
											"end": 25653,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25627,
											"end": 25653,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25627,
											"end": 25653,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25699,
											"end": 25708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25693,
											"end": 25697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25689,
											"end": 25709,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25685,
											"end": 25686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25674,
											"end": 25683,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25670,
											"end": 25687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25663,
											"end": 25710,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25727,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 25853,
											"end": 25857,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25727,
											"end": 25858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 25727,
											"end": 25858,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 25727,
											"end": 25858,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 25727,
											"end": 25858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25719,
											"end": 25858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25719,
											"end": 25858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25446,
											"end": 25865,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 25871,
											"end": 26051,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 25871,
											"end": 26051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25919,
											"end": 25996,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25916,
											"end": 25917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25909,
											"end": 25997,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26016,
											"end": 26020,
											"name": "PUSH",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 26013,
											"end": 26014,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 26006,
											"end": 26021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 26040,
											"end": 26044,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 26037,
											"end": 26038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26030,
											"end": 26045,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26178,
											"end": 26182,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26216,
											"end": 26218,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 26205,
											"end": 26214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26201,
											"end": 26219,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26193,
											"end": 26219,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26193,
											"end": 26219,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26229,
											"end": 26300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 26297,
											"end": 26298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26286,
											"end": 26295,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26282,
											"end": 26299,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26273,
											"end": 26279,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26229,
											"end": 26300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 26229,
											"end": 26300,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26229,
											"end": 26300,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 26229,
											"end": 26300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26310,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 26378,
											"end": 26380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26376,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26363,
											"end": 26381,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26354,
											"end": 26360,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26310,
											"end": 26382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 26310,
											"end": 26382,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26310,
											"end": 26382,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 26310,
											"end": 26382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26057,
											"end": 26389,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26544,
											"end": 26548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26582,
											"end": 26584,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 26571,
											"end": 26580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26567,
											"end": 26585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26559,
											"end": 26585,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 26559,
											"end": 26585,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26595,
											"end": 26666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 26663,
											"end": 26664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26652,
											"end": 26661,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26648,
											"end": 26665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26639,
											"end": 26645,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 26595,
											"end": 26666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 26595,
											"end": 26666,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26595,
											"end": 26666,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 26595,
											"end": 26666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26676,
											"end": 26748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 26744,
											"end": 26746,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 26733,
											"end": 26742,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26729,
											"end": 26747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26720,
											"end": 26726,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 26676,
											"end": 26748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 26676,
											"end": 26748,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26676,
											"end": 26748,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 26676,
											"end": 26748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26758,
											"end": 26830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 26826,
											"end": 26828,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 26815,
											"end": 26824,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26811,
											"end": 26829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 26802,
											"end": 26808,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 26758,
											"end": 26830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 26758,
											"end": 26830,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26758,
											"end": 26830,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 26758,
											"end": 26830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26395,
											"end": 26837,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26883,
											"end": 26890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 26924,
											"end": 26925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 26906,
											"end": 26926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26901,
											"end": 26926,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26901,
											"end": 26926,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26940,
											"end": 26960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 26958,
											"end": 26959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 26940,
											"end": 26960,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 26940,
											"end": 26960,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 26940,
											"end": 26960,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 26940,
											"end": 26960,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 26935,
											"end": 26960,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26935,
											"end": 26960,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27128,
											"end": 27129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27060,
											"end": 27126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27056,
											"end": 27130,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 27053,
											"end": 27054,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 27050,
											"end": 27131,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 27045,
											"end": 27046,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27038,
											"end": 27047,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27031,
											"end": 27048,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27027,
											"end": 27132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 27024,
											"end": 27155,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27024,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 27024,
											"end": 27155,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27135,
											"end": 27153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 27135,
											"end": 27153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 27135,
											"end": 27153,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 27135,
											"end": 27153,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 27135,
											"end": 27153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27024,
											"end": 27155,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 27024,
											"end": 27155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27183,
											"end": 27184,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27180,
											"end": 27181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27176,
											"end": 27185,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 27165,
											"end": 27185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27165,
											"end": 27185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 26843,
											"end": 27191,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 27197,
											"end": 27313,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 27197,
											"end": 27313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27267,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 27282,
											"end": 27287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27267,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 27267,
											"end": 27288,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 27267,
											"end": 27288,
											"name": "tag",
											"source": 13,
											"value": "666"
										},
										{
											"begin": 27267,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27260,
											"end": 27265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27257,
											"end": 27289,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 27247,
											"end": 27307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 27247,
											"end": 27307,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27303,
											"end": 27304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27300,
											"end": 27301,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 27293,
											"end": 27305,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 27247,
											"end": 27307,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 27247,
											"end": 27307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27197,
											"end": 27313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27197,
											"end": 27313,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27373,
											"end": 27378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27404,
											"end": 27410,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27398,
											"end": 27411,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 27389,
											"end": 27411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 27389,
											"end": 27411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27420,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 27444,
											"end": 27449,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 27420,
											"end": 27450,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 27420,
											"end": 27450,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 27420,
											"end": 27450,
											"name": "tag",
											"source": 13,
											"value": "669"
										},
										{
											"begin": 27420,
											"end": 27450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27319,
											"end": 27456,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27529,
											"end": 27535,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27578,
											"end": 27580,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 27566,
											"end": 27575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27557,
											"end": 27564,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27553,
											"end": 27576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 27549,
											"end": 27581,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 27546,
											"end": 27665,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 27546,
											"end": 27665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 27546,
											"end": 27665,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 27584,
											"end": 27663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 27584,
											"end": 27663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 27584,
											"end": 27663,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 27584,
											"end": 27663,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 27584,
											"end": 27663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27546,
											"end": 27665,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 27546,
											"end": 27665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27704,
											"end": 27705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27729,
											"end": 27790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 27782,
											"end": 27789,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 27773,
											"end": 27779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27762,
											"end": 27771,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 27758,
											"end": 27780,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27729,
											"end": 27790,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 27729,
											"end": 27790,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 27729,
											"end": 27790,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 27729,
											"end": 27790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27719,
											"end": 27790,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27719,
											"end": 27790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27675,
											"end": 27800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27462,
											"end": 27807,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 27813,
											"end": 28042,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 27813,
											"end": 28042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 27953,
											"end": 27987,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 27949,
											"end": 27950,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 27941,
											"end": 27947,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 27937,
											"end": 27951,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27930,
											"end": 27988,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28022,
											"end": 28034,
											"name": "PUSH",
											"source": 13,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 28017,
											"end": 28019,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28009,
											"end": 28015,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28005,
											"end": 28020,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 27998,
											"end": 28035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 27813,
											"end": 28042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 27813,
											"end": 28042,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28190,
											"end": 28193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28211,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 28275,
											"end": 28277,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 28270,
											"end": 28273,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28211,
											"end": 28278,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 28211,
											"end": 28278,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 28211,
											"end": 28278,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 28211,
											"end": 28278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28204,
											"end": 28278,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28204,
											"end": 28278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28287,
											"end": 28380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 28376,
											"end": 28379,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28287,
											"end": 28380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 28287,
											"end": 28380,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 28287,
											"end": 28380,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 28287,
											"end": 28380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28405,
											"end": 28407,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 28400,
											"end": 28403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28396,
											"end": 28408,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28389,
											"end": 28408,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28389,
											"end": 28408,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28048,
											"end": 28414,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28586,
											"end": 28590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28624,
											"end": 28626,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 28613,
											"end": 28622,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28609,
											"end": 28627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28601,
											"end": 28627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28601,
											"end": 28627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28673,
											"end": 28682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28667,
											"end": 28671,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28663,
											"end": 28683,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 28659,
											"end": 28660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28648,
											"end": 28657,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 28644,
											"end": 28661,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28637,
											"end": 28684,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28701,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 28827,
											"end": 28831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 28701,
											"end": 28832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 28701,
											"end": 28832,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 28701,
											"end": 28832,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 28701,
											"end": 28832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28693,
											"end": 28832,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28693,
											"end": 28832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28420,
											"end": 28839,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 28845,
											"end": 29070,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 28845,
											"end": 29070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 28985,
											"end": 29019,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 28981,
											"end": 28982,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 28973,
											"end": 28979,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 28969,
											"end": 28983,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 28962,
											"end": 29020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29054,
											"end": 29062,
											"name": "PUSH",
											"source": 13,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29049,
											"end": 29051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29041,
											"end": 29047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29037,
											"end": 29052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29030,
											"end": 29063,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 28845,
											"end": 29070,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 28845,
											"end": 29070,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29218,
											"end": 29221,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29239,
											"end": 29306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 29303,
											"end": 29305,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 29298,
											"end": 29301,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29239,
											"end": 29306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 29239,
											"end": 29306,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 29239,
											"end": 29306,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 29239,
											"end": 29306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29232,
											"end": 29306,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29232,
											"end": 29306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29315,
											"end": 29408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 29404,
											"end": 29407,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29315,
											"end": 29408,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 29315,
											"end": 29408,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 29315,
											"end": 29408,
											"name": "tag",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 29315,
											"end": 29408,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29433,
											"end": 29435,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 29428,
											"end": 29431,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29424,
											"end": 29436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29417,
											"end": 29436,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29417,
											"end": 29436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29076,
											"end": 29442,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29614,
											"end": 29618,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29652,
											"end": 29654,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 29641,
											"end": 29650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29637,
											"end": 29655,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29629,
											"end": 29655,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29629,
											"end": 29655,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29701,
											"end": 29710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29695,
											"end": 29699,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29691,
											"end": 29711,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 29687,
											"end": 29688,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 29676,
											"end": 29685,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 29672,
											"end": 29689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29665,
											"end": 29712,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29729,
											"end": 29860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 29855,
											"end": 29859,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 29729,
											"end": 29860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 29729,
											"end": 29860,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 29729,
											"end": 29860,
											"name": "tag",
											"source": 13,
											"value": "685"
										},
										{
											"begin": 29729,
											"end": 29860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 29721,
											"end": 29860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29721,
											"end": 29860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29448,
											"end": 29867,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 29873,
											"end": 30052,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 29873,
											"end": 30052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30013,
											"end": 30044,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 30009,
											"end": 30010,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30001,
											"end": 30007,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 29997,
											"end": 30011,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 29990,
											"end": 30045,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 29873,
											"end": 30052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 29873,
											"end": 30052,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30200,
											"end": 30203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30221,
											"end": 30288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 30285,
											"end": 30287,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 30280,
											"end": 30283,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30221,
											"end": 30288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 30221,
											"end": 30288,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 30221,
											"end": 30288,
											"name": "tag",
											"source": 13,
											"value": "688"
										},
										{
											"begin": 30221,
											"end": 30288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30214,
											"end": 30288,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30214,
											"end": 30288,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30297,
											"end": 30390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 30386,
											"end": 30389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30297,
											"end": 30390,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 30297,
											"end": 30390,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 30297,
											"end": 30390,
											"name": "tag",
											"source": 13,
											"value": "689"
										},
										{
											"begin": 30297,
											"end": 30390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30415,
											"end": 30417,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30410,
											"end": 30413,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30406,
											"end": 30418,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30399,
											"end": 30418,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30399,
											"end": 30418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30058,
											"end": 30424,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30596,
											"end": 30600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30634,
											"end": 30636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 30623,
											"end": 30632,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 30619,
											"end": 30637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30611,
											"end": 30637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30611,
											"end": 30637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30683,
											"end": 30692,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30677,
											"end": 30681,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30673,
											"end": 30693,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 30669,
											"end": 30670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30658,
											"end": 30667,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 30654,
											"end": 30671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 30647,
											"end": 30694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 30711,
											"end": 30842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 30837,
											"end": 30841,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30711,
											"end": 30842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 30711,
											"end": 30842,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 30711,
											"end": 30842,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 30711,
											"end": 30842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30703,
											"end": 30842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30703,
											"end": 30842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30430,
											"end": 30849,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 30906,
											"end": 30912,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 30940,
											"end": 30945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 30934,
											"end": 30946,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 30924,
											"end": 30946,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30924,
											"end": 30946,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30855,
											"end": 30953,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31060,
											"end": 31071,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31097,
											"end": 31100,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31082,
											"end": 31100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31082,
											"end": 31100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 30959,
											"end": 31106,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31180,
											"end": 31181,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "tag",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31204,
											"end": 31210,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31201,
											"end": 31202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31198,
											"end": 31211,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 31289,
											"end": 31290,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 31284,
											"end": 31287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31280,
											"end": 31291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31274,
											"end": 31292,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 31270,
											"end": 31271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31265,
											"end": 31268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31261,
											"end": 31272,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31254,
											"end": 31293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31226,
											"end": 31228,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 31223,
											"end": 31224,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31219,
											"end": 31229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31214,
											"end": 31229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 31214,
											"end": 31229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "695"
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "tag",
											"source": 13,
											"value": "697"
										},
										{
											"begin": 31190,
											"end": 31303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31321,
											"end": 31327,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 31318,
											"end": 31319,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31315,
											"end": 31328,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 31312,
											"end": 31413,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 31312,
											"end": 31413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 31312,
											"end": 31413,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 31401,
											"end": 31402,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31392,
											"end": 31398,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31387,
											"end": 31390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31383,
											"end": 31399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31376,
											"end": 31403,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 31312,
											"end": 31413,
											"name": "tag",
											"source": 13,
											"value": "698"
										},
										{
											"begin": 31312,
											"end": 31413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31161,
											"end": 31419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31112,
											"end": 31419,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31529,
											"end": 31532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31557,
											"end": 31595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 31589,
											"end": 31594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 31557,
											"end": 31595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 31557,
											"end": 31595,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 31557,
											"end": 31595,
											"name": "tag",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 31557,
											"end": 31595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31611,
											"end": 31699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 31692,
											"end": 31698,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31687,
											"end": 31690,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 31611,
											"end": 31699,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 31611,
											"end": 31699,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 31611,
											"end": 31699,
											"name": "tag",
											"source": 13,
											"value": "701"
										},
										{
											"begin": 31611,
											"end": 31699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31604,
											"end": 31699,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 31604,
											"end": 31699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31708,
											"end": 31760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 31753,
											"end": 31759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 31748,
											"end": 31751,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 31741,
											"end": 31745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 31734,
											"end": 31739,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 31730,
											"end": 31746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31708,
											"end": 31760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 31708,
											"end": 31760,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 31708,
											"end": 31760,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 31708,
											"end": 31760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31785,
											"end": 31791,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 31780,
											"end": 31783,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31776,
											"end": 31792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 31769,
											"end": 31792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31769,
											"end": 31792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31533,
											"end": 31798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31425,
											"end": 31798,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31934,
											"end": 31937,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 31956,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 32045,
											"end": 32048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32036,
											"end": 32042,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 31956,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 31956,
											"end": 32049,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 31956,
											"end": 32049,
											"name": "tag",
											"source": 13,
											"value": "704"
										},
										{
											"begin": 31956,
											"end": 32049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 31949,
											"end": 32049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31949,
											"end": 32049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32066,
											"end": 32069,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32059,
											"end": 32069,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32059,
											"end": 32069,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 31804,
											"end": 32075,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32133,
											"end": 32139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32167,
											"end": 32172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32161,
											"end": 32173,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 32151,
											"end": 32173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32151,
											"end": 32173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32081,
											"end": 32180,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32274,
											"end": 32277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32302,
											"end": 32341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 32335,
											"end": 32340,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32302,
											"end": 32341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 32302,
											"end": 32341,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 32302,
											"end": 32341,
											"name": "tag",
											"source": 13,
											"value": "707"
										},
										{
											"begin": 32302,
											"end": 32341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32357,
											"end": 32428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 32421,
											"end": 32427,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32416,
											"end": 32419,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 32357,
											"end": 32428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 32357,
											"end": 32428,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 32357,
											"end": 32428,
											"name": "tag",
											"source": 13,
											"value": "708"
										},
										{
											"begin": 32357,
											"end": 32428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32350,
											"end": 32428,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 32350,
											"end": 32428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32437,
											"end": 32489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 32482,
											"end": 32488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32477,
											"end": 32480,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 32470,
											"end": 32474,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 32463,
											"end": 32468,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 32459,
											"end": 32475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32437,
											"end": 32489,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 32437,
											"end": 32489,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 32437,
											"end": 32489,
											"name": "tag",
											"source": 13,
											"value": "709"
										},
										{
											"begin": 32437,
											"end": 32489,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32514,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 32536,
											"end": 32542,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32514,
											"end": 32543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 32514,
											"end": 32543,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 32514,
											"end": 32543,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 32514,
											"end": 32543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32509,
											"end": 32512,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32505,
											"end": 32544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32498,
											"end": 32544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 32498,
											"end": 32544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32278,
											"end": 32550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32186,
											"end": 32550,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32669,
											"end": 32673,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32707,
											"end": 32709,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 32696,
											"end": 32705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 32692,
											"end": 32710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32684,
											"end": 32710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32684,
											"end": 32710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32756,
											"end": 32765,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32750,
											"end": 32754,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32746,
											"end": 32766,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 32742,
											"end": 32743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 32731,
											"end": 32740,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 32727,
											"end": 32744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 32720,
											"end": 32767,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 32784,
											"end": 32862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 32857,
											"end": 32861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 32848,
											"end": 32854,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 32784,
											"end": 32862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 32784,
											"end": 32862,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 32784,
											"end": 32862,
											"name": "tag",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 32784,
											"end": 32862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 32776,
											"end": 32862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 32776,
											"end": 32862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 32556,
											"end": 32869,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addNFTBatch(address,uint256[],uint256[])": "63c66891",
							"addNftBatchWithNumber(address,uint256,uint256)": "4b02218f",
							"claim(address)": "1e83409a",
							"exit()": "e9fad8ee",
							"getNextNftTokenId()": "55ac2fd3",
							"getThreshold()": "e75235b8",
							"lpToken()": "5fcbd285",
							"nftCount()": "0af2c6ca",
							"nftIds(uint256)": "c6c9bd47",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"pointsBalance(address)": "25ca4cff",
							"renounceOwnership()": "715018a6",
							"stake(uint256)": "a694fc3a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"users(address)": "a87430ba",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"NFTAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"addNFTBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"idsNumber\",\"type\":\"uint256\"}],\"name\":\"addNftBatchWithNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContractAddress\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextNftTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"nftIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"pointsBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pointsDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"Farming\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0xf22ec57b94dd4d617ce3d606cf4824eb580de9f142eb26b3ddfa6363e92fe762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd333e583327df0a2eefeba38ee3cb2c32458bdcc2c89bd1a962fd8c64f7b18\",\"dweb:/ipfs/Qme1x9BhgcvFXvuAQvbdiSoioYhQqPbQ3Egb4wtZcwDAos\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xff419f22f3a06f6cd02691a009684a7f867d6d4e172b2f52737b50f834a72396\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e6cfb228f9963fe6dde878e712fbb5c9b9816dd13c8fc0b592d8262157795e9\",\"dweb:/ipfs/QmU8wSfCv3H4pWFnKzrA9ZY7WDerZ3DrxaR4dU8qmqZdQh\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1375,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 878,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "lpToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)1798"
							},
							{
								"astId": 881,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "nftIds",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 886,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "users",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(UserInfo)866_storage)"
							},
							{
								"astId": 889,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "lpUnitValue",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 892,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "timeUnitValue",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 901,
								"contract": "nft/LPStakeWithdrawNft.sol:Farming",
								"label": "threshold",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1798": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)866_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Farming.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)866_storage"
							},
							"t_struct(UserInfo)866_storage": {
								"encoding": "inplace",
								"label": "struct Farming.UserInfo",
								"members": [
									{
										"astId": 861,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 863,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "lastUpdateTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 865,
										"contract": "nft/LPStakeWithdrawNft.sol:Farming",
										"label": "pointsDebt",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibArrayForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":2267:6644  library LibArrayForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":2267:6644  library LibArrayForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017e93f5fbb39179ba451f97810d3516be61c3b971872401bc672be1fb8de9a7f64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017e93f5fbb39179ba451f97810d3516be61c3b971872401bc672be1fb8de9a7f64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xE9 EXTCODEHASH 0x5F 0xBB CODECOPY OR SWAP12 LOG4 MLOAD 0xF9 PUSH25 0x10D3516BE61C3B971872401BC672BE1FB8DE9A7F64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017e93f5fbb39179ba451f97810d3516be61c3b971872401bc672be1fb8de9a7f64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xE9 EXTCODEHASH 0x5F 0xBB CODECOPY OR SWAP12 LOG4 MLOAD 0xF9 PUSH25 0x10D3516BE61C3B971872401BC672BE1FB8DE9A7F64736F6C63 NUMBER STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "2267:4377:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"addValue(uint256[] storage pointer,uint256)": "infinite",
								"binarySearch(uint256[] storage pointer,uint256)": "infinite",
								"distinct(uint256[] storage pointer)": "infinite",
								"equals(uint256[] storage pointer,uint256[] storage pointer)": "infinite",
								"extend(uint256[] storage pointer,uint256[] memory)": "infinite",
								"firstIndexOf(uint256[] storage pointer,uint256)": "infinite",
								"max(uint256[] storage pointer)": "infinite",
								"min(uint256[] storage pointer)": "infinite",
								"removeByIndex(uint256[] storage pointer,uint256)": "infinite",
								"removeByValue(uint256[] storage pointer,uint256)": "infinite",
								"reverse(uint256[] storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2267,
									"end": 6644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017e93f5fbb39179ba451f97810d3516be61c3b971872401bc672be1fb8de9a7f64736f6c634300080d0033",
									".code": [
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2267,
											"end": 6644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"LibArrayForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0xf22ec57b94dd4d617ce3d606cf4824eb580de9f142eb26b3ddfa6363e92fe762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd333e583327df0a2eefeba38ee3cb2c32458bdcc2c89bd1a962fd8c64f7b18\",\"dweb:/ipfs/Qme1x9BhgcvFXvuAQvbdiSoioYhQqPbQ3Egb4wtZcwDAos\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xff419f22f3a06f6cd02691a009684a7f867d6d4e172b2f52737b50f834a72396\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e6cfb228f9963fe6dde878e712fbb5c9b9816dd13c8fc0b592d8262157795e9\",\"dweb:/ipfs/QmU8wSfCv3H4pWFnKzrA9ZY7WDerZ3DrxaR4dU8qmqZdQh\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"LibSafeMathForUint256Utils": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft/LPStakeWithdrawNft.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft/LPStakeWithdrawNft.sol\":559:2263  library LibSafeMathForUint256Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b3cdc771710bc8f194d096fdb98dac7cf3cce137d6829972622514e99fc9944c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3cdc771710bc8f194d096fdb98dac7cf3cce137d6829972622514e99fc9944c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xCD 0xC7 PUSH18 0x710BC8F194D096FDB98DAC7CF3CCE137D682 SWAP10 PUSH19 0x622514E99FC9944C64736F6C634300080D0033 ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b3cdc771710bc8f194d096fdb98dac7cf3cce137d6829972622514e99fc9944c64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xCD 0xC7 PUSH18 0x710BC8F194D096FDB98DAC7CF3CCE137D682 SWAP10 PUSH19 0x622514E99FC9944C64736F6C634300080D0033 ",
							"sourceMap": "559:1704:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"average(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"power(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 559,
									"end": 2263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3cdc771710bc8f194d096fdb98dac7cf3cce137d6829972622514e99fc9944c64736f6c634300080d0033",
									".code": [
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 559,
											"end": 2263,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft/LPStakeWithdrawNft.sol\":\"LibSafeMathForUint256Utils\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft/LPStakeWithdrawNft.sol\":{\"keccak256\":\"0xf22ec57b94dd4d617ce3d606cf4824eb580de9f142eb26b3ddfa6363e92fe762\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcd333e583327df0a2eefeba38ee3cb2c32458bdcc2c89bd1a962fd8c64f7b18\",\"dweb:/ipfs/Qme1x9BhgcvFXvuAQvbdiSoioYhQqPbQ3Egb4wtZcwDAos\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xff419f22f3a06f6cd02691a009684a7f867d6d4e172b2f52737b50f834a72396\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e6cfb228f9963fe6dde878e712fbb5c9b9816dd13c8fc0b592d8262157795e9\",\"dweb:/ipfs/QmU8wSfCv3H4pWFnKzrA9ZY7WDerZ3DrxaR4dU8qmqZdQh\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xd2bd30ee25ef65894d0a4f974eb71cc59907d62ab26fe1d2e96e5b4572178d8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a250ef83b73a9a8e4f89afdfc140f0dcf4443a1753b3d1456445dc9662a1198\",\"dweb:/ipfs/QmavLfbnmjjSSWWjd6ouNok7mcj7XtCnX7DkLaDZP8qykj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1375,
								"contract": "node_modules/@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x56929133c3d37641ae44d2fef6a4fba2c6fbc1faa1925ab777fae2e0be557bb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dba2499fc4ad87a46c98a61ac2985c8754898132d789a16310628eea494e96e8\",\"dweb:/ipfs/QmNNBSxw2tyPrZYEsbDFMQrt9ii4fCw32NobYwYTFDManz\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":214:756  contract ERC1155Holder is ERC1155Receiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":214:756  contract ERC1155Holder is ERC1155Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_9:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":504:508  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":543:577  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:577  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:539  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:577  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:617  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_24\n      jumpi\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:617  super.supportsInterface(interfaceId) */\n      tag_25\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":605:616  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:604  super.supportsInterface */\n      tag_26\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":581:617  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_25:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":528:617  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_24:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":521:617  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":402:625  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n    tag_15:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":683:689  bytes4 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":709:745  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":702:745  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":498:753  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n    tag_21:\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":425:431  bytes4 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":451:482  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":444:482  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":263:490  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":939:943  bool */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":978:1003  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:974  interfaceId */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":963:1003  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":956:1003  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:1011  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_30:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_31:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_32:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_33:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_34:\n        /* \"#utility.yul\":561:584   */\n      tag_66\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_33\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_67:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_35:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_69\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_34\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_8:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_72\n      tag_31\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":833:952   */\n    tag_71:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_73\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_36:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_37:\n        /* \"#utility.yul\":1268:1289   */\n      tag_76\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_36\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_11:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_78\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_37\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_38:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_39:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_81\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_38\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_40:\n        /* \"#utility.yul\":1825:1849   */\n      tag_83\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_39\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_84\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_84:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_41:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_86\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_40\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2142   */\n    tag_42:\n        /* \"#utility.yul\":2134:2135   */\n      0x00\n        /* \"#utility.yul\":2131:2132   */\n      dup1\n        /* \"#utility.yul\":2124:2136   */\n      revert\n        /* \"#utility.yul\":2148:2250   */\n    tag_43:\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2240:2242   */\n      0x1f\n        /* \"#utility.yul\":2236:2243   */\n      not\n        /* \"#utility.yul\":2231:2233   */\n      0x1f\n        /* \"#utility.yul\":2224:2229   */\n      dup4\n        /* \"#utility.yul\":2220:2234   */\n      add\n        /* \"#utility.yul\":2216:2244   */\n      and\n        /* \"#utility.yul\":2206:2244   */\n      swap1\n      pop\n        /* \"#utility.yul\":2148:2250   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2256:2436   */\n    tag_44:\n        /* \"#utility.yul\":2304:2381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2301:2302   */\n      0x00\n        /* \"#utility.yul\":2294:2382   */\n      mstore\n        /* \"#utility.yul\":2401:2405   */\n      0x41\n        /* \"#utility.yul\":2398:2399   */\n      0x04\n        /* \"#utility.yul\":2391:2406   */\n      mstore\n        /* \"#utility.yul\":2425:2429   */\n      0x24\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2415:2430   */\n      revert\n        /* \"#utility.yul\":2442:2723   */\n    tag_45:\n        /* \"#utility.yul\":2525:2552   */\n      tag_91\n        /* \"#utility.yul\":2547:2551   */\n      dup3\n        /* \"#utility.yul\":2525:2552   */\n      tag_43\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2517:2523   */\n      dup2\n        /* \"#utility.yul\":2513:2553   */\n      add\n        /* \"#utility.yul\":2655:2661   */\n      dup2\n        /* \"#utility.yul\":2643:2653   */\n      dup2\n        /* \"#utility.yul\":2640:2662   */\n      lt\n        /* \"#utility.yul\":2619:2637   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2607:2617   */\n      dup3\n        /* \"#utility.yul\":2604:2638   */\n      gt\n        /* \"#utility.yul\":2601:2663   */\n      or\n        /* \"#utility.yul\":2598:2686   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":2666:2684   */\n      tag_93\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2598:2686   */\n    tag_92:\n        /* \"#utility.yul\":2706:2716   */\n      dup1\n        /* \"#utility.yul\":2702:2704   */\n      0x40\n        /* \"#utility.yul\":2695:2717   */\n      mstore\n        /* \"#utility.yul\":2485:2723   */\n      pop\n        /* \"#utility.yul\":2442:2723   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2729:2858   */\n    tag_46:\n        /* \"#utility.yul\":2763:2769   */\n      0x00\n        /* \"#utility.yul\":2790:2810   */\n      tag_95\n      tag_30\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2780:2810   */\n      swap1\n      pop\n        /* \"#utility.yul\":2819:2852   */\n      tag_96\n        /* \"#utility.yul\":2847:2851   */\n      dup3\n        /* \"#utility.yul\":2839:2845   */\n      dup3\n        /* \"#utility.yul\":2819:2852   */\n      tag_45\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2729:2858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2864:3175   */\n    tag_47:\n        /* \"#utility.yul\":2941:2945   */\n      0x00\n        /* \"#utility.yul\":3031:3049   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3023:3029   */\n      dup3\n        /* \"#utility.yul\":3020:3050   */\n      gt\n        /* \"#utility.yul\":3017:3073   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3053:3071   */\n      tag_99\n      tag_44\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3017:3073   */\n    tag_98:\n        /* \"#utility.yul\":3103:3107   */\n      0x20\n        /* \"#utility.yul\":3095:3101   */\n      dup3\n        /* \"#utility.yul\":3091:3108   */\n      mul\n        /* \"#utility.yul\":3083:3108   */\n      swap1\n      pop\n        /* \"#utility.yul\":3163:3167   */\n      0x20\n        /* \"#utility.yul\":3157:3161   */\n      dup2\n        /* \"#utility.yul\":3153:3168   */\n      add\n        /* \"#utility.yul\":3145:3168   */\n      swap1\n      pop\n        /* \"#utility.yul\":2864:3175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3181:3298   */\n    tag_48:\n        /* \"#utility.yul\":3290:3291   */\n      0x00\n        /* \"#utility.yul\":3287:3288   */\n      dup1\n        /* \"#utility.yul\":3280:3292   */\n      revert\n        /* \"#utility.yul\":3304:3381   */\n    tag_49:\n        /* \"#utility.yul\":3341:3348   */\n      0x00\n        /* \"#utility.yul\":3370:3375   */\n      dup2\n        /* \"#utility.yul\":3359:3375   */\n      swap1\n      pop\n        /* \"#utility.yul\":3304:3381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3387:3509   */\n    tag_50:\n        /* \"#utility.yul\":3460:3484   */\n      tag_103\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3460:3484   */\n      tag_49\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3453:3458   */\n      dup2\n        /* \"#utility.yul\":3450:3485   */\n      eq\n        /* \"#utility.yul\":3440:3503   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3499:3500   */\n      0x00\n        /* \"#utility.yul\":3496:3497   */\n      dup1\n        /* \"#utility.yul\":3489:3501   */\n      revert\n        /* \"#utility.yul\":3440:3503   */\n    tag_104:\n        /* \"#utility.yul\":3387:3509   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3515:3654   */\n    tag_51:\n        /* \"#utility.yul\":3561:3566   */\n      0x00\n        /* \"#utility.yul\":3599:3605   */\n      dup2\n        /* \"#utility.yul\":3586:3606   */\n      calldataload\n        /* \"#utility.yul\":3577:3606   */\n      swap1\n      pop\n        /* \"#utility.yul\":3615:3648   */\n      tag_106\n        /* \"#utility.yul\":3642:3647   */\n      dup2\n        /* \"#utility.yul\":3615:3648   */\n      tag_50\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":3515:3654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3677:4387   */\n    tag_52:\n        /* \"#utility.yul\":3773:3778   */\n      0x00\n        /* \"#utility.yul\":3798:3879   */\n      tag_108\n        /* \"#utility.yul\":3814:3878   */\n      tag_109\n        /* \"#utility.yul\":3871:3877   */\n      dup5\n        /* \"#utility.yul\":3814:3878   */\n      tag_47\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3798:3879   */\n      tag_46\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3789:3879   */\n      swap1\n      pop\n        /* \"#utility.yul\":3899:3904   */\n      dup1\n        /* \"#utility.yul\":3928:3934   */\n      dup4\n        /* \"#utility.yul\":3921:3926   */\n      dup3\n        /* \"#utility.yul\":3914:3935   */\n      mstore\n        /* \"#utility.yul\":3962:3966   */\n      0x20\n        /* \"#utility.yul\":3955:3960   */\n      dup3\n        /* \"#utility.yul\":3951:3967   */\n      add\n        /* \"#utility.yul\":3944:3967   */\n      swap1\n      pop\n        /* \"#utility.yul\":4015:4019   */\n      0x20\n        /* \"#utility.yul\":4007:4013   */\n      dup5\n        /* \"#utility.yul\":4003:4020   */\n      mul\n        /* \"#utility.yul\":3995:4001   */\n      dup4\n        /* \"#utility.yul\":3991:4021   */\n      add\n        /* \"#utility.yul\":4044:4047   */\n      dup6\n        /* \"#utility.yul\":4036:4042   */\n      dup2\n        /* \"#utility.yul\":4033:4048   */\n      gt\n        /* \"#utility.yul\":4030:4152   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4063:4142   */\n      tag_111\n      tag_48\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4030:4152   */\n    tag_110:\n        /* \"#utility.yul\":4178:4184   */\n      dup4\n        /* \"#utility.yul\":4161:4381   */\n    tag_112:\n        /* \"#utility.yul\":4195:4201   */\n      dup2\n        /* \"#utility.yul\":4190:4193   */\n      dup2\n        /* \"#utility.yul\":4187:4202   */\n      lt\n        /* \"#utility.yul\":4161:4381   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4270:4273   */\n      dup1\n        /* \"#utility.yul\":4299:4336   */\n      tag_115\n        /* \"#utility.yul\":4332:4335   */\n      dup9\n        /* \"#utility.yul\":4320:4330   */\n      dup3\n        /* \"#utility.yul\":4299:4336   */\n      tag_51\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4294:4297   */\n      dup5\n        /* \"#utility.yul\":4287:4337   */\n      mstore\n        /* \"#utility.yul\":4366:4370   */\n      0x20\n        /* \"#utility.yul\":4361:4364   */\n      dup5\n        /* \"#utility.yul\":4357:4371   */\n      add\n        /* \"#utility.yul\":4350:4371   */\n      swap4\n      pop\n        /* \"#utility.yul\":4237:4381   */\n      pop\n        /* \"#utility.yul\":4221:4225   */\n      0x20\n        /* \"#utility.yul\":4216:4219   */\n      dup2\n        /* \"#utility.yul\":4212:4226   */\n      add\n        /* \"#utility.yul\":4205:4226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4161:4381   */\n      jump(tag_112)\n    tag_114:\n        /* \"#utility.yul\":4165:4186   */\n      pop\n        /* \"#utility.yul\":3779:4387   */\n      pop\n      pop\n        /* \"#utility.yul\":3677:4387   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4780   */\n    tag_53:\n        /* \"#utility.yul\":4481:4486   */\n      0x00\n        /* \"#utility.yul\":4530:4533   */\n      dup3\n        /* \"#utility.yul\":4523:4527   */\n      0x1f\n        /* \"#utility.yul\":4515:4521   */\n      dup4\n        /* \"#utility.yul\":4511:4528   */\n      add\n        /* \"#utility.yul\":4507:4534   */\n      slt\n        /* \"#utility.yul\":4497:4619   */\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4538:4617   */\n      tag_118\n      tag_42\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4497:4619   */\n    tag_117:\n        /* \"#utility.yul\":4655:4661   */\n      dup2\n        /* \"#utility.yul\":4642:4662   */\n      calldataload\n        /* \"#utility.yul\":4680:4774   */\n      tag_119\n        /* \"#utility.yul\":4770:4773   */\n      dup5\n        /* \"#utility.yul\":4762:4768   */\n      dup3\n        /* \"#utility.yul\":4755:4759   */\n      0x20\n        /* \"#utility.yul\":4747:4753   */\n      dup7\n        /* \"#utility.yul\":4743:4760   */\n      add\n        /* \"#utility.yul\":4680:4774   */\n      tag_52\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4671:4774   */\n      swap2\n      pop\n        /* \"#utility.yul\":4487:4780   */\n      pop\n        /* \"#utility.yul\":4410:4780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4786:4903   */\n    tag_54:\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4892:4893   */\n      dup1\n        /* \"#utility.yul\":4885:4897   */\n      revert\n        /* \"#utility.yul\":4909:5216   */\n    tag_55:\n        /* \"#utility.yul\":4970:4974   */\n      0x00\n        /* \"#utility.yul\":5060:5078   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5052:5058   */\n      dup3\n        /* \"#utility.yul\":5049:5079   */\n      gt\n        /* \"#utility.yul\":5046:5102   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":5082:5100   */\n      tag_123\n      tag_44\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5046:5102   */\n    tag_122:\n        /* \"#utility.yul\":5120:5149   */\n      tag_124\n        /* \"#utility.yul\":5142:5148   */\n      dup3\n        /* \"#utility.yul\":5120:5149   */\n      tag_43\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":5112:5149   */\n      swap1\n      pop\n        /* \"#utility.yul\":5204:5208   */\n      0x20\n        /* \"#utility.yul\":5198:5202   */\n      dup2\n        /* \"#utility.yul\":5194:5209   */\n      add\n        /* \"#utility.yul\":5186:5209   */\n      swap1\n      pop\n        /* \"#utility.yul\":4909:5216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5222:5376   */\n    tag_56:\n        /* \"#utility.yul\":5306:5312   */\n      dup3\n        /* \"#utility.yul\":5301:5304   */\n      dup2\n        /* \"#utility.yul\":5296:5299   */\n      dup4\n        /* \"#utility.yul\":5283:5313   */\n      calldatacopy\n        /* \"#utility.yul\":5368:5369   */\n      0x00\n        /* \"#utility.yul\":5359:5365   */\n      dup4\n        /* \"#utility.yul\":5354:5357   */\n      dup4\n        /* \"#utility.yul\":5350:5366   */\n      add\n        /* \"#utility.yul\":5343:5370   */\n      mstore\n        /* \"#utility.yul\":5222:5376   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5382:5792   */\n    tag_57:\n        /* \"#utility.yul\":5459:5464   */\n      0x00\n        /* \"#utility.yul\":5484:5549   */\n      tag_127\n        /* \"#utility.yul\":5500:5548   */\n      tag_128\n        /* \"#utility.yul\":5541:5547   */\n      dup5\n        /* \"#utility.yul\":5500:5548   */\n      tag_55\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5484:5549   */\n      tag_46\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5475:5549   */\n      swap1\n      pop\n        /* \"#utility.yul\":5572:5578   */\n      dup3\n        /* \"#utility.yul\":5565:5570   */\n      dup2\n        /* \"#utility.yul\":5558:5579   */\n      mstore\n        /* \"#utility.yul\":5610:5614   */\n      0x20\n        /* \"#utility.yul\":5603:5608   */\n      dup2\n        /* \"#utility.yul\":5599:5615   */\n      add\n        /* \"#utility.yul\":5648:5651   */\n      dup5\n        /* \"#utility.yul\":5639:5645   */\n      dup5\n        /* \"#utility.yul\":5634:5637   */\n      dup5\n        /* \"#utility.yul\":5630:5646   */\n      add\n        /* \"#utility.yul\":5627:5652   */\n      gt\n        /* \"#utility.yul\":5624:5736   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":5655:5734   */\n      tag_130\n      tag_54\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5624:5736   */\n    tag_129:\n        /* \"#utility.yul\":5745:5786   */\n      tag_131\n        /* \"#utility.yul\":5779:5785   */\n      dup5\n        /* \"#utility.yul\":5774:5777   */\n      dup3\n        /* \"#utility.yul\":5769:5772   */\n      dup6\n        /* \"#utility.yul\":5745:5786   */\n      tag_56\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5465:5792   */\n      pop\n        /* \"#utility.yul\":5382:5792   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5811:6149   */\n    tag_58:\n        /* \"#utility.yul\":5866:5871   */\n      0x00\n        /* \"#utility.yul\":5915:5918   */\n      dup3\n        /* \"#utility.yul\":5908:5912   */\n      0x1f\n        /* \"#utility.yul\":5900:5906   */\n      dup4\n        /* \"#utility.yul\":5896:5913   */\n      add\n        /* \"#utility.yul\":5892:5919   */\n      slt\n        /* \"#utility.yul\":5882:6004   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":5923:6002   */\n      tag_134\n      tag_42\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5882:6004   */\n    tag_133:\n        /* \"#utility.yul\":6040:6046   */\n      dup2\n        /* \"#utility.yul\":6027:6047   */\n      calldataload\n        /* \"#utility.yul\":6065:6143   */\n      tag_135\n        /* \"#utility.yul\":6139:6142   */\n      dup5\n        /* \"#utility.yul\":6131:6137   */\n      dup3\n        /* \"#utility.yul\":6124:6128   */\n      0x20\n        /* \"#utility.yul\":6116:6122   */\n      dup7\n        /* \"#utility.yul\":6112:6129   */\n      add\n        /* \"#utility.yul\":6065:6143   */\n      tag_57\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":6056:6143   */\n      swap2\n      pop\n        /* \"#utility.yul\":5872:6149   */\n      pop\n        /* \"#utility.yul\":5811:6149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6155:7664   */\n    tag_14:\n        /* \"#utility.yul\":6309:6315   */\n      0x00\n        /* \"#utility.yul\":6317:6323   */\n      dup1\n        /* \"#utility.yul\":6325:6331   */\n      0x00\n        /* \"#utility.yul\":6333:6339   */\n      dup1\n        /* \"#utility.yul\":6341:6347   */\n      0x00\n        /* \"#utility.yul\":6390:6393   */\n      0xa0\n        /* \"#utility.yul\":6378:6387   */\n      dup7\n        /* \"#utility.yul\":6369:6376   */\n      dup9\n        /* \"#utility.yul\":6365:6388   */\n      sub\n        /* \"#utility.yul\":6361:6394   */\n      slt\n        /* \"#utility.yul\":6358:6478   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6397:6476   */\n      tag_138\n      tag_31\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6358:6478   */\n    tag_137:\n        /* \"#utility.yul\":6517:6518   */\n      0x00\n        /* \"#utility.yul\":6542:6595   */\n      tag_139\n        /* \"#utility.yul\":6587:6594   */\n      dup9\n        /* \"#utility.yul\":6578:6584   */\n      dup3\n        /* \"#utility.yul\":6567:6576   */\n      dup10\n        /* \"#utility.yul\":6563:6585   */\n      add\n        /* \"#utility.yul\":6542:6595   */\n      tag_41\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6532:6595   */\n      swap6\n      pop\n        /* \"#utility.yul\":6488:6605   */\n      pop\n        /* \"#utility.yul\":6644:6646   */\n      0x20\n        /* \"#utility.yul\":6670:6723   */\n      tag_140\n        /* \"#utility.yul\":6715:6722   */\n      dup9\n        /* \"#utility.yul\":6706:6712   */\n      dup3\n        /* \"#utility.yul\":6695:6704   */\n      dup10\n        /* \"#utility.yul\":6691:6713   */\n      add\n        /* \"#utility.yul\":6670:6723   */\n      tag_41\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6660:6723   */\n      swap5\n      pop\n        /* \"#utility.yul\":6615:6733   */\n      pop\n        /* \"#utility.yul\":6800:6802   */\n      0x40\n        /* \"#utility.yul\":6789:6798   */\n      dup7\n        /* \"#utility.yul\":6785:6803   */\n      add\n        /* \"#utility.yul\":6772:6804   */\n      calldataload\n        /* \"#utility.yul\":6831:6849   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6823:6829   */\n      dup2\n        /* \"#utility.yul\":6820:6850   */\n      gt\n        /* \"#utility.yul\":6817:6934   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":6853:6932   */\n      tag_142\n      tag_32\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6817:6934   */\n    tag_141:\n        /* \"#utility.yul\":6958:7036   */\n      tag_143\n        /* \"#utility.yul\":7028:7035   */\n      dup9\n        /* \"#utility.yul\":7019:7025   */\n      dup3\n        /* \"#utility.yul\":7008:7017   */\n      dup10\n        /* \"#utility.yul\":7004:7026   */\n      add\n        /* \"#utility.yul\":6958:7036   */\n      tag_53\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6948:7036   */\n      swap4\n      pop\n        /* \"#utility.yul\":6743:7046   */\n      pop\n        /* \"#utility.yul\":7113:7115   */\n      0x60\n        /* \"#utility.yul\":7102:7111   */\n      dup7\n        /* \"#utility.yul\":7098:7116   */\n      add\n        /* \"#utility.yul\":7085:7117   */\n      calldataload\n        /* \"#utility.yul\":7144:7162   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7136:7142   */\n      dup2\n        /* \"#utility.yul\":7133:7163   */\n      gt\n        /* \"#utility.yul\":7130:7247   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":7166:7245   */\n      tag_145\n      tag_32\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":7130:7247   */\n    tag_144:\n        /* \"#utility.yul\":7271:7349   */\n      tag_146\n        /* \"#utility.yul\":7341:7348   */\n      dup9\n        /* \"#utility.yul\":7332:7338   */\n      dup3\n        /* \"#utility.yul\":7321:7330   */\n      dup10\n        /* \"#utility.yul\":7317:7339   */\n      add\n        /* \"#utility.yul\":7271:7349   */\n      tag_53\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7261:7349   */\n      swap3\n      pop\n        /* \"#utility.yul\":7056:7359   */\n      pop\n        /* \"#utility.yul\":7426:7429   */\n      0x80\n        /* \"#utility.yul\":7415:7424   */\n      dup7\n        /* \"#utility.yul\":7411:7430   */\n      add\n        /* \"#utility.yul\":7398:7431   */\n      calldataload\n        /* \"#utility.yul\":7458:7476   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7450:7456   */\n      dup2\n        /* \"#utility.yul\":7447:7477   */\n      gt\n        /* \"#utility.yul\":7444:7561   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":7480:7559   */\n      tag_148\n      tag_32\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7444:7561   */\n    tag_147:\n        /* \"#utility.yul\":7585:7647   */\n      tag_149\n        /* \"#utility.yul\":7639:7646   */\n      dup9\n        /* \"#utility.yul\":7630:7636   */\n      dup3\n        /* \"#utility.yul\":7619:7628   */\n      dup10\n        /* \"#utility.yul\":7615:7637   */\n      add\n        /* \"#utility.yul\":7585:7647   */\n      tag_58\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7575:7647   */\n      swap2\n      pop\n        /* \"#utility.yul\":7369:7657   */\n      pop\n        /* \"#utility.yul\":6155:7664   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7670:7785   */\n    tag_59:\n        /* \"#utility.yul\":7755:7778   */\n      tag_151\n        /* \"#utility.yul\":7772:7777   */\n      dup2\n        /* \"#utility.yul\":7755:7778   */\n      tag_33\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":7750:7753   */\n      dup3\n        /* \"#utility.yul\":7743:7779   */\n      mstore\n        /* \"#utility.yul\":7670:7785   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8009   */\n    tag_17:\n        /* \"#utility.yul\":7882:7886   */\n      0x00\n        /* \"#utility.yul\":7920:7922   */\n      0x20\n        /* \"#utility.yul\":7909:7918   */\n      dup3\n        /* \"#utility.yul\":7905:7923   */\n      add\n        /* \"#utility.yul\":7897:7923   */\n      swap1\n      pop\n        /* \"#utility.yul\":7933:8002   */\n      tag_153\n        /* \"#utility.yul\":7999:8000   */\n      0x00\n        /* \"#utility.yul\":7988:7997   */\n      dup4\n        /* \"#utility.yul\":7984:8001   */\n      add\n        /* \"#utility.yul\":7975:7981   */\n      dup5\n        /* \"#utility.yul\":7933:8002   */\n      tag_59\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7791:8009   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8015:9104   */\n    tag_20:\n        /* \"#utility.yul\":8119:8125   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup1\n        /* \"#utility.yul\":8135:8141   */\n      0x00\n        /* \"#utility.yul\":8143:8149   */\n      dup1\n        /* \"#utility.yul\":8151:8157   */\n      0x00\n        /* \"#utility.yul\":8200:8203   */\n      0xa0\n        /* \"#utility.yul\":8188:8197   */\n      dup7\n        /* \"#utility.yul\":8179:8186   */\n      dup9\n        /* \"#utility.yul\":8175:8198   */\n      sub\n        /* \"#utility.yul\":8171:8204   */\n      slt\n        /* \"#utility.yul\":8168:8288   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":8207:8286   */\n      tag_156\n      tag_31\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8168:8288   */\n    tag_155:\n        /* \"#utility.yul\":8327:8328   */\n      0x00\n        /* \"#utility.yul\":8352:8405   */\n      tag_157\n        /* \"#utility.yul\":8397:8404   */\n      dup9\n        /* \"#utility.yul\":8388:8394   */\n      dup3\n        /* \"#utility.yul\":8377:8386   */\n      dup10\n        /* \"#utility.yul\":8373:8395   */\n      add\n        /* \"#utility.yul\":8352:8405   */\n      tag_41\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8342:8405   */\n      swap6\n      pop\n        /* \"#utility.yul\":8298:8415   */\n      pop\n        /* \"#utility.yul\":8454:8456   */\n      0x20\n        /* \"#utility.yul\":8480:8533   */\n      tag_158\n        /* \"#utility.yul\":8525:8532   */\n      dup9\n        /* \"#utility.yul\":8516:8522   */\n      dup3\n        /* \"#utility.yul\":8505:8514   */\n      dup10\n        /* \"#utility.yul\":8501:8523   */\n      add\n        /* \"#utility.yul\":8480:8533   */\n      tag_41\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":8470:8533   */\n      swap5\n      pop\n        /* \"#utility.yul\":8425:8543   */\n      pop\n        /* \"#utility.yul\":8582:8584   */\n      0x40\n        /* \"#utility.yul\":8608:8661   */\n      tag_159\n        /* \"#utility.yul\":8653:8660   */\n      dup9\n        /* \"#utility.yul\":8644:8650   */\n      dup3\n        /* \"#utility.yul\":8633:8642   */\n      dup10\n        /* \"#utility.yul\":8629:8651   */\n      add\n        /* \"#utility.yul\":8608:8661   */\n      tag_51\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8598:8661   */\n      swap4\n      pop\n        /* \"#utility.yul\":8553:8671   */\n      pop\n        /* \"#utility.yul\":8710:8712   */\n      0x60\n        /* \"#utility.yul\":8736:8789   */\n      tag_160\n        /* \"#utility.yul\":8781:8788   */\n      dup9\n        /* \"#utility.yul\":8772:8778   */\n      dup3\n        /* \"#utility.yul\":8761:8770   */\n      dup10\n        /* \"#utility.yul\":8757:8779   */\n      add\n        /* \"#utility.yul\":8736:8789   */\n      tag_51\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":8726:8789   */\n      swap3\n      pop\n        /* \"#utility.yul\":8681:8799   */\n      pop\n        /* \"#utility.yul\":8866:8869   */\n      0x80\n        /* \"#utility.yul\":8855:8864   */\n      dup7\n        /* \"#utility.yul\":8851:8870   */\n      add\n        /* \"#utility.yul\":8838:8871   */\n      calldataload\n        /* \"#utility.yul\":8898:8916   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8890:8896   */\n      dup2\n        /* \"#utility.yul\":8887:8917   */\n      gt\n        /* \"#utility.yul\":8884:9001   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":8920:8999   */\n      tag_162\n      tag_32\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8884:9001   */\n    tag_161:\n        /* \"#utility.yul\":9025:9087   */\n      tag_163\n        /* \"#utility.yul\":9079:9086   */\n      dup9\n        /* \"#utility.yul\":9070:9076   */\n      dup3\n        /* \"#utility.yul\":9059:9068   */\n      dup10\n        /* \"#utility.yul\":9055:9077   */\n      add\n        /* \"#utility.yul\":9025:9087   */\n      tag_58\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":9015:9087   */\n      swap2\n      pop\n        /* \"#utility.yul\":8809:9097   */\n      pop\n        /* \"#utility.yul\":8015:9104   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220229c57fff39f0f3afbd64898e1da3d91e6c8ac9902e43ac6801b064403542e3c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061071b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea2646970667358221220229c57fff39f0f3afbd64898e1da3d91e6c8ac9902e43ac6801b064403542e3c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP13 JUMPI SELFDESTRUCT RETURN SWAP16 0xF GASPRICE 0xFB 0xD6 BASEFEE SWAP9 0xE1 0xDA RETURNDATASIZE SWAP2 0xE6 0xC8 0xAC SWAP10 MUL 0xE4 GASPRICE 0xC6 DUP1 SHL MOD DIFFICULTY SUB SLOAD 0x2E EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "214:542:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC1155BatchReceived_1685": {
									"entryPoint": 336,
									"id": 1685,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1662": {
									"entryPoint": 357,
									"id": 1662,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1719": {
									"entryPoint": 214,
									"id": 1719,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2364": {
									"entryPoint": 378,
									"id": 2364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 1614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1189,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1184,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9107:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:13",
														"type": ""
													}
												],
												"src": "1518:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:13",
														"type": ""
													}
												],
												"src": "1650:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:13"
															},
															"nodeType": "YulIf",
															"src": "1805:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:13",
														"type": ""
													}
												],
												"src": "1752:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:13",
														"type": ""
													}
												],
												"src": "1880:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2114:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2025:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2240:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2236:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2236:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:13",
														"type": ""
													}
												],
												"src": "2148:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2284:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2304:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2294:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2294:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2398:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2391:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2391:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2391:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2422:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2425:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2415:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2415:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2256:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2485:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2495:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2517:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2547:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2525:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2525:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2513:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2513:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2499:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2664:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2666:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2666:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2666:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2607:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2619:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2604:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2604:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2643:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2655:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2640:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2640:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2601:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2601:62:13"
															},
															"nodeType": "YulIf",
															"src": "2598:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2702:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2706:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2695:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2471:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2479:4:13",
														"type": ""
													}
												],
												"src": "2442:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2770:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2780:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2790:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2790:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2780:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2847:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2819:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2754:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2763:6:13",
														"type": ""
													}
												],
												"src": "2729:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3051:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3053:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3053:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3053:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3023:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3020:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3020:30:13"
															},
															"nodeType": "YulIf",
															"src": "3017:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3083:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3095:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3091:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3091:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3083:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3145:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3157:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3163:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3153:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3145:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2930:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2941:4:13",
														"type": ""
													}
												],
												"src": "2864:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3270:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3287:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3290:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3280:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3280:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3181:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3349:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3359:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3370:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3359:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3331:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3341:7:13",
														"type": ""
													}
												],
												"src": "3304:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3430:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3487:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3496:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3499:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3489:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3489:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3489:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3453:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3460:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3460:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3450:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3450:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:43:13"
															},
															"nodeType": "YulIf",
															"src": "3440:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3423:5:13",
														"type": ""
													}
												],
												"src": "3387:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3567:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3577:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3599:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3586:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3586:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3577:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3642:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3615:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3615:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3615:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3545:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3553:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3561:5:13",
														"type": ""
													}
												],
												"src": "3515:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3779:608:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3789:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3871:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3814:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3814:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3798:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3798:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3789:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3888:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3899:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3892:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3921:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3928:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3914:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3914:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3914:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3944:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3955:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3951:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3944:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3977:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3995:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4007:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4003:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4003:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3991:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3981:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4049:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4063:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4063:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4063:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4036:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4044:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4033:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:15:13"
															},
															"nodeType": "YulIf",
															"src": "4030:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:144:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4252:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4270:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4256:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4294:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4320:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4332:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "4299:20:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4299:37:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:50:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:50:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4350:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4361:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4366:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4357:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4350:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4190:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4195:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4187:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4187:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4203:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4205:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4216:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4221:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4212:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4212:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4205:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4165:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4167:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4178:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4171:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4161:220:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3749:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3757:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3765:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3773:5:13",
														"type": ""
													}
												],
												"src": "3677:710:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:293:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4536:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4538:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4538:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4538:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4515:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4523:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4511:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4511:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4530:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4507:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4507:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4500:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4500:35:13"
															},
															"nodeType": "YulIf",
															"src": "4497:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4628:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4655:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4642:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4632:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4671:103:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4747:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4755:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4743:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4743:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4762:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4770:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4680:62:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:94:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4671:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4465:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4473:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4481:5:13",
														"type": ""
													}
												],
												"src": "4410:370:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4875:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4895:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4885:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4786:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:241:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5080:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5082:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5082:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5082:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5052:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5060:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5049:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5049:30:13"
															},
															"nodeType": "YulIf",
															"src": "5046:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5112:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5142:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5120:21:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5120:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5112:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5186:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5198:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5204:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5194:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5194:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5186:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4959:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4970:4:13",
														"type": ""
													}
												],
												"src": "4909:307:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5273:103:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5296:3:13"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "5283:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5283:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5354:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5359:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5350:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5350:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5368:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5255:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "5260:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5265:6:13",
														"type": ""
													}
												],
												"src": "5222:154:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5465:327:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5475:74:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5541:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5500:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5500:48:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5484:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5484:65:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5475:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5565:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5572:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5558:21:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5588:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5603:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5610:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5599:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5599:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5592:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5653:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "5655:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5655:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5655:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5634:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5639:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5630:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5630:16:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5648:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5627:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:25:13"
															},
															"nodeType": "YulIf",
															"src": "5624:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5769:3:13"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5774:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5779:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5745:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:41:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5745:41:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5438:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5443:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5451:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5459:5:13",
														"type": ""
													}
												],
												"src": "5382:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5872:277:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5921:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5923:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5923:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5923:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5900:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5908:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5896:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5896:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5915:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5892:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5885:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5885:35:13"
															},
															"nodeType": "YulIf",
															"src": "5882:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6013:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6040:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6027:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6017:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6056:87:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6116:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6124:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6112:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6112:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6131:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6139:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6065:46:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6065:78:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6056:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5850:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5858:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5866:5:13",
														"type": ""
													}
												],
												"src": "5811:338:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6348:1316:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6395:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6397:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6397:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6397:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6369:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6378:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6365:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6365:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6390:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:33:13"
															},
															"nodeType": "YulIf",
															"src": "6358:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6488:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6503:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6517:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6507:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6532:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6567:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6578:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6563:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6563:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6587:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6542:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6542:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6532:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6615:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6630:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6644:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6634:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6660:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6695:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6706:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6691:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6691:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6715:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6670:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6670:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6660:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6743:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6758:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6789:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6800:2:13",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6785:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6785:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6772:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6762:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6851:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6853:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6853:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6853:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6823:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6831:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6820:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6820:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "6817:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6948:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7008:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7019:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7004:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7004:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7028:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6958:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6948:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7056:303:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7071:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7102:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7113:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7098:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7098:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7085:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7085:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7075:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7164:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7166:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7166:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7166:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7136:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7144:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7133:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7133:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "7130:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7261:88:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7321:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7332:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7317:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7317:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7341:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7271:45:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7271:78:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "7261:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7369:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7384:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7415:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7426:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7411:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7411:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7398:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7388:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7478:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7480:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7480:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7480:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7450:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7458:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7447:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7447:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "7444:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7575:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7619:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7630:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7615:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7615:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7639:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7585:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7585:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "7575:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6286:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6297:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6309:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6317:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6325:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6333:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6341:6:13",
														"type": ""
													}
												],
												"src": "6155:1509:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7733:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7750:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7772:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "7755:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7755:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7743:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7743:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7743:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7721:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7728:3:13",
														"type": ""
													}
												],
												"src": "7670:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7887:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7897:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7909:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7920:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7905:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7905:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7897:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7975:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7988:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7999:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7984:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7984:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7933:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7859:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7871:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7882:4:13",
														"type": ""
													}
												],
												"src": "7791:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8158:946:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8205:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8207:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8207:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8207:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8179:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8188:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8175:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8200:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:33:13"
															},
															"nodeType": "YulIf",
															"src": "8168:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "8298:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8313:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8327:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8317:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8342:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8377:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8388:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8373:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8373:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8397:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8352:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8342:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8425:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8440:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8454:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8444:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8470:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8505:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8516:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8501:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8501:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8525:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8480:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8480:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8470:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8553:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8568:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8582:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8572:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8598:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8633:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8644:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8629:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8629:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8653:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8608:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8598:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8681:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8696:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8710:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8700:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8726:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8761:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8772:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8757:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8757:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8781:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8736:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8736:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8726:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8809:288:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8824:47:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8855:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8866:3:13",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8851:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8851:19:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8838:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8838:33:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8828:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8918:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8920:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8920:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8920:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8890:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8898:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8887:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8887:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "8884:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9015:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9059:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9070:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9055:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9055:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9079:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9025:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "9015:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8096:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8107:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8119:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8127:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8135:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8143:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8151:6:13",
														"type": ""
													}
												],
												"src": "8015:1089:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b9190610250565b6100d6565b60405161006d9190610298565b60405180910390f35b610090600480360381019061008b9190610555565b610150565b60405161009d9190610633565b60405180910390f35b6100c060048036038101906100bb919061064e565b610165565b6040516100cd9190610633565b60405180910390f35b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061014957506101488261017a565b5b9050919050565b600063bc197c8160e01b905095945050505050565b600063f23a6e6160e01b905095945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61022d816101f8565b811461023857600080fd5b50565b60008135905061024a81610224565b92915050565b600060208284031215610266576102656101ee565b5b60006102748482850161023b565b91505092915050565b60008115159050919050565b6102928161027d565b82525050565b60006020820190506102ad6000830184610289565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102de826102b3565b9050919050565b6102ee816102d3565b81146102f957600080fd5b50565b60008135905061030b816102e5565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035f82610316565b810181811067ffffffffffffffff8211171561037e5761037d610327565b5b80604052505050565b60006103916101e4565b905061039d8282610356565b919050565b600067ffffffffffffffff8211156103bd576103bc610327565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6103e6816103d3565b81146103f157600080fd5b50565b600081359050610403816103dd565b92915050565b600061041c610417846103a2565b610387565b9050808382526020820190506020840283018581111561043f5761043e6103ce565b5b835b81811015610468578061045488826103f4565b845260208401935050602081019050610441565b5050509392505050565b600082601f83011261048757610486610311565b5b8135610497848260208601610409565b91505092915050565b600080fd5b600067ffffffffffffffff8211156104c0576104bf610327565b5b6104c982610316565b9050602081019050919050565b82818337600083830152505050565b60006104f86104f3846104a5565b610387565b905082815260208101848484011115610514576105136104a0565b5b61051f8482856104d6565b509392505050565b600082601f83011261053c5761053b610311565b5b813561054c8482602086016104e5565b91505092915050565b600080600080600060a08688031215610571576105706101ee565b5b600061057f888289016102fc565b9550506020610590888289016102fc565b945050604086013567ffffffffffffffff8111156105b1576105b06101f3565b5b6105bd88828901610472565b935050606086013567ffffffffffffffff8111156105de576105dd6101f3565b5b6105ea88828901610472565b925050608086013567ffffffffffffffff81111561060b5761060a6101f3565b5b61061788828901610527565b9150509295509295909350565b61062d816101f8565b82525050565b60006020820190506106486000830184610624565b92915050565b600080600080600060a0868803121561066a576106696101ee565b5b6000610678888289016102fc565b9550506020610689888289016102fc565b945050604061069a888289016103f4565b93505060606106ab888289016103f4565b925050608086013567ffffffffffffffff8111156106cc576106cb6101f3565b5b6106d888828901610527565b915050929550929590935056fea2646970667358221220229c57fff39f0f3afbd64898e1da3d91e6c8ac9902e43ac6801b064403542e3c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0xA6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x250 JUMP JUMPDEST PUSH2 0xD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x555 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9D SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x64E JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCD SWAP2 SWAP1 PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x149 JUMPI POP PUSH2 0x148 DUP3 PUSH2 0x17A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP2 EQ PUSH2 0x238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24A DUP2 PUSH2 0x224 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x265 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x274 DUP5 DUP3 DUP6 ADD PUSH2 0x23B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE DUP3 PUSH2 0x2B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x30B DUP2 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x35F DUP3 PUSH2 0x316 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x327 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x391 PUSH2 0x1E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x39D DUP3 DUP3 PUSH2 0x356 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BC PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E6 DUP2 PUSH2 0x3D3 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x403 DUP2 PUSH2 0x3DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41C PUSH2 0x417 DUP5 PUSH2 0x3A2 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x43F JUMPI PUSH2 0x43E PUSH2 0x3CE JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x468 JUMPI DUP1 PUSH2 0x454 DUP9 DUP3 PUSH2 0x3F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x441 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x497 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4C0 JUMPI PUSH2 0x4BF PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH2 0x4C9 DUP3 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F8 PUSH2 0x4F3 DUP5 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x387 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x514 JUMPI PUSH2 0x513 PUSH2 0x4A0 JUMP JUMPDEST JUMPDEST PUSH2 0x51F DUP5 DUP3 DUP6 PUSH2 0x4D6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x53C JUMPI PUSH2 0x53B PUSH2 0x311 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x54C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x4E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x571 JUMPI PUSH2 0x570 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x57F DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x590 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B1 JUMPI PUSH2 0x5B0 PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5DE JUMPI PUSH2 0x5DD PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x5EA DUP9 DUP3 DUP10 ADD PUSH2 0x472 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x60B JUMPI PUSH2 0x60A PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x617 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x62D DUP2 PUSH2 0x1F8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x648 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x624 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x66A JUMPI PUSH2 0x669 PUSH2 0x1EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x678 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x689 DUP9 DUP3 DUP10 ADD PUSH2 0x2FC JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x69A DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6AB DUP9 DUP3 DUP10 ADD PUSH2 0x3F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH2 0x6CB PUSH2 0x1F3 JUMP JUMPDEST JUMPDEST PUSH2 0x6D8 DUP9 DUP3 DUP10 ADD PUSH2 0x527 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 SWAP13 JUMPI SELFDESTRUCT RETURN SWAP16 0xF GASPRICE 0xFB 0xD6 BASEFEE SWAP9 0xE1 0xDA RETURNDATASIZE SWAP2 0xE6 0xC8 0xAC SWAP10 MUL 0xE4 GASPRICE 0xC6 DUP1 SHL MOD DIFFICULTY SUB SLOAD 0x2E EXTCODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "214:542:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:223:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;498:255:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;263:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;402:223:5;504:4;543:34;528:49;;;:11;:49;;;;:89;;;;581:36;605:11;581:23;:36::i;:::-;528:89;521:96;;402:223;;;:::o;498:255:4:-;683:6;709:36;;;702:43;;498:255;;;;;;;:::o;263:227::-;425:6;451:31;;;444:38;;263:227;;;;;;;:::o;854:157:10:-;939:4;978:25;963:40;;;:11;:40;;;;956:47;;854:157;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:117::-;2134:1;2131;2124:12;2148:102;2189:6;2240:2;2236:7;2231:2;2224:5;2220:14;2216:28;2206:38;;2148:102;;;:::o;2256:180::-;2304:77;2301:1;2294:88;2401:4;2398:1;2391:15;2425:4;2422:1;2415:15;2442:281;2525:27;2547:4;2525:27;:::i;:::-;2517:6;2513:40;2655:6;2643:10;2640:22;2619:18;2607:10;2604:34;2601:62;2598:88;;;2666:18;;:::i;:::-;2598:88;2706:10;2702:2;2695:22;2485:238;2442:281;;:::o;2729:129::-;2763:6;2790:20;;:::i;:::-;2780:30;;2819:33;2847:4;2839:6;2819:33;:::i;:::-;2729:129;;;:::o;2864:311::-;2941:4;3031:18;3023:6;3020:30;3017:56;;;3053:18;;:::i;:::-;3017:56;3103:4;3095:6;3091:17;3083:25;;3163:4;3157;3153:15;3145:23;;2864:311;;;:::o;3181:117::-;3290:1;3287;3280:12;3304:77;3341:7;3370:5;3359:16;;3304:77;;;:::o;3387:122::-;3460:24;3478:5;3460:24;:::i;:::-;3453:5;3450:35;3440:63;;3499:1;3496;3489:12;3440:63;3387:122;:::o;3515:139::-;3561:5;3599:6;3586:20;3577:29;;3615:33;3642:5;3615:33;:::i;:::-;3515:139;;;;:::o;3677:710::-;3773:5;3798:81;3814:64;3871:6;3814:64;:::i;:::-;3798:81;:::i;:::-;3789:90;;3899:5;3928:6;3921:5;3914:21;3962:4;3955:5;3951:16;3944:23;;4015:4;4007:6;4003:17;3995:6;3991:30;4044:3;4036:6;4033:15;4030:122;;;4063:79;;:::i;:::-;4030:122;4178:6;4161:220;4195:6;4190:3;4187:15;4161:220;;;4270:3;4299:37;4332:3;4320:10;4299:37;:::i;:::-;4294:3;4287:50;4366:4;4361:3;4357:14;4350:21;;4237:144;4221:4;4216:3;4212:14;4205:21;;4161:220;;;4165:21;3779:608;;3677:710;;;;;:::o;4410:370::-;4481:5;4530:3;4523:4;4515:6;4511:17;4507:27;4497:122;;4538:79;;:::i;:::-;4497:122;4655:6;4642:20;4680:94;4770:3;4762:6;4755:4;4747:6;4743:17;4680:94;:::i;:::-;4671:103;;4487:293;4410:370;;;;:::o;4786:117::-;4895:1;4892;4885:12;4909:307;4970:4;5060:18;5052:6;5049:30;5046:56;;;5082:18;;:::i;:::-;5046:56;5120:29;5142:6;5120:29;:::i;:::-;5112:37;;5204:4;5198;5194:15;5186:23;;4909:307;;;:::o;5222:154::-;5306:6;5301:3;5296;5283:30;5368:1;5359:6;5354:3;5350:16;5343:27;5222:154;;;:::o;5382:410::-;5459:5;5484:65;5500:48;5541:6;5500:48;:::i;:::-;5484:65;:::i;:::-;5475:74;;5572:6;5565:5;5558:21;5610:4;5603:5;5599:16;5648:3;5639:6;5634:3;5630:16;5627:25;5624:112;;;5655:79;;:::i;:::-;5624:112;5745:41;5779:6;5774:3;5769;5745:41;:::i;:::-;5465:327;5382:410;;;;;:::o;5811:338::-;5866:5;5915:3;5908:4;5900:6;5896:17;5892:27;5882:122;;5923:79;;:::i;:::-;5882:122;6040:6;6027:20;6065:78;6139:3;6131:6;6124:4;6116:6;6112:17;6065:78;:::i;:::-;6056:87;;5872:277;5811:338;;;;:::o;6155:1509::-;6309:6;6317;6325;6333;6341;6390:3;6378:9;6369:7;6365:23;6361:33;6358:120;;;6397:79;;:::i;:::-;6358:120;6517:1;6542:53;6587:7;6578:6;6567:9;6563:22;6542:53;:::i;:::-;6532:63;;6488:117;6644:2;6670:53;6715:7;6706:6;6695:9;6691:22;6670:53;:::i;:::-;6660:63;;6615:118;6800:2;6789:9;6785:18;6772:32;6831:18;6823:6;6820:30;6817:117;;;6853:79;;:::i;:::-;6817:117;6958:78;7028:7;7019:6;7008:9;7004:22;6958:78;:::i;:::-;6948:88;;6743:303;7113:2;7102:9;7098:18;7085:32;7144:18;7136:6;7133:30;7130:117;;;7166:79;;:::i;:::-;7130:117;7271:78;7341:7;7332:6;7321:9;7317:22;7271:78;:::i;:::-;7261:88;;7056:303;7426:3;7415:9;7411:19;7398:33;7458:18;7450:6;7447:30;7444:117;;;7480:79;;:::i;:::-;7444:117;7585:62;7639:7;7630:6;7619:9;7615:22;7585:62;:::i;:::-;7575:72;;7369:288;6155:1509;;;;;;;;:::o;7670:115::-;7755:23;7772:5;7755:23;:::i;:::-;7750:3;7743:36;7670:115;;:::o;7791:218::-;7882:4;7920:2;7909:9;7905:18;7897:26;;7933:69;7999:1;7988:9;7984:17;7975:6;7933:69;:::i;:::-;7791:218;;;;:::o;8015:1089::-;8119:6;8127;8135;8143;8151;8200:3;8188:9;8179:7;8175:23;8171:33;8168:120;;;8207:79;;:::i;:::-;8168:120;8327:1;8352:53;8397:7;8388:6;8377:9;8373:22;8352:53;:::i;:::-;8342:63;;8298:117;8454:2;8480:53;8525:7;8516:6;8505:9;8501:22;8480:53;:::i;:::-;8470:63;;8425:118;8582:2;8608:53;8653:7;8644:6;8633:9;8629:22;8608:53;:::i;:::-;8598:63;;8553:118;8710:2;8736:53;8781:7;8772:6;8761:9;8757:22;8736:53;:::i;:::-;8726:63;;8681:118;8866:3;8855:9;8851:19;8838:33;8898:18;8890:6;8887:30;8884:117;;;8920:79;;:::i;:::-;8884:117;9025:62;9079:7;9070:6;9059:9;9055:22;9025:62;:::i;:::-;9015:72;;8809:288;8015:1089;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "363800",
								"executionCost": "399",
								"totalCost": "364199"
							},
							"external": {
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "705"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 214,
									"end": 756,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 756,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220229c57fff39f0f3afbd64898e1da3d91e6c8ac9902e43ac6801b064403542e3c64736f6c634300080d0033",
									".code": [
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 756,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 756,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 402,
											"end": 625,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 504,
											"end": 508,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 543,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 528,
											"end": 539,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 528,
											"end": 577,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 528,
											"end": 577,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 617,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 605,
											"end": 616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 581,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 528,
											"end": 617,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 617,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 521,
											"end": 617,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 521,
											"end": 617,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 402,
											"end": 625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "BC197C81"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 709,
											"end": 745,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 702,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 702,
											"end": 745,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 498,
											"end": 753,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 425,
											"end": 431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "PUSH",
											"source": 4,
											"value": "F23A6E61"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 451,
											"end": 482,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 444,
											"end": 482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 444,
											"end": 482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 263,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 963,
											"end": 1003,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 956,
											"end": 1003,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 854,
											"end": 1011,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2025,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2132,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2242,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2236,
											"end": 2243,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2224,
											"end": 2229,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2234,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2216,
											"end": 2244,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2206,
											"end": 2244,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2148,
											"end": 2250,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2256,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2304,
											"end": 2381,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2405,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2391,
											"end": 2406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2429,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2430,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 2525,
											"end": 2552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2553,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2653,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2662,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2619,
											"end": 2637,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2607,
											"end": 2617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2601,
											"end": 2663,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 2666,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2706,
											"end": 2716,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2704,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2485,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2723,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2790,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 2819,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2729,
											"end": 2858,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3020,
											"end": 3050,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3053,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 3017,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3103,
											"end": 3107,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3091,
											"end": 3108,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3083,
											"end": 3108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3153,
											"end": 3168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3145,
											"end": 3168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2864,
											"end": 3175,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3181,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3288,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3292,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3348,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3370,
											"end": 3375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3359,
											"end": 3375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3381,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 3460,
											"end": 3484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3485,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3499,
											"end": 3500,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3496,
											"end": 3497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3489,
											"end": 3501,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3440,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3509,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3561,
											"end": 3566,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3586,
											"end": 3606,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3642,
											"end": 3647,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3615,
											"end": 3648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3515,
											"end": 3654,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3778,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3871,
											"end": 3877,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3814,
											"end": 3878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3798,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3789,
											"end": 3879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3899,
											"end": 3904,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3921,
											"end": 3926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3914,
											"end": 3935,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3962,
											"end": 3966,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3955,
											"end": 3960,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3967,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3944,
											"end": 3967,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4007,
											"end": 4013,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4003,
											"end": 4020,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4001,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3991,
											"end": 4021,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4044,
											"end": 4047,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4033,
											"end": 4048,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4063,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4178,
											"end": 4184,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4190,
											"end": 4193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4270,
											"end": 4273,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4299,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4294,
											"end": 4297,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4287,
											"end": 4337,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4361,
											"end": 4364,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4357,
											"end": 4371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4350,
											"end": 4371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4237,
											"end": 4381,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4221,
											"end": 4225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4216,
											"end": 4219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4212,
											"end": 4226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4205,
											"end": 4226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4161,
											"end": 4381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3677,
											"end": 4387,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4511,
											"end": 4528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4534,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4538,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4497,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4655,
											"end": 4661,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4642,
											"end": 4662,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4770,
											"end": 4773,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4680,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4671,
											"end": 4774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4487,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4410,
											"end": 4780,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 4786,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4970,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5078,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5052,
											"end": 5058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5079,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5046,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5142,
											"end": 5148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5120,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5208,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5186,
											"end": 5209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 5216,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5296,
											"end": 5299,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5283,
											"end": 5313,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5359,
											"end": 5365,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5354,
											"end": 5357,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5376,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5459,
											"end": 5464,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5541,
											"end": 5547,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5500,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5484,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5549,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5475,
											"end": 5549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5572,
											"end": 5578,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5558,
											"end": 5579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5610,
											"end": 5614,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5603,
											"end": 5608,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5648,
											"end": 5651,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5637,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5630,
											"end": 5646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5627,
											"end": 5652,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5655,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5624,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5772,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5745,
											"end": 5786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5465,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5382,
											"end": 5792,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5866,
											"end": 5871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5908,
											"end": 5912,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5896,
											"end": 5913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5892,
											"end": 5919,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5923,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5882,
											"end": 6004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6040,
											"end": 6046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 6139,
											"end": 6142,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6131,
											"end": 6137,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6124,
											"end": 6128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6116,
											"end": 6122,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 6065,
											"end": 6143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6056,
											"end": 6143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5872,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5811,
											"end": 6149,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6393,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6378,
											"end": 6387,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6369,
											"end": 6376,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6388,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6361,
											"end": 6394,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6397,
											"end": 6476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6358,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6517,
											"end": 6518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6578,
											"end": 6584,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6567,
											"end": 6576,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6542,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6595,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6488,
											"end": 6605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6715,
											"end": 6722,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6706,
											"end": 6712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6695,
											"end": 6704,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6670,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6800,
											"end": 6802,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6789,
											"end": 6798,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6772,
											"end": 6804,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6823,
											"end": 6829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 6853,
											"end": 6932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6817,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7028,
											"end": 7035,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7019,
											"end": 7025,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7017,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7026,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6958,
											"end": 7036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7036,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6948,
											"end": 7036,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6743,
											"end": 7046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7115,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7102,
											"end": 7111,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7116,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7117,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7163,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 7166,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7130,
											"end": 7247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7341,
											"end": 7348,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7332,
											"end": 7338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7330,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 7271,
											"end": 7349,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7349,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7349,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7056,
											"end": 7359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7426,
											"end": 7429,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7415,
											"end": 7424,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7411,
											"end": 7430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7398,
											"end": 7431,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7458,
											"end": 7476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7450,
											"end": 7456,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7447,
											"end": 7477,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7480,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 7444,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7639,
											"end": 7646,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7585,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7575,
											"end": 7647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7369,
											"end": 7657,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6155,
											"end": 7664,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7772,
											"end": 7777,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 7755,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7750,
											"end": 7753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7743,
											"end": 7779,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7670,
											"end": 7785,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7882,
											"end": 7886,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7920,
											"end": 7922,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7909,
											"end": 7918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7999,
											"end": 8000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 7997,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7984,
											"end": 8001,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7975,
											"end": 7981,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7933,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7791,
											"end": 8009,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8141,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8143,
											"end": 8149,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8151,
											"end": 8157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 8188,
											"end": 8197,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8175,
											"end": 8198,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8204,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 8207,
											"end": 8286,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 8168,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8397,
											"end": 8404,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8388,
											"end": 8394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8377,
											"end": 8386,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8352,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8298,
											"end": 8415,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8454,
											"end": 8456,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8525,
											"end": 8532,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8516,
											"end": 8522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8505,
											"end": 8514,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8501,
											"end": 8523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8480,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8470,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8584,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8653,
											"end": 8660,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8650,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8633,
											"end": 8642,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8629,
											"end": 8651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8608,
											"end": 8661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8661,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8598,
											"end": 8661,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8553,
											"end": 8671,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8710,
											"end": 8712,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 8781,
											"end": 8788,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8761,
											"end": 8770,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 8757,
											"end": 8779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 8736,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8789,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8681,
											"end": 8799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8866,
											"end": 8869,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8855,
											"end": 8864,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 8870,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8871,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8898,
											"end": 8916,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8890,
											"end": 8896,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8887,
											"end": 8917,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8920,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8884,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9079,
											"end": 9086,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9070,
											"end": 9076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9059,
											"end": 9068,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9055,
											"end": 9077,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 9025,
											"end": 9087,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9087,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9015,
											"end": 9087,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 9097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8015,
											"end": 9104,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xff419f22f3a06f6cd02691a009684a7f867d6d4e172b2f52737b50f834a72396\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e6cfb228f9963fe6dde878e712fbb5c9b9816dd13c8fc0b592d8262157795e9\",\"dweb:/ipfs/QmU8wSfCv3H4pWFnKzrA9ZY7WDerZ3DrxaR4dU8qmqZdQh\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":\"ERC1155Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x4ba2a338f978e2583504415d02a4b84a08d41080f94615f3e941582e4aab457c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c00788cade853dbf1af82565877f5038e974fd599cb068497977588d893d2f1\",\"dweb:/ipfs/QmQgDRFe1y9zzVN3RzoAxYFkFkpCER8FwbF3UgdyDpQvT4\"]},\"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"keccak256\":\"0x5576eca134a9c67ca351f0b4e7d6b821ae694ff13708ee449420b7c2d746818a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a851368585b7849c729c3d39ce85253f8a12601c6640fd2e9480cbbf9bb1601\",\"dweb:/ipfs/Qma4Y3TwioVsCk4ZFivEvoYgcG2v2m3CnKomRVPVDYBv2B\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220873c88ce5c5caab64964171169851c0c7841b1ab45de91aff4fe995e6f6be8d464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220873c88ce5c5caab64964171169851c0c7841b1ab45de91aff4fe995e6f6be8d464736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 EXTCODECOPY DUP9 0xCE 0x5C 0x5C 0xAA 0xB6 0x49 PUSH5 0x171169851C 0xC PUSH25 0x41B1AB45DE91AFF4FE995E6F6BE8D464736F6C634300080D00 CALLER ",
							"sourceMap": "662:3351:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220873c88ce5c5caab64964171169851c0c7841b1ab45de91aff4fe995e6f6be8d464736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 EXTCODECOPY DUP9 0xCE 0x5C 0x5C 0xAA 0xB6 0x49 PUSH5 0x171169851C 0xC PUSH25 0x41B1AB45DE91AFF4FE995E6F6BE8D464736F6C634300080D00 CALLER ",
							"sourceMap": "662:3351:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220873c88ce5c5caab64964171169851c0c7841b1ab45de91aff4fe995e6f6be8d464736f6c634300080d0033",
									".code": [
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ac162eacee92de3a0c47ebb8bff28985b2ac3e05e5253cc9e8e78ed60812b6dc64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac162eacee92de3a0c47ebb8bff28985b2ac3e05e5253cc9e8e78ed60812b6dc64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC AND 0x2E 0xAC 0xEE SWAP3 0xDE GASPRICE 0xC SELFBALANCE 0xEB 0xB8 0xBF CALLCODE DUP10 DUP6 0xB2 0xAC RETURNDATACOPY SDIV 0xE5 0x25 EXTCODECOPY 0xC9 0xE8 0xE7 DUP15 0xD6 ADDMOD SLT 0xB6 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "187:7937:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ac162eacee92de3a0c47ebb8bff28985b2ac3e05e5253cc9e8e78ed60812b6dc64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC AND 0x2E 0xAC 0xEE SWAP3 0xDE GASPRICE 0xC SELFBALANCE 0xEB 0xB8 0xBF CALLCODE DUP10 DUP6 0xB2 0xAC RETURNDATACOPY SDIV 0xE5 0x25 EXTCODECOPY 0xC9 0xE8 0xE7 DUP15 0xD6 ADDMOD SLT 0xB6 0xDC PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "187:7937:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ac162eacee92de3a0c47ebb8bff28985b2ac3e05e5253cc9e8e78ed60812b6dc64736f6c634300080d0033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e9c9623e41927c20be8e2322189d751d3ffe90ab88ee95957bcffd091206c5d764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9c9623e41927c20be8e2322189d751d3ffe90ab88ee95957bcffd091206c5d764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xC9 PUSH3 0x3E4192 PUSH29 0x20BE8E2322189D751D3FFE90AB88EE95957BCFFD091206C5D764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "482:6512:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e9c9623e41927c20be8e2322189d751d3ffe90ab88ee95957bcffd091206c5d764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 0xC9 PUSH3 0x3E4192 PUSH29 0x20BE8E2322189D751D3FFE90AB88EE95957BCFFD091206C5D764736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "482:6512:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9c9623e41927c20be8e2322189d751d3ffe90ab88ee95957bcffd091206c5d764736f6c634300080d0033",
									".code": [
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n   --> nft/LPStakeWithdrawNft.sol:257:5:\n    |\n257 |     constructor() public {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7930,
					"file": "nft/LPStakeWithdrawNft.sol",
					"start": 7901
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> nft/LPStakeWithdrawNft.sol:48:65:\n   |\n48 |     function power(uint256 a, uint256 b) internal pure returns (uint256){\n   |                                                                 ^^^^^^^\n\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1708,
					"file": "nft/LPStakeWithdrawNft.sol",
					"start": 1701
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> nft/LPStakeWithdrawNft.sol:367:30:\n    |\n367 |         (uint256 minTokenId, uint256 index) = LibArrayForUint256Utils.min(nftIds);\n    |                              ^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 11468,
					"file": "nft/LPStakeWithdrawNft.sol",
					"start": 11455
				},
				"type": "Warning"
			}
		],
		"sources": {
			"nft/LPStakeWithdrawNft.sol": {
				"ast": {
					"absolutePath": "nft/LPStakeWithdrawNft.sol",
					"exportedSymbols": {
						"Address": [
							2319
						],
						"Context": [
							2341
						],
						"ERC1155Holder": [
							1686
						],
						"ERC1155Receiver": [
							1720
						],
						"ERC165": [
							2365
						],
						"Farming": [
							1367
						],
						"IERC1155": [
							1594
						],
						"IERC1155Receiver": [
							1635
						],
						"IERC165": [
							2377
						],
						"IERC20": [
							1798
						],
						"LibArrayForUint256Utils": [
							848
						],
						"LibSafeMathForUint256Utils": [
							253
						],
						"Ownable": [
							1472
						],
						"SafeERC20": [
							2022
						],
						"SafeMath": [
							2689
						]
					},
					"id": 1368,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "59:23:0"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 2690,
							"src": "86:73:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 2023,
							"src": "161:81:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 1473,
							"src": "244:68:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 1799,
							"src": "314:72:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 1595,
							"src": "388:76:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1368,
							"sourceUnit": 1687,
							"src": "466:87:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibSafeMathForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "LibSafeMathForUint256Utils",
							"nameLocation": "567:26:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "670:122:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "689:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 31,
														"src": "681:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 16,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 18,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "693:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 19,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "693:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "681:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 23,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "722:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "717:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206164646974696f6e206f766572666c6f77",
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "725:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															},
															"value": "SafeMathForUint256: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c9da0e7efe2ae89c8de7c350ed9213c6fb30e7fa9663c01556ccc8b0eab72b48",
																"typeString": "literal_string \"SafeMathForUint256: addition overflow\""
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "709:56:0"
											},
											{
												"expression": {
													"id": 29,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 17,
													"src": "783:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 15,
												"id": 30,
												"nodeType": "Return",
												"src": "776:8:0"
											}
										]
									},
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "612:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "624:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "616:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "615:22:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:9:0"
									},
									"scope": 253,
									"src": "603:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "867:125:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 42,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "886:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 43,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 34,
																"src": "891:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "886:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a207375627472616374696f6e206f766572666c6f77",
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "894:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															},
															"value": "SafeMathForUint256: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_847bd1a6b8cf189e81b4145d8c618f68241c54003b24b69bca6a472e70b9d9d2",
																"typeString": "literal_string \"SafeMathForUint256: subtraction overflow\""
															}
														],
														"id": 41,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "878:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "878:59:0"
											},
											{
												"assignments": [
													49
												],
												"declarations": [
													{
														"constant": false,
														"id": 49,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "956:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 56,
														"src": "948:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 48,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 53,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 50,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "960:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 51,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "964:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "960:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "948:17:0"
											},
											{
												"expression": {
													"id": 54,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 49,
													"src": "983:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 40,
												"id": 55,
												"nodeType": "Return",
												"src": "976:8:0"
											}
										]
									},
									"id": 57,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "809:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "824:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:22:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "858:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:9:0"
									},
									"scope": 253,
									"src": "800:192:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "1067:201:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 66,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "1082:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1087:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1082:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 71,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 69,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1092:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1082:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "1078:57:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "1100:35:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1122:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 65,
															"id": 74,
															"nodeType": "Return",
															"src": "1115:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													78
												],
												"declarations": [
													{
														"constant": false,
														"id": 78,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1155:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 94,
														"src": "1147:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 77,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 82,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 79,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 59,
														"src": "1159:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 80,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 61,
														"src": "1163:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1159:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1147:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 84,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "1183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 85,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1183:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 87,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "1192:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1183:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1195:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															},
															"value": "SafeMathForUint256: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6424eea3150b76e251700d0b8cb674c39129e724a70d249e6eae5feba5433817",
																"typeString": "literal_string \"SafeMathForUint256: multiplication overflow\""
															}
														],
														"id": 83,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1175:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1175:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "1175:66:0"
											},
											{
												"expression": {
													"id": 92,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 78,
													"src": "1259:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 93,
												"nodeType": "Return",
												"src": "1252:8:0"
											}
										]
									},
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "1009:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1021:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1013:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1032:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1024:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:22:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "1058:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1057:9:0"
									},
									"scope": 253,
									"src": "1000:268:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1343:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 105,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1362:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1366:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1362:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206469766973696f6e206279207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1369:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															},
															"value": "SafeMathForUint256: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_217180822522c38059cd472764b6fa8e48e8a911e3c9c815f096f98b7bbccd81",
																"typeString": "literal_string \"SafeMathForUint256: division by zero\""
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1354:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "1354:54:0"
											},
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1427:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1419:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 111,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 116,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "1431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 114,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 99,
														"src": "1435:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1419:17:0"
											},
											{
												"expression": {
													"id": 117,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 112,
													"src": "1454:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 103,
												"id": 118,
												"nodeType": "Return",
												"src": "1447:8:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "1285:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1297:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1289:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1308:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1300:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:22:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1334:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1333:9:0"
									},
									"scope": 253,
									"src": "1276:187:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1538:95:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 130,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1557:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1562:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d617468466f7255696e743235363a206d6f64756c6f206279207a65726f",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1565:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															},
															"value": "SafeMathForUint256: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0dbda363b1883789ab994ef5f25300cc9d5766f4fb98606704a659bf40943073",
																"typeString": "literal_string \"SafeMathForUint256: modulo by zero\""
															}
														],
														"id": 129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1549:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1549:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "1549:53:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 136,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1620:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 137,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1624:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1620:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 128,
												"id": 139,
												"nodeType": "Return",
												"src": "1613:12:0"
											}
										]
									},
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "1480:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1492:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1484:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1503:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1495:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1483:22:0"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1529:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:9:0"
									},
									"scope": 253,
									"src": "1471:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "1709:176:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 150,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "1725:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1730:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "IfStatement",
												"src": "1722:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 149,
													"id": 154,
													"nodeType": "Return",
													"src": "1733:8:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 156,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1760:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1755:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 161,
												"nodeType": "IfStatement",
												"src": "1752:19:0",
												"trueBody": {
													"expression": {
														"hexValue": "31",
														"id": 159,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"functionReturnParameters": 149,
													"id": 160,
													"nodeType": "Return",
													"src": "1763:8:0"
												}
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"mutability": "mutable",
														"name": "c",
														"nameLocation": "1792:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 185,
														"src": "1784:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1784:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"hexValue": "31",
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1796:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1784:13:0"
											},
											{
												"body": {
													"id": 183,
													"nodeType": "Block",
													"src": "1838:40:0",
													"statements": [
														{
															"expression": {
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 176,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 178,
																			"name": "c",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "1861:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 179,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1864:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 177,
																		"name": "mul",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1857:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1857:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1853:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 182,
															"nodeType": "ExpressionStatement",
															"src": "1853:13:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 170,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "1827:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 171,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "1831:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1827:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 184,
												"initializationExpression": {
													"assignments": [
														167
													],
													"declarations": [
														{
															"constant": false,
															"id": 167,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1820:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 184,
															"src": "1812:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 166,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1812:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 169,
													"initialValue": {
														"hexValue": "30",
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1824:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1812:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1834:3:0",
														"subExpression": {
															"id": 173,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "1834:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 175,
													"nodeType": "ExpressionStatement",
													"src": "1834:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1808:70:0"
											}
										]
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "power",
									"nameLocation": "1650:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1664:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1656:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1675:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1667:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1655:22:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "1701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:9:0"
									},
									"scope": 253,
									"src": "1641:244:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "1960:40:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 195,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 196,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "1983:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1991:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1978:14:0",
													"trueExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 194,
												"id": 201,
												"nodeType": "Return",
												"src": "1971:21:0"
											}
										]
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "1902:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1914:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1906:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1925:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1917:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:22:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "1951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:9:0"
									},
									"scope": 253,
									"src": "1893:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "2075:39:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "2093:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 213,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2097:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2093:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 216,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2105:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2093:13:0",
													"trueExpression": {
														"id": 215,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2101:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 211,
												"id": 218,
												"nodeType": "Return",
												"src": "2086:20:0"
											}
										]
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2017:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2029:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2021:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2040:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2032:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2066:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:9:0"
									},
									"scope": 253,
									"src": "2008:106:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2193:67:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 229,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "2212:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2216:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2212:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 232,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2211:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 235,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 233,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "2222:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2226:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "2222:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 236,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2221:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2211:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 238,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 222,
																					"src": "2233:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2237:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2233:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 241,
																					"name": "b",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2241:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "%",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 242,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2245:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "2241:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2233:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 245,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2232:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2250:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "2232:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 248,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2231:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2211:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 228,
												"id": 250,
												"nodeType": "Return",
												"src": "2204:48:0"
											}
										]
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2147:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2139:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2158:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2150:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2138:22:0"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2184:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2183:9:0"
									},
									"scope": 253,
									"src": "2122:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1368,
							"src": "559:1704:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LibArrayForUint256Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "LibArrayForUint256Utils",
							"nameLocation": "2275:23:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "2802:497:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 266,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2816:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2832:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2816:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "2813:62:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "2834:41:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2854:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2861:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 272,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2853:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 265,
															"id": 273,
															"nodeType": "Return",
															"src": "2846:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													277
												],
												"declarations": [
													{
														"constant": false,
														"id": 277,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "2895:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2887:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 276,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"hexValue": "30",
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2901:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2887:15:0"
											},
											{
												"assignments": [
													281
												],
												"declarations": [
													{
														"constant": false,
														"id": 281,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "2921:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "2913:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 286,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 282,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "2928:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2928:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2941:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2928:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:29:0"
											},
											{
												"body": {
													"id": 329,
													"nodeType": "Block",
													"src": "2973:289:0",
													"statements": [
														{
															"assignments": [
																291
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 291,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "2993:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 329,
																	"src": "2985:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 290,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2985:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 297,
															"initialValue": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 277,
																		"src": "3034:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 295,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3039:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 292,
																		"name": "LibSafeMathForUint256Utils",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2999:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_LibSafeMathForUint256Utils_$253_$",
																			"typeString": "type(library LibSafeMathForUint256Utils)"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 252,
																	"src": "2999:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2999:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2985:59:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 298,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 257,
																		"src": "3059:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "mid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "3065:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3059:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 301,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "3073:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3059:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 308,
																			"name": "array",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "3130:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																				"typeString": "uint256[] storage pointer"
																			}
																		},
																		"id": 310,
																		"indexExpression": {
																			"id": 309,
																			"name": "mid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "3136:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3130:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 311,
																		"name": "key",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "3143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3130:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 326,
																	"nodeType": "Block",
																	"src": "3203:48:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 320,
																					"name": "low",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "3222:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 321,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3228:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3234:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3228:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3222:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 325,
																			"nodeType": "ExpressionStatement",
																			"src": "3222:13:0"
																		}
																	]
																},
																"id": 327,
																"nodeType": "IfStatement",
																"src": "3126:125:0",
																"trueBody": {
																	"id": 319,
																	"nodeType": "Block",
																	"src": "3148:49:0",
																	"statements": [
																		{
																			"expression": {
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 313,
																					"name": "high",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 281,
																					"src": "3167:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 314,
																						"name": "mid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 291,
																						"src": "3174:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3180:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "3174:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3167:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 318,
																			"nodeType": "ExpressionStatement",
																			"src": "3167:14:0"
																		}
																	]
																}
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "3056:195:0",
															"trueBody": {
																"id": 307,
																"nodeType": "Block",
																"src": "3077:44:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 303,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3098:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 304,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 291,
																					"src": "3104:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 305,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3097:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 265,
																		"id": 306,
																		"nodeType": "Return",
																		"src": "3090:18:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 287,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 277,
														"src": "2961:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 288,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 281,
														"src": "2968:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2961:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 330,
												"nodeType": "WhileStatement",
												"src": "2955:307:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3289:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 333,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3281:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 265,
												"id": 334,
												"nodeType": "Return",
												"src": "3274:17:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2305:399:0",
										"text": " @dev Searches a sortd uint256 array and returns the first element index that \n match the key value, Time complexity O(log n)\n @param array is expected to be sorted in ascending order\n @param key is element \n @return if matches key in the array return true,else return false \n @return the first element index that match the key value,if not exist,return 0"
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "binarySearch",
									"nameLocation": "2716:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "2747:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2729:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 255,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 256,
													"nodeType": "ArrayTypeName",
													"src": "2729:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "2762:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2754:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:38:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2790:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 261,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2790:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "2796:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2796:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:12:0"
									},
									"scope": 848,
									"src": "2707:592:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3405:220:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 348,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3418:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3418:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3418:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 357,
												"nodeType": "IfStatement",
												"src": "3415:56:0",
												"trueBody": {
													"id": 356,
													"nodeType": "Block",
													"src": "3436:35:0",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3453:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3460:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3452:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 347,
															"id": 355,
															"nodeType": "Return",
															"src": "3445:17:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 380,
													"nodeType": "Block",
													"src": "3521:72:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 369,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 339,
																		"src": "3533:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 371,
																	"indexExpression": {
																		"id": 370,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 359,
																		"src": "3539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3533:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 372,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 341,
																	"src": "3545:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3533:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 379,
															"nodeType": "IfStatement",
															"src": "3530:55:0",
															"trueBody": {
																"id": 378,
																"nodeType": "Block",
																"src": "3549:36:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"hexValue": "74727565",
																					"id": 374,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3567:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				},
																				{
																					"id": 375,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 359,
																					"src": "3573:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 376,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "3566:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																				"typeString": "tuple(bool,uint256)"
																			}
																		},
																		"functionReturnParameters": 347,
																		"id": 377,
																		"nodeType": "Return",
																		"src": "3559:16:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 362,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "3499:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 363,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "3503:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3503:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3499:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"initializationExpression": {
													"assignments": [
														359
													],
													"declarations": [
														{
															"constant": false,
															"id": 359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3492:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 381,
															"src": "3484:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 361,
													"initialValue": {
														"hexValue": "30",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3484:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3517:3:0",
														"subExpression": {
															"id": 366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 359,
															"src": "3517:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "3517:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3480:113:0"
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "66616c7365",
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3615:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"id": 384,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3607:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
														"typeString": "tuple(bool,int_const 0)"
													}
												},
												"functionReturnParameters": 347,
												"id": 385,
												"nodeType": "Return",
												"src": "3600:17:0"
											}
										]
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "firstIndexOf",
									"nameLocation": "3316:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3347:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3329:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 337,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 338,
													"nodeType": "ArrayTypeName",
													"src": "3329:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "3362:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3354:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3328:38:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3390:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3390:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3396:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3389:15:0"
									},
									"scope": 848,
									"src": "3307:318:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3684:229:0",
										"statements": [
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "3703:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "3695:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 393,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:12:0"
											},
											{
												"body": {
													"id": 439,
													"nodeType": "Block",
													"src": "3762:144:0",
													"statements": [
														{
															"expression": {
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 409,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3777:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 410,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3784:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 412,
																	"indexExpression": {
																		"id": 411,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3790:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3777:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 414,
															"nodeType": "ExpressionStatement",
															"src": "3777:15:0"
														},
														{
															"expression": {
																"id": 426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 415,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3807:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 417,
																	"indexExpression": {
																		"id": 416,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3813:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3807:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 418,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3818:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 425,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 419,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3824:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3824:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3839:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3824:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 423,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3843:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3824:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3818:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3807:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 427,
															"nodeType": "ExpressionStatement",
															"src": "3807:38:0"
														},
														{
															"expression": {
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 428,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "3860:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 435,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 429,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 390,
																					"src": "3866:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "3866:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3881:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3866:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 433,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3860:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 436,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "3890:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3860:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 438,
															"nodeType": "ExpressionStatement",
															"src": "3860:34:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 400,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 401,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "3739:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3739:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3754:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "3739:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3735:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 440,
												"initializationExpression": {
													"assignments": [
														397
													],
													"declarations": [
														{
															"constant": false,
															"id": 397,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3728:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 440,
															"src": "3723:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 396,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3723:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 399,
													"initialValue": {
														"hexValue": "30",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3732:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3723:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3757:3:0",
														"subExpression": {
															"id": 406,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "3757:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 408,
													"nodeType": "ExpressionStatement",
													"src": "3757:3:0"
												},
												"nodeType": "ForStatement",
												"src": "3718:188:0"
											}
										]
									},
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reverse",
									"nameLocation": "3642:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "3668:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3650:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 388,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 389,
													"nodeType": "ArrayTypeName",
													"src": "3650:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3649:25:0"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3684:0:0"
									},
									"scope": 848,
									"src": "3633:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "4007:197:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 453,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4018:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 455,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4030:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4018:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "4015:54:0",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "4039:30:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4055:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 452,
															"id": 459,
															"nodeType": "Return",
															"src": "4048:12:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 484,
													"nodeType": "Block",
													"src": "4113:65:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 473,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "4125:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 475,
																	"indexExpression": {
																		"id": 474,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4127:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4125:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"baseExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 448,
																		"src": "4133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 478,
																	"indexExpression": {
																		"id": 477,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 463,
																		"src": "4135:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4125:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "4122:48:0",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "4138:32:0",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4155:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 452,
																		"id": 481,
																		"nodeType": "Return",
																		"src": "4148:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "4095:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 467,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "4099:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4099:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4095:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"initializationExpression": {
													"assignments": [
														463
													],
													"declarations": [
														{
															"constant": false,
															"id": 463,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4088:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 485,
															"src": "4080:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 462,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4080:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 465,
													"initialValue": {
														"hexValue": "30",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4092:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4080:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4109:3:0",
														"subExpression": {
															"id": 470,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ExpressionStatement",
													"src": "4109:3:0"
												},
												"nodeType": "ForStatement",
												"src": "4076:102:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4192:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 487,
												"nodeType": "Return",
												"src": "4185:11:0"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equals",
									"nameLocation": "3930:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3955:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3937:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 443,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 444,
													"nodeType": "ArrayTypeName",
													"src": "3937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3976:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3958:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 446,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 447,
													"nodeType": "ArrayTypeName",
													"src": "3958:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:42:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4002:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4002:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:6:0"
									},
									"scope": 848,
									"src": "3921:283:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "4280:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 498,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4296:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 499,
																	"name": "array",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 492,
																	"src": "4304:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																		"typeString": "uint256[] storage pointer"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4304:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4296:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179466f7255696e743235363a20696e646578206f7574206f6620626f756e6473",
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															},
															"value": "ArrayForUint256: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f492bb007144cfa65fad0a974440a0c95dbfa872b90e8350c4ea4c5436bd7945",
																"typeString": "literal_string \"ArrayForUint256: index out of bounds\""
															}
														],
														"id": 497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4288:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "4288:69:0"
											},
											{
												"body": {
													"id": 524,
													"nodeType": "Block",
													"src": "4403:80:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 511,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4418:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 513,
																	"indexExpression": {
																		"id": 512,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 494,
																		"src": "4424:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 514,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "4433:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 515,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 494,
																			"src": "4439:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4447:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4439:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4433:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4418:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "4418:31:0"
														},
														{
															"expression": {
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4464:7:0",
																"subExpression": {
																	"id": 521,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4464:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 523,
															"nodeType": "ExpressionStatement",
															"src": "4464:7:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 505,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "4377:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4385:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4385:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4385:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4377:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "WhileStatement",
												"src": "4370:113:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 526,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4493:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4493:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4493:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "4493:11:0"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByIndex",
									"nameLocation": "4221:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4235:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4235:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "4235:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4265:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "4260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:37:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4280:0:0"
									},
									"scope": 848,
									"src": "4212:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "4595:172:0",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4611:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4606:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 540,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4606:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"nodeType": "VariableDeclarationStatement",
												"src": "4606:10:0"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4632:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "4627:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4627:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"nodeType": "VariableDeclarationStatement",
												"src": "4627:9:0"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 546,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "4648:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 547,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "4654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 548,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4647:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 550,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "4676:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 551,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 537,
																"src": "4683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 549,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4663:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4663:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4647:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4647:42:0"
											},
											{
												"condition": {
													"id": 555,
													"name": "isIn",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "4703:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "4700:60:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "4708:52:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 557,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "4735:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"id": 558,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 541,
																		"src": "4742:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 556,
																	"name": "removeByIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4721:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4721:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "4721:27:0"
														}
													]
												}
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeByValue",
									"nameLocation": "4533:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4547:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 533,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4547:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ArrayTypeName",
													"src": "4547:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4580:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4546:40:0"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4595:0:0"
									},
									"scope": 848,
									"src": "4524:243:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 597,
										"nodeType": "Block",
										"src": "4841:159:0",
										"statements": [
											{
												"assignments": [
													573
												],
												"declarations": [
													{
														"constant": false,
														"id": 573,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "4854:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4849:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 572,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 574,
												"nodeType": "VariableDeclarationStatement",
												"src": "4849:10:0"
											},
											{
												"assignments": [
													576
												],
												"declarations": [
													{
														"constant": false,
														"id": 576,
														"mutability": "mutable",
														"name": "isIn",
														"nameLocation": "4875:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 597,
														"src": "4870:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 575,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4870:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 577,
												"nodeType": "VariableDeclarationStatement",
												"src": "4870:9:0"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 578,
																"name": "isIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 576,
																"src": "4891:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"id": 579,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "4897:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 580,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4890:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 582,
																"name": "array",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "4919:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																}
															},
															{
																"id": 583,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "4926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[] storage pointer"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 581,
															"name": "firstIndexOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "4906:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_bool_$_t_uint256_$",
																"typeString": "function (uint256[] storage pointer,uint256) view returns (bool,uint256)"
															}
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4906:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
															"typeString": "tuple(bool,uint256)"
														}
													},
													"src": "4890:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "4890:42:0"
											},
											{
												"condition": {
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4946:5:0",
													"subExpression": {
														"id": 587,
														"name": "isIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "4947:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "4943:50:0",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "4952:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "4975:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 589,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "4964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "4964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4964:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "4964:17:0"
														}
													]
												}
											}
										]
									},
									"id": 598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addValue",
									"nameLocation": "4784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "4811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4793:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 565,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 566,
													"nodeType": "ArrayTypeName",
													"src": "4793:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4826:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "4818:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:40:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4841:0:0"
									},
									"scope": 848,
									"src": "4775:225:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "5074:115:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 607,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "5085:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5085:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5097:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5085:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "5082:100:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "5099:83:0",
													"statements": [
														{
															"body": {
																"id": 630,
																"nodeType": "Block",
																"src": "5142:32:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 625,
																						"name": "b",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 604,
																						"src": "5159:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 627,
																					"indexExpression": {
																						"id": 626,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 612,
																						"src": "5161:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5159:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 622,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 601,
																					"src": "5152:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "5152:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer,uint256)"
																				}
																			},
																			"id": 628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5152:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 629,
																		"nodeType": "ExpressionStatement",
																		"src": "5152:12:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 615,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "5124:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 616,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "5128:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5128:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 631,
															"initializationExpression": {
																"assignments": [
																	612
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 612,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5117:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 631,
																		"src": "5112:6:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 611,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5112:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 614,
																"initialValue": {
																	"hexValue": "30",
																	"id": 613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5112:10:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5138:3:0",
																	"subExpression": {
																		"id": 619,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "5138:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 621,
																"nodeType": "ExpressionStatement",
																"src": "5138:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5108:66:0"
														}
													]
												}
											}
										]
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "extend",
									"nameLocation": "5017:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5042:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5024:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 599,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 600,
													"nodeType": "ArrayTypeName",
													"src": "5024:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5062:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "5045:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 602,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 603,
													"nodeType": "ArrayTypeName",
													"src": "5045:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5023:41:0"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5074:0:0"
									},
									"scope": 848,
									"src": "5008:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "5274:667:0",
										"statements": [
											{
												"assignments": [
													644
												],
												"declarations": [
													{
														"constant": false,
														"id": 644,
														"mutability": "mutable",
														"name": "contains",
														"nameLocation": "5290:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5285:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 643,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 645,
												"nodeType": "VariableDeclarationStatement",
												"src": "5285:13:0"
											},
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "5314:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5309:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "5309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 648,
												"nodeType": "VariableDeclarationStatement",
												"src": "5309:10:0"
											},
											{
												"body": {
													"id": 737,
													"nodeType": "Block",
													"src": "5370:532:0",
													"statements": [
														{
															"expression": {
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 660,
																	"name": "contains",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 644,
																	"src": "5385:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5396:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5385:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 663,
															"nodeType": "ExpressionStatement",
															"src": "5385:16:0"
														},
														{
															"expression": {
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 664,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "5416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5416:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 667,
															"nodeType": "ExpressionStatement",
															"src": "5416:9:0"
														},
														{
															"assignments": [
																669
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 669,
																	"mutability": "mutable",
																	"name": "j",
																	"nameLocation": "5445:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 737,
																	"src": "5440:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 668,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5440:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 673,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "5449:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "5449:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5440:12:0"
														},
														{
															"body": {
																"id": 699,
																"nodeType": "Block",
																"src": "5494:175:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 681,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5516:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 683,
																				"indexExpression": {
																					"id": 682,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5522:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5516:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"id": 684,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5528:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 686,
																				"indexExpression": {
																					"id": 685,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 650,
																					"src": "5534:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5528:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5516:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 698,
																		"nodeType": "IfStatement",
																		"src": "5513:141:0",
																		"trueBody": {
																			"id": 697,
																			"nodeType": "Block",
																			"src": "5537:117:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 690,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 688,
																							"name": "contains",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 644,
																							"src": "5560:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 689,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5570:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "5560:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 691,
																					"nodeType": "ExpressionStatement",
																					"src": "5560:14:0"
																				},
																				{
																					"expression": {
																						"id": 694,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 692,
																							"name": "index",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 647,
																							"src": "5597:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 693,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 650,
																							"src": "5605:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5597:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 695,
																					"nodeType": "ExpressionStatement",
																					"src": "5597:9:0"
																				},
																				{
																					"id": 696,
																					"nodeType": "Break",
																					"src": "5629:5:0"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "5472:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 675,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "5476:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5476:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5472:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 700,
															"loopExpression": {
																"expression": {
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5490:3:0",
																	"subExpression": {
																		"id": 678,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "5490:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 680,
																"nodeType": "ExpressionStatement",
																"src": "5490:3:0"
															},
															"nodeType": "ForStatement",
															"src": "5467:202:0"
														},
														{
															"condition": {
																"id": 701,
																"name": "contains",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 644,
																"src": "5687:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 736,
															"nodeType": "IfStatement",
															"src": "5683:208:0",
															"trueBody": {
																"id": 735,
																"nodeType": "Block",
																"src": "5697:194:0",
																"statements": [
																	{
																		"body": {
																			"id": 725,
																			"nodeType": "Block",
																			"src": "5758:66:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 723,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 715,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5781:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 717,
																							"indexExpression": {
																								"id": 716,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 669,
																								"src": "5787:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5781:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 718,
																								"name": "array",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 638,
																								"src": "5792:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																									"typeString": "uint256[] storage pointer"
																								}
																							},
																							"id": 722,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 721,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 719,
																									"name": "j",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 669,
																									"src": "5798:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 720,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5802:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5798:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5792:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5781:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 724,
																					"nodeType": "ExpressionStatement",
																					"src": "5781:23:0"
																				}
																			]
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 706,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 669,
																				"src": "5732:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 707,
																						"name": "array",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 638,
																						"src": "5736:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																							"typeString": "uint256[] storage pointer"
																						}
																					},
																					"id": 708,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "length",
																					"nodeType": "MemberAccess",
																					"src": "5736:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5751:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "5736:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5732:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 726,
																		"initializationExpression": {
																			"expression": {
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 702,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5721:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"id": 703,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 647,
																					"src": "5725:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5721:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 705,
																			"nodeType": "ExpressionStatement",
																			"src": "5721:9:0"
																		},
																		"loopExpression": {
																			"expression": {
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "++",
																				"prefix": false,
																				"src": "5754:3:0",
																				"subExpression": {
																					"id": 712,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 669,
																					"src": "5754:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 714,
																			"nodeType": "ExpressionStatement",
																			"src": "5754:3:0"
																		},
																		"nodeType": "ForStatement",
																		"src": "5716:108:0"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 727,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "5842:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "5842:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5842:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 731,
																		"nodeType": "ExpressionStatement",
																		"src": "5842:11:0"
																	},
																	{
																		"expression": {
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "--",
																			"prefix": false,
																			"src": "5872:3:0",
																			"subExpression": {
																				"id": 732,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 650,
																				"src": "5872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 734,
																		"nodeType": "ExpressionStatement",
																		"src": "5872:3:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 653,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 654,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5351:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5351:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5347:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"initializationExpression": {
													"assignments": [
														650
													],
													"declarations": [
														{
															"constant": false,
															"id": 650,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5340:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 738,
															"src": "5335:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 649,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5335:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 652,
													"initialValue": {
														"hexValue": "30",
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5344:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5335:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5365:3:0",
														"subExpression": {
															"id": 657,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "5365:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 659,
													"nodeType": "ExpressionStatement",
													"src": "5365:3:0"
												},
												"nodeType": "ForStatement",
												"src": "5330:572:0"
											},
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "5912:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 740,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "5921:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5921:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5912:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "5912:21:0"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distinct",
									"nameLocation": "5206:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5233:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5215:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 637,
													"nodeType": "ArrayTypeName",
													"src": "5215:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5214:25:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "5266:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "5258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5257:16:0"
									},
									"scope": 848,
									"src": "5197:744:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 795,
										"nodeType": "Block",
										"src": "6046:244:0",
										"statements": [
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 755,
														"name": "maxValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "6057:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 756,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6068:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 758,
														"indexExpression": {
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6074:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6057:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "6057:19:0"
											},
											{
												"expression": {
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 761,
														"name": "maxIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "6087:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6098:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6087:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 764,
												"nodeType": "ExpressionStatement",
												"src": "6087:12:0"
											},
											{
												"body": {
													"id": 793,
													"nodeType": "Block",
													"src": "6149:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 776,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 748,
																		"src": "6167:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "6173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6167:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 779,
																	"name": "maxValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "6178:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 792,
															"nodeType": "IfStatement",
															"src": "6164:108:0",
															"trueBody": {
																"id": 791,
																"nodeType": "Block",
																"src": "6187:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 781,
																				"name": "maxValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "6206:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 782,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "6217:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 784,
																				"indexExpression": {
																					"id": 783,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "6223:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6217:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6206:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 786,
																		"nodeType": "ExpressionStatement",
																		"src": "6206:19:0"
																	},
																	{
																		"expression": {
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 787,
																				"name": "maxIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "6244:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 788,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "6255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6244:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 790,
																		"nodeType": "ExpressionStatement",
																		"src": "6244:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "6128:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 770,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "6132:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6132:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6128:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 794,
												"initializationExpression": {
													"assignments": [
														766
													],
													"declarations": [
														{
															"constant": false,
															"id": 766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6122:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 794,
															"src": "6114:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 768,
													"initialValue": {
														"hexValue": "30",
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6114:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6145:3:0",
														"subExpression": {
															"id": 773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "6145:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 775,
													"nodeType": "ExpressionStatement",
													"src": "6145:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6110:173:0"
											}
										]
									},
									"id": 796,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "5958:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "5980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "5962:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5962:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 747,
													"nodeType": "ArrayTypeName",
													"src": "5962:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:25:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "maxValue",
												"nameLocation": "6018:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6010:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "maxIndex",
												"nameLocation": "6036:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "6028:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:36:0"
									},
									"scope": 848,
									"src": "5949:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "6395:244:0",
										"statements": [
											{
												"expression": {
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 806,
														"name": "minValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "6406:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 807,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 809,
														"indexExpression": {
															"hexValue": "30",
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6423:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6417:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6406:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "6406:19:0"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 812,
														"name": "minIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "6436:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6436:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "6436:12:0"
											},
											{
												"body": {
													"id": 844,
													"nodeType": "Block",
													"src": "6498:134:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 827,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 799,
																		"src": "6516:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	"id": 829,
																	"indexExpression": {
																		"id": 828,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "6522:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6516:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 830,
																	"name": "minValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6527:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6516:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 843,
															"nodeType": "IfStatement",
															"src": "6513:108:0",
															"trueBody": {
																"id": 842,
																"nodeType": "Block",
																"src": "6536:85:0",
																"statements": [
																	{
																		"expression": {
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 832,
																				"name": "minValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 802,
																				"src": "6555:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 833,
																					"name": "array",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 799,
																					"src": "6566:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																						"typeString": "uint256[] storage pointer"
																					}
																				},
																				"id": 835,
																				"indexExpression": {
																					"id": 834,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 817,
																					"src": "6572:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6566:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6555:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 837,
																		"nodeType": "ExpressionStatement",
																		"src": "6555:19:0"
																	},
																	{
																		"expression": {
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 838,
																				"name": "minIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 804,
																				"src": "6593:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 839,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "6604:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6593:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 841,
																		"nodeType": "ExpressionStatement",
																		"src": "6593:12:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "6477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 821,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 799,
															"src": "6481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6481:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6477:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"initializationExpression": {
													"assignments": [
														817
													],
													"declarations": [
														{
															"constant": false,
															"id": 817,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6471:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 845,
															"src": "6463:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 816,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 819,
													"initialValue": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6475:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6463:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6494:3:0",
														"subExpression": {
															"id": 824,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "6494:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"nodeType": "ExpressionStatement",
													"src": "6494:3:0"
												},
												"nodeType": "ForStatement",
												"src": "6459:173:0"
											}
										]
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "6307:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "6329:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6311:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 797,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6311:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 798,
													"nodeType": "ArrayTypeName",
													"src": "6311:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6310:25:0"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "minValue",
												"nameLocation": "6367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "minIndex",
												"nameLocation": "6385:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "6377:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:36:0"
									},
									"scope": 848,
									"src": "6298:341:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1368,
							"src": "2267:4377:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 849,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1472,
										"src": "6668:7:0"
									},
									"id": 850,
									"nodeType": "InheritanceSpecifier",
									"src": "6668:7:0"
								},
								{
									"baseName": {
										"id": 851,
										"name": "ERC1155Holder",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1686,
										"src": "6678:13:0"
									},
									"id": 852,
									"nodeType": "InheritanceSpecifier",
									"src": "6678:13:0"
								}
							],
							"canonicalName": "Farming",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1367,
							"linearizedBaseContracts": [
								1367,
								1686,
								1720,
								1635,
								2365,
								2377,
								1472,
								2341
							],
							"name": "Farming",
							"nameLocation": "6657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 855,
									"libraryName": {
										"id": 853,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2689,
										"src": "6704:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6698:27:0",
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6717:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 859,
									"libraryName": {
										"id": 856,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2022,
										"src": "6737:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "6731:27:0",
									"typeName": {
										"id": 858,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 857,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1798,
											"src": "6751:6:0"
										},
										"referencedDeclaration": 1798,
										"src": "6751:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1798",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "Farming.UserInfo",
									"id": 866,
									"members": [
										{
											"constant": false,
											"id": 861,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "6805:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6797:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 860,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6797:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 863,
											"mutability": "mutable",
											"name": "lastUpdateTime",
											"nameLocation": "6861:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6853:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 862,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6853:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 865,
											"mutability": "mutable",
											"name": "pointsDebt",
											"nameLocation": "6967:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 866,
											"src": "6959:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 864,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "6959:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "6777:8:0",
									"nodeType": "StructDefinition",
									"scope": 1367,
									"src": "6770:282:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Farming.NFTInfo",
									"id": 875,
									"members": [
										{
											"constant": false,
											"id": 868,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "7098:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7090:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 867,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7090:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 870,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "7132:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7124:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 869,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7124:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 872,
											"mutability": "mutable",
											"name": "remaining",
											"nameLocation": "7175:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7167:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 871,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7167:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 874,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "7234:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 875,
											"src": "7226:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 873,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "NFTInfo",
									"nameLocation": "7071:7:0",
									"nodeType": "StructDefinition",
									"scope": 1367,
									"src": "7064:224:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5fcbd285",
									"id": 878,
									"mutability": "mutable",
									"name": "lpToken",
									"nameLocation": "7314:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7300:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1798",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 877,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 876,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1798,
											"src": "7300:6:0"
										},
										"referencedDeclaration": 1798,
										"src": "7300:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1798",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6c9bd47",
									"id": 881,
									"mutability": "mutable",
									"name": "nftIds",
									"nameLocation": "7385:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7368:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7368:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 880,
										"nodeType": "ArrayTypeName",
										"src": "7368:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a87430ba",
									"id": 886,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "7434:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7398:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
										"typeString": "mapping(address => struct Farming.UserInfo)"
									},
									"typeName": {
										"id": 885,
										"keyType": {
											"id": 882,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7406:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7398:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
											"typeString": "mapping(address => struct Farming.UserInfo)"
										},
										"valueType": {
											"id": 884,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 883,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 866,
												"src": "7417:8:0"
											},
											"referencedDeclaration": 866,
											"src": "7417:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
												"typeString": "struct Farming.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 889,
									"mutability": "mutable",
									"name": "lpUnitValue",
									"nameLocation": "7464:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7448:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 887,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7448:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303635",
										"id": 888,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7478:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1065_by_1",
											"typeString": "int_const 1065"
										},
										"value": "1065"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 892,
									"mutability": "mutable",
									"name": "timeUnitValue",
									"nameLocation": "7505:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7489:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 890,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7489:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "383634303030",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "7521:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_864000_by_1",
											"typeString": "int_const 864000"
										},
										"value": "864000"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 901,
									"mutability": "mutable",
									"name": "threshold",
									"nameLocation": "7550:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1367,
									"src": "7534:66:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 893,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7534:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 900,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 896,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"leftExpression": {
												"id": 894,
												"name": "lpUnitValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 889,
												"src": "7562:11:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "BinaryOperation",
											"operator": "*",
											"rightExpression": {
												"id": 895,
												"name": "timeUnitValue",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 892,
												"src": "7576:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "7562:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 899,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 897,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7592:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 898,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "7598:2:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "7592:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "7562:38:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "601a6ec53ec4046203ac233b5fd42d196f8437baa1df272d33125d6904f31002",
									"id": 911,
									"name": "NFTAdded",
									"nameLocation": "7615:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "7640:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "7624:31:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7665:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "7657:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "7677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "7669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "7692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "7684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7623:75:0"
									},
									"src": "7609:90:0"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 917,
									"name": "Staked",
									"nameLocation": "7711:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7734:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7718:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7718:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7748:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "7740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:38:0"
									},
									"src": "7705:51:0"
								},
								{
									"anonymous": false,
									"eventSelector": "34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7",
									"id": 925,
									"name": "Claim",
									"nameLocation": "7768:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7790:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "7774:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftId",
												"nameLocation": "7804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "7796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "7819:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "7811:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7773:55:0"
									},
									"src": "7762:67:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 931,
									"name": "Withdrawn",
									"nameLocation": "7841:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7867:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7851:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7881:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:38:0"
									},
									"src": "7835:54:0"
								},
								{
									"body": {
										"id": 934,
										"nodeType": "Block",
										"src": "7922:8:0",
										"statements": []
									},
									"id": 935,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7912:2:0"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7922:0:0"
									},
									"scope": 1367,
									"src": "7901:29:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "8088:168:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8130:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 952,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8138:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 948,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8099:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8099:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8099:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "8099:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 959,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 963,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8224:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																],
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 961,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8216:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8216:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 965,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "8231:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 966,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "8236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8245:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 956,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "8162:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 955,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "8153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1594_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8153:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1594",
																"typeString": "contract IERC1155"
															}
														},
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1593,
														"src": "8153:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8153:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "8153:95:0"
											}
										]
									},
									"functionSelector": "63c66891",
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 946,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 945,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1414,
												"src": "8079:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8079:9:0"
										}
									],
									"name": "addNFTBatch",
									"nameLocation": "7947:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "7977:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "7969:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7969:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "8023:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8006:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 938,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 939,
													"nodeType": "ArrayTypeName",
													"src": "8006:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "8054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "8037:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 941,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 942,
													"nodeType": "ArrayTypeName",
													"src": "8037:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7958:110:0"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8088:0:0"
									},
									"scope": 1367,
									"src": "7938:318:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "8408:434:0",
										"statements": [
											{
												"assignments": [
													986
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "8436:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "8419:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 984,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8419:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 985,
															"nodeType": "ArrayTypeName",
															"src": "8419:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 992,
												"initialValue": {
													"arguments": [
														{
															"id": 990,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "8456:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8442:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 988,
															"nodeType": "ArrayTypeName",
															"src": "8446:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8442:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8419:47:0"
											},
											{
												"assignments": [
													997
												],
												"declarations": [
													{
														"constant": false,
														"id": 997,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "8494:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1057,
														"src": "8477:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 995,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 996,
															"nodeType": "ArrayTypeName",
															"src": "8477:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1003,
												"initialValue": {
													"arguments": [
														{
															"id": 1001,
															"name": "idsNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "8518:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "8504:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 998,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8508:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"nodeType": "ArrayTypeName",
															"src": "8508:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8504:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8477:51:0"
											},
											{
												"body": {
													"id": 1033,
													"nodeType": "Block",
													"src": "8593:78:0",
													"statements": [
														{
															"expression": {
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1017,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "8608:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1021,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1018,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "8612:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1019,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "8614:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8612:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8608:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1022,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "8623:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8608:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1024,
															"nodeType": "ExpressionStatement",
															"src": "8608:16:0"
														},
														{
															"expression": {
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1025,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 997,
																		"src": "8639:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1029,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1026,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "8647:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1027,
																			"name": "start",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "8649:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8647:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8639:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8658:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8639:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1032,
															"nodeType": "ExpressionStatement",
															"src": "8639:20:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1008,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "8563:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1009,
																	"name": "idsNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 977,
																	"src": "8568:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1010,
																	"name": "start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "8580:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8568:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1012,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8567:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8563:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1034,
												"initializationExpression": {
													"assignments": [
														1005
													],
													"declarations": [
														{
															"constant": false,
															"id": 1005,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8552:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1034,
															"src": "8544:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1004,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1007,
													"initialValue": {
														"id": 1006,
														"name": "start",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "8556:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8544:17:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8588:3:0",
														"subExpression": {
															"id": 1014,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "8588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1016,
													"nodeType": "ExpressionStatement",
													"src": "8588:3:0"
												},
												"nodeType": "ForStatement",
												"src": "8539:132:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8714:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1039,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "8722:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"expression": {
															"id": 1035,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8683:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "extend",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "8683:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256[] memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8683:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "8683:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8790:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8790:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1050,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8810:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8802:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8802:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8802:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "8817:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1053,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "8822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8831:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1043,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "8748:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1042,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "8739:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1594_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8739:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1594",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeBatchTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1593,
														"src": "8739:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8739:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "8739:95:0"
											}
										]
									},
									"functionSelector": "4b02218f",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 980,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 979,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1414,
												"src": "8398:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "8398:9:0"
										}
									],
									"name": "addNftBatchWithNumber",
									"nameLocation": "8273:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "8313:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "8305:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "start",
												"nameLocation": "8350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "8342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "idsNumber",
												"nameLocation": "8374:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "8366:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8294:96:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8408:0:0"
									},
									"scope": 1367,
									"src": "8264:578:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1121,
										"nodeType": "Block",
										"src": "8890:478:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1066,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8940:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8940:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1070,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8973:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8965:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8965:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8965:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1072,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "8993:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1063,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "8901:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1855,
														"src": "8901:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1798_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8901:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "8901:109:0"
											},
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9048:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1121,
														"src": "9031:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1076,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1075,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "9031:8:0"
															},
															"referencedDeclaration": 866,
															"src": "9031:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"baseExpression": {
														"id": 1078,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "9055:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1081,
													"indexExpression": {
														"expression": {
															"id": 1079,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9061:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9061:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9055:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9031:41:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1083,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "9133:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "9133:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9133:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1097,
												"nodeType": "IfStatement",
												"src": "9130:91:0",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "9151:70:0",
													"statements": [
														{
															"expression": {
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1087,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "9166:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																			"typeString": "struct Farming.UserInfo storage pointer"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "pointsDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 865,
																	"src": "9166:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1091,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "9198:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "9198:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1090,
																		"name": "pointsBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "9184:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9184:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9166:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "9166:43:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1098,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "9231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "9231:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1104,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "9261:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1101,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "9245:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "9245:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2553,
															"src": "9245:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9245:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9231:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "9231:37:0"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1108,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "9279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "9279:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1111,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9301:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9279:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "9279:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1116,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9341:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9341:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1118,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "9353:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1115,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "9334:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9334:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1120,
												"nodeType": "EmitStatement",
												"src": "9329:31:0"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "8859:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8873:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "8865:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8864:16:0"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8890:0:0"
									},
									"scope": 1367,
									"src": "8850:518:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1210,
										"nodeType": "Block",
										"src": "9476:762:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1128,
																	"name": "nftIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "9495:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9495:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9511:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9495:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c204e465473206661726d6564",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9514:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
																"typeString": "literal_string \"All NFTs farmed\""
															},
															"value": "All NFTs farmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d80b05015909c7444370cc407b3526f28827b921cafb09cae9277dd7329392f0",
																"typeString": "literal_string \"All NFTs farmed\""
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9487:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9487:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "9487:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1137,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9565:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9565:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1136,
																	"name": "pointsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "9551:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9551:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1140,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "9580:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9551:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420506f696e7473",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9591:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
																"typeString": "literal_string \"Insufficient Points\""
															},
															"value": "Insufficient Points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c40c3e93fe58dd47f9785c667d773221dbb12a235d6570dcb4b80ea59500df1a",
																"typeString": "literal_string \"Insufficient Points\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9543:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9543:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "9543:70:0"
											},
											{
												"assignments": [
													1147
												],
												"declarations": [
													{
														"constant": false,
														"id": 1147,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9641:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "9624:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1146,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1145,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "9624:8:0"
															},
															"referencedDeclaration": 866,
															"src": "9624:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1152,
												"initialValue": {
													"baseExpression": {
														"id": 1148,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "9648:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1151,
													"indexExpression": {
														"expression": {
															"id": 1149,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "9654:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "9654:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9648:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9624:41:0"
											},
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1153,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9712:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pointsDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "9712:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1161,
																"name": "threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 901,
																"src": "9760:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1157,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "9744:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "9744:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "pointsBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "9730:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9730:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2568,
															"src": "9730:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9730:40:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9712:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "9712:58:0"
											},
											{
												"expression": {
													"id": 1170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1165,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "9781:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "9781:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1168,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9803:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9803:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9781:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1171,
												"nodeType": "ExpressionStatement",
												"src": "9781:37:0"
											},
											{
												"assignments": [
													1173,
													1175
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "9848:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "9840:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1172,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1175,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "9868:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1210,
														"src": "9860:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1174,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9860:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1180,
												"initialValue": {
													"arguments": [
														{
															"id": 1178,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9905:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1176,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "9877:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "9877:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9877:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9839:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1184,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "9961:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														{
															"id": 1185,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "9969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1181,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "9923:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "removeByIndex",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "9923:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9923:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "9923:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1194,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10081:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Farming_$1367",
																		"typeString": "contract Farming"
																	}
																],
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10073:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1192,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10073:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10073:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10101:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10101:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1198,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "10126:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10151:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "",
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10167:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1189,
																	"name": "nftContractAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1124,
																	"src": "10022:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1188,
																"name": "IERC1155",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "10013:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155_$1594_$",
																	"typeString": "type(contract IERC1155)"
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10013:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155_$1594",
																"typeString": "contract IERC1155"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1577,
														"src": "10013:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10013:167:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "10013:167:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10204:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10204:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "minTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "10216:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10228:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1203,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "10198:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10198:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "EmitStatement",
												"src": "10193:37:0"
											}
										]
									},
									"functionSelector": "1e83409a",
									"id": 1211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "9435:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "nftContractAddress",
												"nameLocation": "9449:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "9441:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9440:28:0"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9476:0:0"
									},
									"scope": 1367,
									"src": "9426:812:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1272,
										"nodeType": "Block",
										"src": "10297:454:0",
										"statements": [
											{
												"assignments": [
													1218
												],
												"declarations": [
													{
														"constant": false,
														"id": 1218,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10325:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1272,
														"src": "10308:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1217,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1216,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "10308:8:0"
															},
															"referencedDeclaration": 866,
															"src": "10308:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"baseExpression": {
														"id": 1219,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "10332:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1222,
													"indexExpression": {
														"expression": {
															"id": 1220,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10338:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10338:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10332:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10308:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1225,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "10368:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "10368:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1227,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "10383:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10368:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b6564",
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10391:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
																"typeString": "literal_string \"Insufficient staked\""
															},
															"value": "Insufficient staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_792f9899b413442b000bd9f500bc05841888451f0fba80222ec5e21178eb00bf",
																"typeString": "literal_string \"Insufficient staked\""
															}
														],
														"id": 1224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10360:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10360:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "10360:53:0"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1232,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10459:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "pointsDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "10459:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1236,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10491:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10491:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1235,
															"name": "pointsBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "10477:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10477:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10459:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "10459:43:0"
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1241,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10513:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1243,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "10513:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1247,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1213,
																"src": "10543:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 1244,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1218,
																	"src": "10527:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																		"typeString": "struct Farming.UserInfo storage pointer"
																	}
																},
																"id": 1245,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "10527:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2568,
															"src": "10527:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10527:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10513:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "10513:37:0"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1251,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "10561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo storage pointer"
															}
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastUpdateTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 863,
														"src": "10561:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1254,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10583:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10583:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "10561:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1261,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "10679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1258,
															"name": "lpToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "10619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1829,
														"src": "10619:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1798_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10619:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "10619:77:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1267,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10724:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10724:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1269,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "10736:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1266,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10714:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10714:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1271,
												"nodeType": "EmitStatement",
												"src": "10709:34:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "10265:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10282:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "10274:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10273:16:0"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10297:0:0"
									},
									"scope": 1367,
									"src": "10256:495:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "10788:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1277,
																	"name": "users",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "10808:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
																		"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
																	}
																},
																"id": 1280,
																"indexExpression": {
																	"expression": {
																		"id": 1278,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10814:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10814:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10808:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_storage",
																	"typeString": "struct Farming.UserInfo storage ref"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "10808:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1276,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "10799:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10799:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "10799:34:0"
											}
										]
									},
									"functionSelector": "e9fad8ee",
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exit",
									"nameLocation": "10772:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10776:2:0"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10788:0:0"
									},
									"scope": 1367,
									"src": "10763:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "10923:117:0",
										"statements": [
											{
												"assignments": [
													1294
												],
												"declarations": [
													{
														"constant": false,
														"id": 1294,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "10950:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "10934:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
															"typeString": "struct Farming.UserInfo"
														},
														"typeName": {
															"id": 1293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1292,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 866,
																"src": "10934:8:0"
															},
															"referencedDeclaration": 866,
															"src": "10934:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
																"typeString": "struct Farming.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1298,
												"initialValue": {
													"baseExpression": {
														"id": 1295,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "10957:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$866_storage_$",
															"typeString": "mapping(address => struct Farming.UserInfo storage ref)"
														}
													},
													"id": 1297,
													"indexExpression": {
														"id": 1296,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "10963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10957:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage",
														"typeString": "struct Farming.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10934:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1303,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1294,
																	"src": "11026:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																		"typeString": "struct Farming.UserInfo memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																		"typeString": "struct Farming.UserInfo memory"
																	}
																],
																"id": 1302,
																"name": "_unDebitedPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "11009:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_UserInfo_$866_memory_ptr_$returns$_t_uint256_$",
																	"typeString": "function (struct Farming.UserInfo memory) view returns (uint256)"
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11009:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1299,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "10989:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																	"typeString": "struct Farming.UserInfo memory"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pointsDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 865,
															"src": "10989:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2553,
														"src": "10989:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10989:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1306,
												"nodeType": "Return",
												"src": "10982:50:0"
											}
										]
									},
									"functionSelector": "25ca4cff",
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pointsBalance",
									"nameLocation": "10862:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "10876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10876:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10875:17:0"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "10914:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10914:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10913:9:0"
									},
									"scope": 1367,
									"src": "10853:187:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "11132:123:0",
										"statements": [
											{
												"assignments": [
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "blockTime",
														"nameLocation": "11151:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "11143:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1316,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11143:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1320,
												"initialValue": {
													"expression": {
														"id": 1318,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "11163:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "11163:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11143:35:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1327,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "11235:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																	"typeString": "struct Farming.UserInfo memory"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "11235:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1323,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1311,
																		"src": "11210:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
																			"typeString": "struct Farming.UserInfo memory"
																		}
																	},
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lastUpdateTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 863,
																	"src": "11210:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1321,
																	"name": "blockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "11196:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2568,
																"src": "11196:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11196:34:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2583,
														"src": "11196:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11196:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1315,
												"id": 1330,
												"nodeType": "Return",
												"src": "11189:58:0"
											}
										]
									},
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unDebitedPoints",
									"nameLocation": "11061:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "11094:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "11078:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$866_memory_ptr",
													"typeString": "struct Farming.UserInfo"
												},
												"typeName": {
													"id": 1310,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1309,
														"name": "UserInfo",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 866,
														"src": "11078:8:0"
													},
													"referencedDeclaration": 866,
													"src": "11078:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$866_storage_ptr",
														"typeString": "struct Farming.UserInfo"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11077:22:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "11123:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11122:9:0"
									},
									"scope": 1367,
									"src": "11052:203:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "11317:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1337,
														"name": "nftIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "11335:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "11335:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1336,
												"id": 1339,
												"nodeType": "Return",
												"src": "11328:20:0"
											}
										]
									},
									"functionSelector": "0af2c6ca",
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nftCount",
									"nameLocation": "11276:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11284:2:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "11308:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11307:9:0"
									},
									"scope": 1367,
									"src": "11267:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "11423:120:0",
										"statements": [
											{
												"assignments": [
													1347,
													1349
												],
												"declarations": [
													{
														"constant": false,
														"id": 1347,
														"mutability": "mutable",
														"name": "minTokenId",
														"nameLocation": "11443:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1357,
														"src": "11435:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1346,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1349,
														"mutability": "mutable",
														"name": "index",
														"nameLocation": "11463:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1357,
														"src": "11455:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1354,
												"initialValue": {
													"arguments": [
														{
															"id": 1352,
															"name": "nftIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "11500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														],
														"expression": {
															"id": 1350,
															"name": "LibArrayForUint256Utils",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "11472:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LibArrayForUint256Utils_$848_$",
																"typeString": "type(library LibArrayForUint256Utils)"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "11472:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$dyn_storage_ptr_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (uint256[] storage pointer) view returns (uint256,uint256)"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11472:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11434:73:0"
											},
											{
												"expression": {
													"id": 1355,
													"name": "minTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1347,
													"src": "11525:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1356,
												"nodeType": "Return",
												"src": "11518:17:0"
											}
										]
									},
									"functionSelector": "55ac2fd3",
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getNextNftTokenId",
									"nameLocation": "11373:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11390:2:0"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "11414:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11414:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11413:9:0"
									},
									"scope": 1367,
									"src": "11364:179:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "11605:35:0",
										"statements": [
											{
												"expression": {
													"id": 1363,
													"name": "threshold",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 901,
													"src": "11623:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1364,
												"nodeType": "Return",
												"src": "11616:16:0"
											}
										]
									},
									"functionSelector": "e75235b8",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getThreshold",
									"nameLocation": "11560:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11572:2:0"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "11596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11595:9:0"
									},
									"scope": 1367,
									"src": "11551:89:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1368,
							"src": "6648:5001:0",
							"usedErrors": []
						}
					],
					"src": "59:11590:0"
				},
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2341
						],
						"Ownable": [
							1472
						]
					},
					"id": 1473,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1369,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1473,
							"sourceUnit": 2342,
							"src": "117:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1372,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2341,
										"src": "687:7:1"
									},
									"id": 1373,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1371,
								"nodeType": "StructuredDocumentation",
								"src": "151:505:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1472,
							"linearizedBaseContracts": [
								1472,
								2341
							],
							"name": "Ownable",
							"nameLocation": "676:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1375,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "718:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 1472,
									"src": "702:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1374,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1381,
									"name": "OwnershipTransferred",
									"nameLocation": "739:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "776:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "760:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "807:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "791:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "759:57:1"
									},
									"src": "733:84:1"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "938:51:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2331,
																"src": "968:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "968:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1385,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "949:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "949:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "949:32:1"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "825:93:1",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1391,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:2:1"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "938:0:1"
									},
									"scope": 1472,
									"src": "924:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "1125:32:1",
										"statements": [
											{
												"expression": {
													"id": 1397,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1375,
													"src": "1143:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1398,
												"nodeType": "Return",
												"src": "1136:13:1"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "997:67:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1079:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:2:1"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "1116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:9:1"
									},
									"scope": 1472,
									"src": "1070:87:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "1271:99:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1404,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "1290:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1290:7:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1406,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2331,
																	"src": "1301:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1301:12:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1290:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1315:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1282:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1282:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "1282:68:1"
											},
											{
												"id": 1412,
												"nodeType": "PlaceholderStatement",
												"src": "1361:1:1"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "1165:79:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1414,
									"name": "onlyOwner",
									"nameLocation": "1259:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1268:2:1"
									},
									"src": "1250:120:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "1775:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1805:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1805:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1805:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1420,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "1786:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "1786:30:1"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "1378:337:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1414,
												"src": "1765:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1765:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1730:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:2:1"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1775:0:1"
									},
									"scope": 1472,
									"src": "1721:103:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "2049:131:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1431,
																"src": "2068:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2088:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2080:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2080:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2080:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2068:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2060:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "2060:73:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1447,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2163:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1446,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1471,
														"src": "2144:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2144:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "2144:28:1"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "1832:141:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1433,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1414,
												"src": "2039:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2039:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1988:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2014:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "2006:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2005:18:1"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2049:0:1"
									},
									"scope": 1472,
									"src": "1979:201:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "2403:128:1",
										"statements": [
											{
												"assignments": [
													1458
												],
												"declarations": [
													{
														"constant": false,
														"id": 1458,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2422:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 1470,
														"src": "2414:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1457,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2414:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1460,
												"initialValue": {
													"id": 1459,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1375,
													"src": "2433:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2414:25:1"
											},
											{
												"expression": {
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1461,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2450:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1462,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "2459:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2450:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1464,
												"nodeType": "ExpressionStatement",
												"src": "2450:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1466,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1458,
															"src": "2504:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "2514:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1465,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "2483:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2483:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "EmitStatement",
												"src": "2478:45:1"
											}
										]
									},
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "2188:146:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2349:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2376:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2368:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2368:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2367:18:1"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:1"
									},
									"scope": 1472,
									"src": "2340:191:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1473,
							"src": "658:1876:1",
							"usedErrors": []
						}
					],
					"src": "90:2446:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155.sol",
					"exportedSymbols": {
						"IERC1155": [
							1594
						],
						"IERC165": [
							2377
						]
					},
					"id": 1595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1474,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "98:23:2"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1475,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 2378,
							"src": "125:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1477,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2377,
										"src": "370:7:2"
									},
									"id": 1478,
									"nodeType": "InheritanceSpecifier",
									"src": "370:7:2"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1476,
								"nodeType": "StructuredDocumentation",
								"src": "176:170:2",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1594,
							"linearizedBaseContracts": [
								1594,
								2377
							],
							"name": "IERC1155",
							"nameLocation": "358:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "385:123:2",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1491,
									"name": "TransferSingle",
									"nameLocation": "520:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "551:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "535:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "577:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "561:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "561:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "599:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "583:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "583:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "611:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "603:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "623:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "615:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "534:95:2"
									},
									"src": "514:116:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "638:147:2",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1506,
									"name": "TransferBatch",
									"nameLocation": "797:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "837:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "821:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "872:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "856:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "903:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "887:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "926:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "916:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1499,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1500,
													"nodeType": "ArrayTypeName",
													"src": "916:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1504,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "950:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1502,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "940:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1503,
													"nodeType": "ArrayTypeName",
													"src": "940:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:153:2"
									},
									"src": "791:173:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "972:150:2",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1515,
									"name": "ApprovalForAll",
									"nameLocation": "1134:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1165:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1149:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1190:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1174:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1205:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1200:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1200:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1148:66:2"
									},
									"src": "1128:87:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "1223:349:2",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1522,
									"name": "URI",
									"nameLocation": "1584:3:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1595:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1588:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1517,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1520,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1618:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "1602:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:34:2"
									},
									"src": "1578:44:2"
								},
								{
									"documentation": {
										"id": 1523,
										"nodeType": "StructuredDocumentation",
										"src": "1630:179:2",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1824:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1842:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1834:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1834:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1833:29:2"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "1886:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:9:2"
									},
									"scope": 1594,
									"src": "1815:80:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1533,
										"nodeType": "StructuredDocumentation",
										"src": "1903:194:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2112:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2146:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2127:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2127:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "2127:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2175:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2156:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1537,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2156:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1538,
													"nodeType": "ArrayTypeName",
													"src": "2156:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:53:2"
									},
									"returnParameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "2230:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1541,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2230:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1542,
													"nodeType": "ArrayTypeName",
													"src": "2230:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:18:2"
									},
									"scope": 1594,
									"src": "2103:145:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "2256:256:2",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2527:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2553:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2545:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2545:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2568:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2563:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:33:2"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2586:0:2"
									},
									"scope": 1594,
									"src": "2518:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2595:139:2",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2774:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2766:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2791:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2783:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2783:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:35:2"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2824:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2824:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:6:2"
									},
									"scope": 1594,
									"src": "2740:90:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2838:571:2",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3424:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3459:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3451:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3482:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3474:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3503:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3495:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3524:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3516:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3516:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3556:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "3541:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3440:127:2"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3576:0:2"
									},
									"scope": 1594,
									"src": "3415:162:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "3585:400:2",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "4000:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4040:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4032:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4063:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4055:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4055:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "4095:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4076:22:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1583,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4076:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1584,
													"nodeType": "ArrayTypeName",
													"src": "4076:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4128:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4109:26:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1586,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4109:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1587,
													"nodeType": "ArrayTypeName",
													"src": "4109:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4161:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "4146:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1589,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4021:151:2"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4181:0:2"
									},
									"scope": 1594,
									"src": "3991:191:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1595,
							"src": "348:3837:2",
							"usedErrors": []
						}
					],
					"src": "98:4089:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							1635
						],
						"IERC165": [
							2377
						]
					},
					"id": 1636,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1596,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1597,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1636,
							"sourceUnit": 2378,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1599,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2377,
										"src": "257:7:3"
									},
									"id": 1600,
									"nodeType": "InheritanceSpecifier",
									"src": "257:7:3"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1598,
								"nodeType": "StructuredDocumentation",
								"src": "184:41:3",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1635,
							"linearizedBaseContracts": [
								1635,
								2377
							],
							"name": "IERC1155Receiver",
							"nameLocation": "237:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1601,
										"nodeType": "StructuredDocumentation",
										"src": "272:828:3",
										"text": "@dev Handles the receipt of a single ERC1155 token type. This function is\ncalled at the end of a `safeTransferFrom` after the balance has been updated.\nTo accept the transfer, this must return\n`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n(i.e. 0xf23a6e61, or its own function selector).\n@param operator The address which initiated the transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param id The ID of the token being transferred\n@param value The amount of tokens being transferred\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1616,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1115:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1151:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1143:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1178:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1170:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1201:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1193:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1222:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1214:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1253:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1238:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1610,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1238:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:132:3"
									},
									"returnParameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1283:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:8:3"
									},
									"scope": 1635,
									"src": "1106:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "1299:989:3",
										"text": "@dev Handles the receipt of a multiple ERC1155 token types. This function\nis called at the end of a `safeBatchTransferFrom` after the balances have\nbeen updated. To accept the transfer(s), this must return\n`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n(i.e. 0xbc197c81, or its own function selector).\n@param operator The address which initiated the batch transfer (i.e. msg.sender)\n@param from The address which previously owned the token\n@param ids An array containing ids of each token being transferred (order and length must match values array)\n@param values An array containing amounts of each token being transferred (order and length must match ids array)\n@param data Additional data with no specified format\n@return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1634,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2303:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2344:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2336:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2371:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2363:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2405:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2386:22:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1622,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1623,
													"nodeType": "ArrayTypeName",
													"src": "2386:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2438:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2419:25:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1625,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2419:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1626,
													"nodeType": "ArrayTypeName",
													"src": "2419:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2470:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2455:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1628,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2455:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:156:3"
									},
									"returnParameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "2500:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1631,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2500:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:8:3"
									},
									"scope": 1635,
									"src": "2294:214:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1636,
							"src": "227:2284:3",
							"usedErrors": []
						}
					],
					"src": "106:2407:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							1686
						],
						"ERC1155Receiver": [
							1720
						],
						"ERC165": [
							2365
						],
						"IERC1155Receiver": [
							1635
						],
						"IERC165": [
							2377
						]
					},
					"id": 1687,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1637,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
							"file": "./ERC1155Receiver.sol",
							"id": 1638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1687,
							"sourceUnit": 1721,
							"src": "136:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1640,
										"name": "ERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1720,
										"src": "240:15:4"
									},
									"id": 1641,
									"nodeType": "InheritanceSpecifier",
									"src": "240:15:4"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1639,
								"nodeType": "StructuredDocumentation",
								"src": "171:41:4",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1686,
							"linearizedBaseContracts": [
								1686,
								1720,
								1635,
								2365,
								2377
							],
							"name": "ERC1155Holder",
							"nameLocation": "223:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1616
									],
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "433:57:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1657,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "451:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1686",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "451:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "451:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1656,
												"id": 1660,
												"nodeType": "Return",
												"src": "444:38:4"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "272:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1653,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "407:8:4"
									},
									"parameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "300:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "318:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "336:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "354:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "372:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1650,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "372:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:102:4"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "425:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1654,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "425:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:8:4"
									},
									"scope": 1686,
									"src": "263:227:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1634
									],
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "691:62:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1680,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "709:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1686",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1685,
														"src": "709:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "709:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1679,
												"id": 1683,
												"nodeType": "Return",
												"src": "702:43:4"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "507:22:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1676,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "665:8:4"
									},
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "540:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "558:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "558:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "576:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1667,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "576:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1668,
													"nodeType": "ArrayTypeName",
													"src": "576:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "603:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1670,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "603:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1671,
													"nodeType": "ArrayTypeName",
													"src": "603:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "630:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1673,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "630:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:120:4"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "683:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "683:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:8:4"
									},
									"scope": 1686,
									"src": "498:255:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1687,
							"src": "214:542:4",
							"usedErrors": []
						}
					],
					"src": "109:649:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol",
					"exportedSymbols": {
						"ERC1155Receiver": [
							1720
						],
						"ERC165": [
							2365
						],
						"IERC1155Receiver": [
							1635
						],
						"IERC165": [
							2377
						]
					},
					"id": 1721,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1688,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 1689,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1721,
							"sourceUnit": 1636,
							"src": "138:33:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 1690,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1721,
							"sourceUnit": 2366,
							"src": "173:49:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1692,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2365,
										"src": "306:6:5"
									},
									"id": 1693,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								},
								{
									"baseName": {
										"id": 1694,
										"name": "IERC1155Receiver",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1635,
										"src": "314:16:5"
									},
									"id": 1695,
									"nodeType": "InheritanceSpecifier",
									"src": "314:16:5"
								}
							],
							"canonicalName": "ERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1691,
								"nodeType": "StructuredDocumentation",
								"src": "226:41:5",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1720,
							"linearizedBaseContracts": [
								1720,
								1635,
								2365,
								2377
							],
							"name": "ERC1155Receiver",
							"nameLocation": "287:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2364,
										2376
									],
									"body": {
										"id": 1718,
										"nodeType": "Block",
										"src": "510:115:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1706,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "528:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1635,
																		"src": "548:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1635_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1635_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 1707,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "543:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "543:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$1635",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "543:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "528:49:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1714,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1698,
																"src": "605:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1712,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "581:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Receiver_$1720_$",
																	"typeString": "type(contract super ERC1155Receiver)"
																}
															},
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2364,
															"src": "581:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "581:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "528:89:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1705,
												"id": 1717,
												"nodeType": "Return",
												"src": "521:96:5"
											}
										]
									},
									"documentation": {
										"id": 1696,
										"nodeType": "StructuredDocumentation",
										"src": "338:58:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "411:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1702,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1700,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2365,
												"src": "478:6:5"
											},
											{
												"id": 1701,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2377,
												"src": "486:7:5"
											}
										],
										"src": "469:25:5"
									},
									"parameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "436:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "429:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1697,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "429:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:20:5"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1719,
												"src": "504:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1703,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "504:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:6:5"
									},
									"scope": 1720,
									"src": "402:223:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1721,
							"src": "269:359:5",
							"usedErrors": []
						}
					],
					"src": "111:519:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1798
						]
					},
					"id": 1799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1722,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1723,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1798,
							"linearizedBaseContracts": [
								1798
							],
							"name": "IERC20",
							"nameLocation": "205:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1729,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:6"
									},
									"returnParameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "339:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:6"
									},
									"scope": 1798,
									"src": "293:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1737,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:6"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:6"
									},
									"scope": 1798,
									"src": "436:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "512:215:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "742:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "759:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "751:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "778:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "770:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:35:6"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "804:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:6"
									},
									"scope": 1798,
									"src": "733:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "818:270:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1103:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1121:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1113:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1136:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1128:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:32:6"
									},
									"returnParameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1168:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:9:6"
									},
									"scope": 1798,
									"src": "1094:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "1185:655:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1855:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1871:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1863:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1880:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:6"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1767,
												"src": "1914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:6:6"
									},
									"scope": 1798,
									"src": "1846:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1768,
										"nodeType": "StructuredDocumentation",
										"src": "1928:304:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2247:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2278:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2270:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2295:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2331:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2323:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:85:6"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "2363:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:6"
									},
									"scope": 1798,
									"src": "2238:131:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "2377:163:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1788,
									"name": "Transfer",
									"nameLocation": "2552:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2577:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2561:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2599:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2583:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1788,
												"src": "2603:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:6"
									},
									"src": "2546:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1789,
										"nodeType": "StructuredDocumentation",
										"src": "2626:151:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1797,
									"name": "Approval",
									"nameLocation": "2789:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2814:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2798:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1793,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2837:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2821:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1795,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2854:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "2846:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:63:6"
									},
									"src": "2783:78:6"
								}
							],
							"scope": 1799,
							"src": "195:2669:6",
							"usedErrors": []
						}
					],
					"src": "94:2772:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							2319
						],
						"IERC20": [
							1798
						],
						"SafeERC20": [
							2022
						]
					},
					"id": 2023,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:7"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2023,
							"sourceUnit": 1799,
							"src": "130:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2023,
							"sourceUnit": 2320,
							"src": "155:36:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1803,
								"nodeType": "StructuredDocumentation",
								"src": "195:465:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 2022,
							"linearizedBaseContracts": [
								2022
							],
							"name": "SafeERC20",
							"nameLocation": "670:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1806,
									"libraryName": {
										"id": 1804,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2319,
										"src": "693:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "687:26:7",
									"typeName": {
										"id": 1805,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "827:105:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "858:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1820,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "888:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1798",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1747,
																		"src": "888:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "888:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1823,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "913:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1824,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "917:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1818,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "865:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1819,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "865:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1816,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "838:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "838:86:7"
											}
										]
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "730:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "760:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "753:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1808,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1807,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "753:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "753:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "784:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "776:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "797:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:75:7"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:7"
									},
									"scope": 2022,
									"src": "721:211:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1854,
										"nodeType": "Block",
										"src": "1073:115:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1842,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1832,
															"src": "1104:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1845,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1832,
																			"src": "1134:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1798",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1779,
																		"src": "1134:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1134:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1848,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "1163:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1849,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1836,
																	"src": "1169:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1850,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1838,
																	"src": "1173:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1843,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1111:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1111:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1841,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "1084:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1853,
												"nodeType": "ExpressionStatement",
												"src": "1084:96:7"
											}
										]
									},
									"id": 1855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "949:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "983:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "976:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1830,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "976:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "976:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1007:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "999:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1030:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "1022:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1855,
												"src": "1043:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:98:7"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:7"
									},
									"scope": 2022,
									"src": "940:248:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "1567:506:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1867,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "1821:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1821:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1870,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1820:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1875,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1861:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$2022",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$2022",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1853:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1873,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1853:7:7",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1876,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1853:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1877,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1861,
																					"src": "1868:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1871,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1859,
																					"src": "1837:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1798",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1757,
																				"src": "1837:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1878,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1837:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1880:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1837:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1881,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1836:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:56:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:166:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1885,
												"nodeType": "ExpressionStatement",
												"src": "1798:166:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1887,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "1995:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1890,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1859,
																			"src": "2025:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1798",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1767,
																		"src": "2025:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2025:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1893,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "2049:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1894,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1863,
																	"src": "2058:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1888,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2002:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2002:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1886,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "1975:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "1975:90:7"
											}
										]
									},
									"documentation": {
										"id": 1856,
										"nodeType": "StructuredDocumentation",
										"src": "1196:255:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1466:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1495:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1488:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1857,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "1488:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "1488:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1545:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "1537:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:80:7"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:7"
									},
									"scope": 2022,
									"src": "1457:616:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1934,
										"nodeType": "Block",
										"src": "2201:197:7",
										"statements": [
											{
												"assignments": [
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2220:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1934,
														"src": "2212:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2212:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1921,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1915,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2259:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$2022",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$2022",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1913,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:13:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1917,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "2266:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1911,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "2235:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1798",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1757,
															"src": "2235:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1918,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2235:39:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1919,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "2277:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:47:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1923,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1902,
															"src": "2313:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1926,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1902,
																			"src": "2343:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1798",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1767,
																		"src": "2343:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2343:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1929,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1904,
																	"src": "2367:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1930,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1910,
																	"src": "2376:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1924,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2320:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2320:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1798",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1922,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2021,
														"src": "2293:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1933,
												"nodeType": "ExpressionStatement",
												"src": "2293:97:7"
											}
										]
									},
									"id": 1935,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2129:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2122:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1901,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1900,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "2122:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "2122:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2153:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2145:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1935,
												"src": "2171:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:80:7"
									},
									"returnParameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:7"
									},
									"scope": 2022,
									"src": "2081:317:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "2526:377:7",
										"statements": [
											{
												"id": 1981,
												"nodeType": "UncheckedBlock",
												"src": "2537:359:7",
												"statements": [
													{
														"assignments": [
															1946
														],
														"declarations": [
															{
																"constant": false,
																"id": 1946,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2570:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 1981,
																"src": "2562:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1945,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1955,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1951,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2609:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$2022",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$2022",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2601:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1949,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2601:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2601:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1953,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "2616:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1947,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "2585:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1798",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1757,
																"src": "2585:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2562:62:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1957,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1946,
																		"src": "2647:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1958,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "2663:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2647:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1960,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2670:43:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1956,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2639:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:75:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1962,
														"nodeType": "ExpressionStatement",
														"src": "2639:75:7"
													},
													{
														"assignments": [
															1964
														],
														"declarations": [
															{
																"constant": false,
																"id": 1964,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2737:12:7",
																"nodeType": "VariableDeclaration",
																"scope": 1981,
																"src": "2729:20:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1963,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1968,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1967,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1965,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1946,
																"src": "2752:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1966,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "2767:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2729:43:7"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1970,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "2807:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1798",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1973,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1938,
																					"src": "2837:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1798",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1767,
																				"src": "2837:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2837:22:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1976,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1940,
																			"src": "2861:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1977,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "2870:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1971,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2814:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2814:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2814:69:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1798",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1969,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2021,
																"src": "2787:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1798_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:97:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1980,
														"nodeType": "ExpressionStatement",
														"src": "2787:97:7"
													}
												]
											}
										]
									},
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2415:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2447:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1937,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1936,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "2447:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "2447:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2478:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2470:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2504:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "2496:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:80:7"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:7"
									},
									"scope": 2022,
									"src": "2406:497:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2020,
										"nodeType": "Block",
										"src": "3364:646:7",
										"statements": [
											{
												"assignments": [
													1993
												],
												"declarations": [
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3731:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 2020,
														"src": "3718:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1992,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3718:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"initialValue": {
													"arguments": [
														{
															"id": 1999,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1989,
															"src": "3772:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3778:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1996,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "3752:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1798",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1798",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3744:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3744:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3744:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2113,
														"src": "3744:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3718:95:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2003,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "3828:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3828:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3828:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2019,
												"nodeType": "IfStatement",
												"src": "3824:179:7",
												"trueBody": {
													"id": 2018,
													"nodeType": "Block",
													"src": "3851:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2010,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1993,
																				"src": "3925:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2012,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3938:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 2011,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3938:4:7",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2013,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3937:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 2008,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3914:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3914:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3914:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 2015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3946:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 2007,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2017,
															"nodeType": "ExpressionStatement",
															"src": "3906:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "2911:377:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 2021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3303:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3330:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "3323:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1798",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1986,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1985,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "3323:6:7"
													},
													"referencedDeclaration": 1798,
													"src": "3323:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1798",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 2021,
												"src": "3337:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1988,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:33:7"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:0:7"
									},
									"scope": 2022,
									"src": "3294:716:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2023,
							"src": "662:3351:7",
							"usedErrors": []
						}
					],
					"src": "103:3912:7"
				},
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2319
						]
					},
					"id": 2320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2024,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2025,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2319,
							"linearizedBaseContracts": [
								2319
							],
							"name": "Address",
							"nameLocation": "195:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "863:321:8",
										"statements": [
											{
												"assignments": [
													2034
												],
												"declarations": [
													{
														"constant": false,
														"id": 2034,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "1065:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2033,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2035,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:8"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:8"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:8"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 2028,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:8",
														"valueSize": 1
													},
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:8",
														"valueSize": 1
													}
												],
												"id": 2036,
												"nodeType": "InlineAssembly",
												"src": "1088:63:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2037,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2034,
														"src": "1168:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2032,
												"id": 2040,
												"nodeType": "Return",
												"src": "1161:15:8"
											}
										]
									},
									"documentation": {
										"id": 2026,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:8",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "817:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:8"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "857:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2030,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:8"
									},
									"scope": 2319,
									"src": "797:387:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "2190:246:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2053,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2319",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2319",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2051,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2056,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "2234:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 2058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 2050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:8"
											},
											{
												"assignments": [
													2062,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2075,
														"src": "2288:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2061,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2069,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 2063,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2045,
																"src": "2306:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 2064,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2065,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2047,
																"src": "2328:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2071,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "2358:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 2070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:8"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2138:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 2044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "2165:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:8"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:8"
									},
									"scope": 2319,
									"src": "2119:317:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2092,
										"nodeType": "Block",
										"src": "3287:86:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2087,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "3318:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2088,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "3326:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 2086,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2093,
															2113
														],
														"referencedDeclaration": 2113,
														"src": "3305:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2085,
												"id": 2091,
												"nodeType": "Return",
												"src": "3298:67:8"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 2093,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3220:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3236:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:8"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2093,
												"src": "3273:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:8"
									},
									"scope": 2319,
									"src": "3198:175:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "3754:78:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2106,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2096,
															"src": "3794:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2107,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "3802:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 2109,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "3811:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2105,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2133,
															2183
														],
														"referencedDeclaration": 2183,
														"src": "3772:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2104,
												"id": 2111,
												"nodeType": "Return",
												"src": "3765:59:8"
											}
										]
									},
									"documentation": {
										"id": 2094,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3635:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3660:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2097,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3688:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2099,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:8"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "3740:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2102,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:8"
									},
									"scope": 2319,
									"src": "3603:229:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "4354:113:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2126,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "4394:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2127,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "4402:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2128,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "4408:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 2129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 2125,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2133,
															2183
														],
														"referencedDeclaration": 2183,
														"src": "4372:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2124,
												"id": 2131,
												"nodeType": "Return",
												"src": "4365:94:8"
											}
										]
									},
									"documentation": {
										"id": 2114,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 2133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "4248:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "4273:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "4301:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:8"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2133,
												"src": "4340:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:8"
									},
									"scope": 2319,
									"src": "4207:260:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "4907:326:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2150,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2319",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2319",
																				"typeString": "library Address"
																			}
																		],
																		"id": 2149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2148,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2153,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "4951:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 2147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2157,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2160,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2136,
																	"src": "5029:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2159,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "5018:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 2158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2164,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:8"
											},
											{
												"assignments": [
													2166,
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2166,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "5084:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2165,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2182,
														"src": "5098:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2167,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2175,
												"initialValue": {
													"arguments": [
														{
															"id": 2173,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "5151:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2169,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2136,
																"src": "5125:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2140,
																"src": "5144:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2177,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2166,
															"src": "5191:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2178,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2168,
															"src": "5200:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2179,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "5212:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2176,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "5174:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2146,
												"id": 2181,
												"nodeType": "Return",
												"src": "5167:58:8"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:8",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4764:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4789:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4817:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4841:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2141,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:8"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "4893:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:8"
									},
									"scope": 2319,
									"src": "4723:510:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "5518:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2194,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "5555:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2188,
															"src": "5563:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 2193,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2200,
															2235
														],
														"referencedDeclaration": 2235,
														"src": "5536:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2192,
												"id": 2198,
												"nodeType": "Return",
												"src": "5529:80:8"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5446:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5462:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:8"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "5504:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2190,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:8"
									},
									"scope": 2319,
									"src": "5418:199:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "5971:233:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2214,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "6001:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2213,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "5990:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 2212,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2218,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:8"
											},
											{
												"assignments": [
													2220,
													2222
												],
												"declarations": [
													{
														"constant": false,
														"id": 2220,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "6063:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2219,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2222,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2234,
														"src": "6077:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2221,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2227,
												"initialValue": {
													"arguments": [
														{
															"id": 2225,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2205,
															"src": "6122:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "6104:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2229,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2220,
															"src": "6162:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2230,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2222,
															"src": "6171:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2231,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "6183:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2228,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "6145:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2211,
												"id": 2233,
												"nodeType": "Return",
												"src": "6138:58:8"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5847:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5872:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5900:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2206,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:8"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "5957:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2209,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:8"
									},
									"scope": 2319,
									"src": "5809:395:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "6488:103:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2238,
															"src": "6527:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2247,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "6535:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 2245,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2252,
															2287
														],
														"referencedDeclaration": 2287,
														"src": "6506:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2244,
												"id": 2250,
												"nodeType": "Return",
												"src": "6499:84:8"
											}
										]
									},
									"documentation": {
										"id": 2236,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "6421:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2240,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "6437:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:8"
									},
									"returnParameters": {
										"id": 2244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "6474:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:8"
									},
									"scope": 2319,
									"src": "6391:200:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2286,
										"nodeType": "Block",
										"src": "6944:237:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2266,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2255,
																	"src": "6974:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2265,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2042,
																"src": "6963:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 2264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:8"
											},
											{
												"assignments": [
													2272,
													2274
												],
												"declarations": [
													{
														"constant": false,
														"id": 2272,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "7038:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2271,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2274,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 2286,
														"src": "7052:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2273,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2279,
												"initialValue": {
													"arguments": [
														{
															"id": 2277,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2257,
															"src": "7099:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2275,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2255,
															"src": "7079:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2281,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "7139:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2282,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2274,
															"src": "7148:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2283,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "7160:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2280,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2318,
														"src": "7122:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2263,
												"id": 2285,
												"nodeType": "Return",
												"src": "7115:58:8"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "6825:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2257,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "6850:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "6878:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2258,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:8"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "6930:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2261,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:8"
									},
									"scope": 2319,
									"src": "6785:396:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "7573:548:8",
										"statements": [
											{
												"condition": {
													"id": 2299,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2290,
													"src": "7588:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2315,
													"nodeType": "Block",
													"src": "7647:467:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2303,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2292,
																		"src": "7733:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2313,
																"nodeType": "Block",
																"src": "8048:55:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2310,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2294,
																					"src": "8074:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2309,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2312,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:8"
																	}
																]
															},
															"id": 2314,
															"nodeType": "IfStatement",
															"src": "7729:374:8",
															"trueBody": {
																"id": 2308,
																"nodeType": "Block",
																"src": "7756:286:8",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:8",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:8",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:8"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:8"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:8",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:8",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:8"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:8"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:8"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:8"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:8"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:8"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2292,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:8",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2292,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:8",
																				"valueSize": 1
																			}
																		],
																		"id": 2307,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:8"
																	}
																]
															}
														}
													]
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "7584:530:8",
												"trueBody": {
													"id": 2302,
													"nodeType": "Block",
													"src": "7597:44:8",
													"statements": [
														{
															"expression": {
																"id": 2300,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "7619:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2298,
															"id": 2301,
															"nodeType": "Return",
															"src": "7612:17:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:8",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "7445:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2292,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "7468:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "7502:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:8"
									},
									"returnParameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "7559:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:8"
									},
									"scope": 2319,
									"src": "7409:712:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2320,
							"src": "187:7937:8",
							"usedErrors": []
						}
					],
					"src": "89:8037:8"
				},
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2341
						]
					},
					"id": 2342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2322,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2341,
							"linearizedBaseContracts": [
								2341
							],
							"name": "Context",
							"nameLocation": "641:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2330,
										"nodeType": "Block",
										"src": "718:36:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2327,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2326,
												"id": 2329,
												"nodeType": "Return",
												"src": "729:17:9"
											}
										]
									},
									"id": 2331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2331,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 2341,
									"src": "656:98:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "829:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2336,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2335,
												"id": 2338,
												"nodeType": "Return",
												"src": "840:15:9"
											}
										]
									},
									"id": 2340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:9"
									},
									"returnParameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "813:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:9"
									},
									"scope": 2341,
									"src": "762:101:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2342,
							"src": "623:243:9",
							"usedErrors": []
						}
					],
					"src": "89:779:9"
				},
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2365
						],
						"IERC165": [
							2377
						]
					},
					"id": 2366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:10"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2366,
							"sourceUnit": 2378,
							"src": "129:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2346,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2377,
										"src": "775:7:10"
									},
									"id": 2347,
									"nodeType": "InheritanceSpecifier",
									"src": "775:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2345,
								"nodeType": "StructuredDocumentation",
								"src": "156:589:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2365,
							"linearizedBaseContracts": [
								2365,
								2377
							],
							"name": "ERC165",
							"nameLocation": "765:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2376
									],
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "945:66:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2356,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "963:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2358,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2377,
																	"src": "983:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2377_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2377_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2357,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "978:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "978:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2377",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "978:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "963:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2355,
												"id": 2362,
												"nodeType": "Return",
												"src": "956:47:10"
											}
										]
									},
									"documentation": {
										"id": 2348,
										"nodeType": "StructuredDocumentation",
										"src": "790:58:10",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "863:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2352,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "921:8:10"
									},
									"parameters": {
										"id": 2351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "888:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "881:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2349,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "881:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "880:20:10"
									},
									"returnParameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "939:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2353,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "939:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:6:10"
									},
									"scope": 2365,
									"src": "854:157:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2366,
							"src": "747:267:10",
							"usedErrors": []
						}
					],
					"src": "102:914:10"
				},
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2377
						]
					},
					"id": 2378,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2368,
								"nodeType": "StructuredDocumentation",
								"src": "130:287:11",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2377,
							"linearizedBaseContracts": [
								2377
							],
							"name": "IERC165",
							"nameLocation": "429:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "444:347:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "806:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "831:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "824:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2370,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:20:11"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "867:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "867:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:6:11"
									},
									"scope": 2377,
									"src": "797:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2378,
							"src": "419:457:11",
							"usedErrors": []
						}
					],
					"src": "103:775:11"
				},
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							2689
						]
					},
					"id": 2690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2379,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2380,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:12",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 2689,
							"linearizedBaseContracts": [
								2689
							],
							"name": "SafeMath",
							"nameLocation": "490:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2411,
										"nodeType": "Block",
										"src": "723:146:12",
										"statements": [
											{
												"id": 2410,
												"nodeType": "UncheckedBlock",
												"src": "734:128:12",
												"statements": [
													{
														"assignments": [
															2393
														],
														"declarations": [
															{
																"constant": false,
																"id": 2393,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2410,
																"src": "759:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2394,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2383,
																"src": "771:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2395,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2385,
																"src": "775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2398,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2393,
																"src": "795:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2399,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2383,
																"src": "799:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2405,
														"nodeType": "IfStatement",
														"src": "791:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2402,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2403,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2391,
															"id": 2404,
															"nodeType": "Return",
															"src": "802:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2407,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "848:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2408,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2391,
														"id": 2409,
														"nodeType": "Return",
														"src": "834:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:12",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "663:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "674:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:12"
									},
									"returnParameters": {
										"id": 2391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "708:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2412,
												"src": "714:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:12"
									},
									"scope": 2689,
									"src": "647:222:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2439,
										"nodeType": "Block",
										"src": "1098:118:12",
										"statements": [
											{
												"id": 2438,
												"nodeType": "UncheckedBlock",
												"src": "1109:100:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2424,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "1138:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2425,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2415,
																"src": "1142:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2431,
														"nodeType": "IfStatement",
														"src": "1134:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1153:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1152:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2423,
															"id": 2430,
															"nodeType": "Return",
															"src": "1145:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2433,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "1191:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2434,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2417,
																		"src": "1195:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1191:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2436,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1184:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2423,
														"id": 2437,
														"nodeType": "Return",
														"src": "1177:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2413,
										"nodeType": "StructuredDocumentation",
										"src": "877:139:12",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2440,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1031:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1038:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1049:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:12"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1083:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2419,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2440,
												"src": "1089:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:15:12"
									},
									"scope": 2689,
									"src": "1022:194:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "1447:427:12",
										"statements": [
											{
												"id": 2480,
												"nodeType": "UncheckedBlock",
												"src": "1458:409:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2452,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "1720:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1725:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1720:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2459,
														"nodeType": "IfStatement",
														"src": "1716:28:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2457,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1735:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2451,
															"id": 2458,
															"nodeType": "Return",
															"src": "1728:16:12"
														}
													},
													{
														"assignments": [
															2461
														],
														"declarations": [
															{
																"constant": false,
																"id": 2461,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1767:1:12",
																"nodeType": "VariableDeclaration",
																"scope": 2480,
																"src": "1759:9:12",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2460,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1759:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2465,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2462,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2443,
																"src": "1771:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2463,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "1775:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1771:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1759:17:12"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "1795:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2467,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2443,
																	"src": "1799:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2469,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2445,
																"src": "1804:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1795:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2475,
														"nodeType": "IfStatement",
														"src": "1791:33:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1815:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1822:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2473,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1814:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2451,
															"id": 2474,
															"nodeType": "Return",
															"src": "1807:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2477,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2461,
																	"src": "1853:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2478,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1846:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2451,
														"id": 2479,
														"nodeType": "Return",
														"src": "1839:16:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2441,
										"nodeType": "StructuredDocumentation",
										"src": "1224:141:12",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1380:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1395:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "1387:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2445,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1406:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "1398:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:12"
									},
									"returnParameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "1432:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "1438:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:15:12"
									},
									"scope": 2689,
									"src": "1371:503:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2509,
										"nodeType": "Block",
										"src": "2106:119:12",
										"statements": [
											{
												"id": 2508,
												"nodeType": "UncheckedBlock",
												"src": "2117:101:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2487,
																"src": "2146:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2146:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2501,
														"nodeType": "IfStatement",
														"src": "2142:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2499,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2161:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2493,
															"id": 2500,
															"nodeType": "Return",
															"src": "2154:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2503,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2485,
																		"src": "2200:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2504,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2487,
																		"src": "2204:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2200:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2506,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2193:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2493,
														"id": 2507,
														"nodeType": "Return",
														"src": "2186:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "1882:142:12",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2039:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2054:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2046:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2065:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2057:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:22:12"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2091:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2489,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2510,
												"src": "2097:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:15:12"
									},
									"scope": 2689,
									"src": "2030:195:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2537,
										"nodeType": "Block",
										"src": "2467:119:12",
										"statements": [
											{
												"id": 2536,
												"nodeType": "UncheckedBlock",
												"src": "2478:101:12",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2522,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2515,
																"src": "2507:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2507:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2529,
														"nodeType": "IfStatement",
														"src": "2503:29:12",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2530:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2522:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2521,
															"id": 2528,
															"nodeType": "Return",
															"src": "2515:17:12"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2555:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2531,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2513,
																		"src": "2561:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2532,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2515,
																		"src": "2565:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2561:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2521,
														"id": 2535,
														"nodeType": "Return",
														"src": "2547:20:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2511,
										"nodeType": "StructuredDocumentation",
										"src": "2233:152:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 2538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2400:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2415:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2407:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2426:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2418:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:22:12"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2452:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2517,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2452:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2458:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:15:12"
									},
									"scope": 2689,
									"src": "2391:195:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2552,
										"nodeType": "Block",
										"src": "2900:31:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2548,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2541,
														"src": "2918:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2549,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2543,
														"src": "2922:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2547,
												"id": 2551,
												"nodeType": "Return",
												"src": "2911:12:12"
											}
										]
									},
									"documentation": {
										"id": 2539,
										"nodeType": "StructuredDocumentation",
										"src": "2594:233:12",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 2553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2842:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2854:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "2846:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2865:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "2857:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:22:12"
									},
									"returnParameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "2891:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:9:12"
									},
									"scope": 2689,
									"src": "2833:98:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2567,
										"nodeType": "Block",
										"src": "3281:31:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2563,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2556,
														"src": "3299:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2564,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2558,
														"src": "3303:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2562,
												"id": 2566,
												"nodeType": "Return",
												"src": "3292:12:12"
											}
										]
									},
									"documentation": {
										"id": 2554,
										"nodeType": "StructuredDocumentation",
										"src": "2939:269:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3223:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2556,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3235:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3227:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3246:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3238:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:22:12"
									},
									"returnParameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2568,
												"src": "3272:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:9:12"
									},
									"scope": 2689,
									"src": "3214:98:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "3638:31:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2578,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "3656:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2579,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2573,
														"src": "3660:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2577,
												"id": 2581,
												"nodeType": "Return",
												"src": "3649:12:12"
											}
										]
									},
									"documentation": {
										"id": 2569,
										"nodeType": "StructuredDocumentation",
										"src": "3320:245:12",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3580:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3592:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "3584:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3603:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "3595:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:22:12"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "3629:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:9:12"
									},
									"scope": 2689,
									"src": "3571:98:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2597,
										"nodeType": "Block",
										"src": "4037:31:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2593,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2586,
														"src": "4055:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2594,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "4059:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2592,
												"id": 2596,
												"nodeType": "Return",
												"src": "4048:12:12"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "3677:287:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3979:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3991:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "3983:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2588,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4002:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "3994:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:22:12"
									},
									"returnParameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2598,
												"src": "4028:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:9:12"
									},
									"scope": 2689,
									"src": "3970:98:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2612,
										"nodeType": "Block",
										"src": "4602:31:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2608,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2601,
														"src": "4620:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 2609,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2603,
														"src": "4624:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2607,
												"id": 2611,
												"nodeType": "Return",
												"src": "4613:12:12"
											}
										]
									},
									"documentation": {
										"id": 2599,
										"nodeType": "StructuredDocumentation",
										"src": "4076:453:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4544:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4556:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "4548:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4567:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "4559:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:22:12"
									},
									"returnParameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2613,
												"src": "4593:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:12"
									},
									"scope": 2689,
									"src": "4535:98:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2637,
										"nodeType": "Block",
										"src": "5241:111:12",
										"statements": [
											{
												"id": 2636,
												"nodeType": "UncheckedBlock",
												"src": "5252:93:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2626,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2618,
																		"src": "5285:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 2627,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2616,
																		"src": "5290:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5285:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2629,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2620,
																	"src": "5293:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2625,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5277:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5277:29:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2631,
														"nodeType": "ExpressionStatement",
														"src": "5277:29:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2632,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2616,
																"src": "5328:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 2633,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2618,
																"src": "5332:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5328:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2624,
														"id": 2635,
														"nodeType": "Return",
														"src": "5321:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2614,
										"nodeType": "StructuredDocumentation",
										"src": "4641:465:12",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 2638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5121:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5143:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "5135:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2618,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5163:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "5155:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5189:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "5175:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2619,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5175:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:84:12"
									},
									"returnParameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2638,
												"src": "5232:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:9:12"
									},
									"scope": 2689,
									"src": "5112:240:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2662,
										"nodeType": "Block",
										"src": "5979:110:12",
										"statements": [
											{
												"id": 2661,
												"nodeType": "UncheckedBlock",
												"src": "5990:92:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2651,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2643,
																		"src": "6023:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6027:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6023:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2654,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2645,
																	"src": "6030:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2650,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6015:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2656,
														"nodeType": "ExpressionStatement",
														"src": "6015:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2657,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2641,
																"src": "6065:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2658,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "6069:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6065:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2649,
														"id": 2660,
														"nodeType": "Return",
														"src": "6058:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2639,
										"nodeType": "StructuredDocumentation",
										"src": "5360:484:12",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5859:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5881:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "5873:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5901:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "5893:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "5913:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:84:12"
									},
									"returnParameters": {
										"id": 2649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2663,
												"src": "5970:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:9:12"
									},
									"scope": 2689,
									"src": "5850:239:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "6881:110:12",
										"statements": [
											{
												"id": 2686,
												"nodeType": "UncheckedBlock",
												"src": "6892:92:12",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2676,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2668,
																		"src": "6925:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6929:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6925:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 2679,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2670,
																	"src": "6932:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2675,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6917:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 2680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:28:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 2681,
														"nodeType": "ExpressionStatement",
														"src": "6917:28:12"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2682,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2666,
																"src": "6967:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 2683,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2668,
																"src": "6971:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2674,
														"id": 2685,
														"nodeType": "Return",
														"src": "6960:12:12"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "6097:649:12",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6761:3:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6783:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6775:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6795:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6829:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6815:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6815:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:84:12"
									},
									"returnParameters": {
										"id": 2674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "6872:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:9:12"
									},
									"scope": 2689,
									"src": "6752:239:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2690,
							"src": "482:6512:12",
							"usedErrors": []
						}
					],
					"src": "95:6901:12"
				},
				"id": 12
			}
		}
	}
}